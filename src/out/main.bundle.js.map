{"version":3,"sources":["webpack:///main.bundle.js","webpack:///./js/main.js","webpack:///./~/ramda/dist/ramda.js","webpack:///./~/kefir/dist/kefir.js","webpack:///./~/paper/dist/paper-full.js","webpack:///./js/Element.mutation.js","webpack:///./js/VolumeCtrl.js","webpack:///./js/dialogue.js","webpack:///./js/story.js","webpack:///./css/global.css","webpack:///./~/kefir.atom/lib/kefir.atom.js","webpack:///./~/partial.lenses/lib/partial.lenses.js","webpack:///./css/global.css?e5e1"],"names":["webpackJsonp",0,"module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_ref","rect","res_rect","_ramda2","clone","margin","x","y","width","height","_ref2","size","rem","this","padding","list","length","cur","i","group","bounds","_ref4","button","remove","_ref3","forEach","set","prop","val","toggleCharacters","graphene","visible","carbon","talk_text","g_text","c_text","_paper2","view","draw","update","_ref5","window","next","showDialogue","choices","story","isArrayLike","dbuttons","create","calculate","innerHeight","innerWidth","content","who","say","len","t","timeout_id","setTimeout","_ref6","show","current","video","console","log","addEventListener","container","appendChild","play","_ref7","e","wheelDelta","volumeModifier","_ref8","mod","volume","modify","old","_ref9","point","Point","_ref10","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_paper","_story","_story2","_VolumeCtrl","_VolumeCtrl2","_kefir","_kefir2","_kefir3","_ramda","R","p","Kefir","Observable","prototype","pluck","map","lensProp","DialogueButtons","key","value","_this","choice","n","Group","text","PointText","fillColor","fontFamily","fontWeight","fontSize","font_size","justification","onClick","main_button","setBounds","calculateButtonSize","addChild","getBounds","canvas","guz","onBefore","setPosition","center","location","href","resize","fromEvents","toProperty","arg","clearTimeout","hasChoices","hasDialogue","get","document","getElementById","onValue","setup","Raster","scale","position","importSVG","setViewSize","onMouseDown","volCtrl",47,"__","@@functional/placeholder","_arity","fn","apply","arguments","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_arrayFromIterator","iter","done","push","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_complement","f","_concat","set1","set2","idx","len1","len2","result","_containsWith","pred","_filter","_forceReduced","@@transducer/value","@@transducer/reduced","_has","Object","hasOwnProperty","call","_identity","_isArguments","toString","_isArray","Array","isArray","_isInteger","Number","isInteger","_isNumber","_isObject","_isPlaceholder","a","_isRegExp","_isString","_isTransformer","_map","functor","_of","_pipe","g","_pipeP","ctx","then","_quote","s","escaped","replace","_reduced","_slice","args","from","to","Math","max","min","_toISOString","pad","Date","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","_xfBase","init","xf","_xwrap","XWrap","acc","_aperture","limit","_checkForMethod","methodname","_curry1","f1","_curry2","f2","b","_b","_a","_curry3","f3","c","_c","_curryN","received","combined","argsIdx","left","combinedIdx","_dispatchable","transducer","_dropLastWhile","_xall","XAll","all","input","_xany","XAny","any","_xaperture","XAperture","pos","full","store","getCopy","_xdrop","XDrop","_xdropLast","XDropLast","_xdropRepeatsWith","XDropRepeatsWith","lastValue","undefined","seenFirstValue","sameAsLast","_xdropWhile","XDropWhile","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","last","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xtake","XTake","_xtakeWhile","XTakeWhile","add","adjust","start","_idx","_list","always","and","aperture","append","el","assoc","assocPath","path","bind","thisObj","both","comparator","cond","pairs","countBy","counts","curryN","dec","defaultTo","v","differenceWith","first","second","out","firstLen","dissoc","dissocPath","head","tail","divide","dropWhile","either","empty","constructor","evolve","transformations","object","transformation","type","find","findIndex","findLast","findLastIndex","fromPairs","gt","gte","has","hasIn","identical","identity","ifElse","condition","onTrue","onFalse","inc","insert","elt","splice","insertAll","elts","intersperse","separator","is","Ctor","String","nodeType","isNil","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","keysIn","NaN","lt","lte","mapAccum","tuple","mapAccumRight","match","rx","str","mathMod","m","maxBy","mergeWithKey","l","r","k","minBy","modulo","multiply","nAry","negate","none","not","nth","offset","charAt","nthArg","objOf","of","once","called","or","over","Identity","lens","pair","fst","snd","paths","pathOr","pathSatisfies","propPath","pick","names","pickAll","name","pickBy","test","prepend","propOr","propSatisfies","props","ps","range","TypeError","reduceRight","reduced","count","regex","replacement","reverse","split","join","scan","fromIndex","toIndex","sort","sortBy","aa","bb","splitAt","index","array","splitEvery","splitWhen","prefix","subtract","Infinity","take","xs","takeLastWhile","takeWhile","tap","times","isNaN","RangeError","toPairs","toPairsIn","transpose","outerlist","innerlist","j","trim","ws","zeroWidth","hasProtoTrim","beginRx","endRx","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","uniqWith","unless","whenFalseFn","useWith","transformers","concat","values","vals","valuesIn","vs","Const","when","whenTrueFn","where","spec","testObj","wrap","wrapper","xprod","ilen","jlen","zip","rv","zipObj","zipWith","F","T","_clone","refFrom","refTo","copy","copiedValue","valueOf","_createPartialApplicator","_dropLast","_equals","stackA","stackB","equals","message","entries","keysA","pop","_makeFlat","recursive","flatt","_reduce","_arrayReduce","_iterableReduce","step","_methodReduce","reduce","symIterator","Symbol","iterator","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_xgroupBy","XGroupBy","inputs","addIndex","origFn","binary","curry","drop","dropLast","dropLastWhile","filter","filterable","flatten","flip","groupBy","indexBy","elem","intersectionWith","list1","list2","results","invert","invertObj","isEmpty","lastIndexOf","target","mapObjIndexed","mergeWith","_","_l","_r","partial","partialRight","partition","pathEq","_path","project","propEq","propIs","reject","repeat","sum","takeLast","transduce","unionWith","whereEq","_flatCat","preservingReduced","@@transducer/init","@@transducer/result","@@transducer/step","ret","rxf","_indexOf","inf","indexOf","_xchain","allPass","preds","allUniq","anyPass","ap","applicative","chain","monad","commuteMap","consF","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","after","fns","context","dropRepeatsWith","eqBy","eqProps","obj1","obj2","juxt","getter","setter","lensIndex","lensPath","liftN","arity","lifted","mean","median","merge","mergeAll","pipe","pipeP","product","sequence","traversable","traverse","unnest","_contains","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","_toString","seen","recur","mapPairs","repr","commute","compose","composeK","composeP","construct","difference","dropRepeats","into","lift","omit","pipeK","uniqBy","Set","appliedItem","applied","newSetSize","prevSetSize","nullExists","negZeroExists","without","complement","invoker","method","Function","memoize","cache","toLower","toUpper","uniq","intersection","symmetricDifference","symmetricDifferenceWith","union",148,"factory","createObj","proto","extend","inherit","Child","Parent","arr","findByPred","cloneArray","fillArray","slide","callSubscriber","event","ANY","VALUE","ERROR","Dispatcher","_items","_inLoop","_removedItems","_dispatcher","_active","_alive","_activating","_logHandlers","Stream","Property","_currentEvent","never","neverS","timeBased","mixin","AnonymousStream","wait","options","_wait","_intervalId","_$onTick","_onTick","_init","_free","_onActivation","setInterval","_onDeactivation","clearInterval","_clear","later","S","interval","S$1","sequentially","S$2","fromPoll","S$3","emitter","obs","_emitValue","error","_emitError","end","_emitEnd","_emit","emit","emitEvent","withInterval","S$4","S$5","_fn","_unsubscribe","stream","fromCallback","callbackConsumer","setName","fromNodeCallback","spread","aLength","fromSubUnsub","sub","unsub","transformer","handler","eventName","P","constant","P$1","constantError","createConstructor","BaseClass","_source","_name","_$handleAny","_handleAny","createClassMethods","_handleValue","_handleError","_handleEnd","END","onAny","offAny","createStream","createProperty","P$2","changes","S$6","fromPromise","promise","onError","_promise","getGlodalPromise","Promise","toPromise","resolve","symbol_","fromESObservable","_observable","observable","symbol","subscribe","complete","unsubscribe","ESObservable","takeErrors","toESObservable","map$1","id","_ofSameType","S$7","P$3","id$1","S$8","P$4","S$9","P$5","S$10","P$6","id$2","S$11","P$7","S$12","P$8","skip","S$13","P$9","skipWhile","id$3","S$14","P$10","skipDuplicates","eq","S$15","P$11","defaultFn","diff","NOTHING","S$16","P$12","P$13","id$4","S$17","delay","S$18","P$14","throttle","_ref2$leading","leading","_ref2$trailing","trailing","S$19","P$15","debounce","_ref2$immediate","immediate","S$20","P$16","mapErrors","id$5","S$21","P$17","filterErrors","id$6","S$22","P$18","ignoreValues","S$23","P$19","ignoreErrors","S$24","P$20","ignoreEnd","S$25","P$21","beforeEnd","S$26","P$22","slidingWindow","S$27","P$23","bufferWhile","_ref2$flushOnEnd","flushOnEnd","S$28","P$24","id$7","bufferWhile$1","S$29","P$25","bufferWithTimeOrCount","S$30","P$26","xformForObs","res","S$31","P$27","withHandler","S$32","P$28","defaultErrorsCombinator","errors","latestError","Combine","active","passive","combinator","_activeCount","_sources","_combinator","_aliveCount","_latestValues","_latestErrors","_emitAfterActivation","_endAfterActivation","_latestErrorIndex","_$handlers","_loop","combine","Zip","sources","_buffers","observables","AbstractPool","_ref$queueLim","queueLim","_ref$concurLim","concurLim","_ref$drop","_queueLim","_concurLim","_drop","_queue","_curSources","_$handleSubAny","_handleSubAny","_$endHandlers","_currentlyAdding","Merge","_addAll","_initialised","S$33","generator","_generator","_iteration","concat$1","Pool","FlatMap","_mainEnded","_lastCurrent","_$handleMain","_handleMain","FlatMapErrors","createConstructor$1","primary","secondary","_primary","_secondary","_lastSecondary","_$handleSecondaryAny","_handleSecondaryAny","_$handlePrimaryAny","_handlePrimaryAny","createClassMethods$1","_handlePrimaryValue","_handlePrimaryError","_handlePrimaryEnd","_handleSecondaryValue","_handleSecondaryError","_handleSecondaryEnd","_removeSecondary","createStream$1","createProperty$1","filterBy","S$34","P$29","sampledBy","id2","skipUntilBy","S$35","P$30","takeUntilBy","S$36","P$31","bufferBy","S$37","P$32","bufferWhileBy","S$38","P$33","awaiting","valuesToErrors","defFn","S$39","P$34","errorsToValues","defFn$1","S$40","P$35","endOnError","S$41","P$36","warn","msg","DEPRECATION_WARNINGS","msg2","dispatch","items","cleanup","_setActive","_on","_off","onEnd","offValue","offError","offEnd","A","B","getType","sourceObs","selfName","isCurrent","offLog","handlerIndex","_x","_xs","shift","_emitter","_callUnsubscribe","_getInitialCurrent","getInitial","observer","mixin$1","mixin$2","_n","mixin$3","mixin$4","mixin$5","_lastValue","mixin$6","mixin$7","mixin$8","_prev","mixin$9","_seed","mixin$10","END_MARKER","mixin$11","_buff","_$shiftBuff","now","getTime","mixin$12","_leading","_trailing","_trailingValue","_timeoutId","_endLater","_lastCallTime","_$trailingCall","_trailingCall","curTime","remaining","_cancelTrailing","mixin$13","_immediate","_lastAttempt","_laterValue","_$later","_later","mixin$14","mixin$15","mixin$16","mixin$17","mixin$18","mixin$19","mixin$20","_max","_min","mixin$21","_flushOnEnd","_flush","mixin$22","_count","mixin$23","mixin$24","_xform","mixin$25","_handler","_emitIfFull","hasAllValues","hasErrors","valuesCopy","errorsCopy","_isFull","id$8","_add","toObs","_addToCur","_addToQueue","_removeOldest","obss","_this2","_remove","_removeCur","_removeQueue","_subToEnd","_this3","_subscribe","onEndI","_pullQueue","_onEmpty","_isEmpty","_getSource","plug","unplug","_hadNoEvSinceDeact","sameCurr","mixin$26","mixin$27","mixin$28","mixin$29","_ref$flushOnEnd","mixin$30","_ref$flushOnChange","flushOnChange","_flushOnChange","mixin$31","convert","mixin$32","mixin$33","bufferWithCount","other","pool","flatMap","flatMapLatest","flatMapFirst","flatMapConcat","flatMapConcurLimit","flatMapErrors",165,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","paper","Base","inject","dest","src","enumerable","beans","preserve","field","describe","substring","bean","isFunc","prev","base","beansNames","toLowerCase","isPlainObject","writable","configurable","define","hidden","part","each","getLength","forIn","exclude","__proto__","getOwnPropertyDescriptor","__lookupGetter__","__lookupSetter__","_define","defineProperty","desc","__defineGetter__","__defineSetter__","statics","ctor","initialize","_id","_class","Formatter","instance","number","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","_filtering","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","entry","readNamed","getNamed","hasObject","filtered","_filtered","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","root","formatter","precision","definitions","references","ref","unshift","_serialize","_compact","deserialize","json","_data","_isDictionary","isRoot","isDictionary","JSON","stringify","importJSON","parse","isTarget","Item","Layer","amount","_index","removed","capitalize","toUpperCase","camelize","chr","hyphenate","Emitter","on","func","types","_eventTypes","handlers","_callbacks","install","off","uninstall","stop","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","browser","agent","navigator","userAgent","platform","exec","v1","v2","chrome","version","versionNumber","parseFloat","webkit","atom","getView","getPaper","execute","code","url","PaperScript","View","updateFocus","scope","that","element","Project","activate","clear","handleAttribute","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_reference","isActive","multiplier","pow","round","val1","val2","rectangle","Numerical","clip","abscissas","weights","abs","sqrt","EPSILON","MACHINE_EPSILON","TOLERANCE","CURVETIME_EPSILON","GEOMETRIC_EPSILON","WINDING_EPSILON","TRIGONOMETRIC_EPSILON","CLIPPING_EPSILON","KAPPA","isZero","integrate","w","Ax","findRoot","df","tolerance","fx","dx","nx","solveQuadratic","roots","x1","D","eMin","eMax","x2","gmC","mult","floor","LOG10E","isFinite","Q","solveCubic","b1","c2","x0","q","qd","tmp","ec","UID","_pools","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","dot","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","rotate","transform","matrix","_transformPoint","isInside","Rectangle","isClose","isCollinear","isColinear","isOrthogonal","point1","point2","random","y1","y2","op","LinkedPoint","owner","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","c1","d1","b2","d2","tx2","ty2","preConcatenate","tx1","ty1","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","line","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","dy","u1","u2","epsilon","uMin","uMax","px","py","vx","vy","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_setProject","_changes","NO_INSERT","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","dontCenter","setDefinition","_definition","flags","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","place","PlacedSymbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","blendMode","opacity","guide","clipMask","data","_initialize","hasProps","_matrix","_style","_project","parent","setParent","_installEvent","_uninstallEvent","onFrame","_animateItem","onLoad","fields","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getPivot","setPivot","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","child","cached","_internal","_boundsCache","ids","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","raster","setCanvas","getInternalBounds","_asPathItem","Path","getIntersections","checkBounds","pt","tolerancePadding","guides","parentTotalMatrix","_totalMatrix","totalMatrix","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","points","opts","_getChildHitTestOptions","_hitTestSelf","fill","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","namedArray","notifyParent","replaceWith","reverseChildren","isEditable","hasStroke","hasShadow","_getOrder","getList","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","_transformContent","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","fillStyle","toCanvasStyle","getStrokeWidth","strokeStyle","lineWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","getViewMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","_canComposite","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","process","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","beginPath","closePath","stroke","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","arc","ry","kappa","cx","cy","moveTo","bezierCurveTo","lineTo","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","u","getPpi","getImage","naturalWidth","naturalHeight","_context","setContext","toDataURL","loaded","Image","DomEvent","load","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","segments","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","hasHandles","_point","_handleIn","_handleOut","curve","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","clearHandles","_selectionState","state","oldState","flag","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","getPrevious","isFirst","isLast","inX","inY","reversed","removeSegment","segment","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","_getIntersections","_getParameter","isParameter","parameter","getParameterAt","_setHandles","tMin","tMax","subdivide","setHandles","p1","h1","h2","p2","c1x","c1y","c2x","c2y","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","geomEpsilon","getNearestParameter","refine","dist","minDist","minT","isStraight","isFlatEnough","ux","uy","h1x","h1y","h2x","h2y","_addBounds","v0","v3","isLinear","third","isHorizontal","getTangentAt","isVertical","getLocationAt","getLocationOf","getOffsetOf","loc","getOffset","getNearestLocation","getNearestPoint","methods","evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","evaluate","normalized","ds","forward","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","t1","t2","overlap","startConnected","endConnected","renormalize","loc1","loc2","_intersection","addCurveIntersections","oldTDiff","recursion","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","hull","getConvexHull","clipConvexHull","tDiff","tMinNew","tMaxNew","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","distRatio","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rvc","tc","pc","tl","pl","addLineIntersection","_getSelfIntersection","c1p1x","c1p1y","c1p2x","c1p2y","c2p1x","c2p1y","c2p2x","c2p2y","c1s1x","c1s1y","c1s2x","c1s2y","c2s1x","c2s1y","c2s2x","c2s2y","overlaps","getOverlaps","straight1","straight2","straight","before","c1p1","c1p2","c2p1","c2p2","side1","side2","edgeSum","ac","ab","bc","tSplit","maxCurvature","curvature","getCurvatureAt","getLineLengthSquared","timeEpsilon","l1","l2","o1","o2","_overlap","_distance","_setCurve","_parameter","getPointAt","_next","_version","_curve","_segment","_setSegment","getSegment","getParameter","trySegment","_offset","getCurveOffset","getIntersection","_ignoreOther","isTouching","inter","curve1","curve2","isCrossing","isInRange","c4","c3","isOverlap","search","path1","path2","expanded","_returnFirst","self","matrix1","matrix2","curves1","curves2","length1","length2","values2","arrays","values1","getCrossings","setPathData","getCoord","relative","previous","control","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_area","_monoCurves","getSegments","fullySelected","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","addSegment","skipLine","curX","curY","outX","prevX","outY","prevY","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","isClockwise","setClockwise","clockwise","_selectSegments","newState","maxDistance","PathIterator","simplify","fitter","PathFitter","fit","last1","last2","first2","first1","toShape","seg3","seg4","isArc","pt1","pt2","topCenter","shape","isCloseEnough","checkSegmentPoint","seg","anchor","strokePadding","checkSegmentPoints","addToArea","checkSegmentStroke","cap","numSegments","_addBevelJoin","_addSquareCap","hitStroke","hitFill","hitCurves","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","knots","ie","je","getCurrentSegment","moveBy","curveTo","through","extent","vector","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","z","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","processSegment","prevCoords","addRound","joinBounds","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","createPath","createEllipse","ellipseSegments","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","getCurrentPath","check","preparePath","resolveCrossings","reorient","finishBoolean","computeBoolean","operation","collect","monoCurves","_getMonoCurves","computeOpenBoolean","_path1","_path2","intersections","divideLocations","propagateWinding","_winding","tracePaths","addPath","linkIntersections","prevCurve","prevT","noHandles","clearSegments","origT","getWinding","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","startCounted","slope","counted","totalLength","windingSum","node","curveLength","isValid","adjusted","_visited","operator","overlapWinding","isStart","otherStart","findBestIntersection","strict","nextSeg","nextInter","findStartSegment","operators",1,2,"finished","firstSegment","crossings","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","counters","maxRecursion","addCurve","computeParts","maxT","minDifference","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","detXC1","c0","segLength","eps","degree","maxDist","TextItem","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","lines","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","getTextWidth","fromCSS","string","parseInt","colorCache","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","hsbIndices","converters","rgb-hsb","delta","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","_textDefaults","isColor","isPoint","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","getStyles","doc","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","clientWidth","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","handleCallbacks","callbacks","focused","nativeRequest","requested","timer","focus","blur","callback","getCanvasSize","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","_windowEvents","_setViewSize","Stats","_stats","stats","domElement","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","pause","_time","_requestFrame","_requested","_handleFrame","_before","_handlingFrame","time","animate","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tempFocus","handleMouseMove","_handleEvent","tool","dragging","prevFocus","mousedown","mousemove","mouseup","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","mouseFlags","mousedrag","click","doubleclick","mouseenter","mouseleave","_eventCounters","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","parentNode","temp","createElement","removeChild","prevFont","measureText","force","callEvent","lastPoint","mouseEvent","MouseEvent","isStopped","downPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","handleKey","keyCode","charCode","fromCharCode","specialKey","specialKeys","keyMap","charCodeMap","mac","commandFixMap","downCode",8,9,13,16,17,18,19,20,27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","Http","request","async","xhr","ActiveXObject","XMLHttpRequest","open","overrideMimeType","onreadystatechange","readyState","status","responseText","send","canvases","getLum","setLum","dr","dg","db","mn","lmn","ln","mxl","getSat","setSat","md","sr","sg","sb","sa","bg","ba","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","exclusion","hue","saturation","luminosity","average","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","lookup","property","attribute","toSVG","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","attrs","namespace","setAttributeNS","tag","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","applyStyle","visibility","svgs","exportDefinitions","svg","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","exporters","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","importGroup","nodes","childNodes","isClip","currentStyle","applyAttributes","querySelectorAll","importPoly","importPath","pathData","importGradient","isRadial","applyTransform","transforms","applyOpacity","styles","attributes","onLoadCallback","File","reader","FileReader","onload","readAsText","DOMParser","parseFromString","importer","importers","onImport","expandShapes","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","__$__","binaryOperators","$__","unaryOperators","acorn","compile","insertions","insertion","getCode","getBetween","replaceCode","walkAST","argument","between","parentType","computed","exp","sourceMap","lineBreaks","getElementsByTagName","innerHTML","substr","mappings","file","sourceRoot","sourcesContent","ranges","btoa","unescape","encodeURIComponent","expose","params","toolHandlers","script","createTextNode","_execute","onResize","setOnResize","setOnFrame","loadScript","canvasId","scopeAttribute","baseURI","loadAll","amd","fr","mr","hr","sourceFile","vr","column","SyntaxError","raisedAt","o","Ar","Sr","Er","gr","kr","wr","Cr","beforeExpr","onComment","Kt","lastIndex","charCodeAt","pr","Jt","E","xt","Et","wt","Dt","Lt","Ut","Rt","Tt","Vt","Gt","Lr","St","At","jt","Ot","qt","Ct","It","mt","vt","yt","bt","ft","dt","ht","kt","yr","xr","Br","Qt","L","$t","I","jr","Or","Tr","Dr","Bt","Yt","Fr","Wt","forbidReserved","ecmaVersion","Mt","zt","Xt","U","Ir","Ur","V","O","expression","strictSemicolons","M","N","Nt","W","Rr","Vr","J","Mr","Nr","label","lr","kind","keyword","Wr","Pr","Zt","tt","$","G","declarations","ut","K","Gr","cr","Kr","consequent","alternate","Hr","Qr","Yr","discriminant","cases","en","zr","Jr","Zr","et","block","H","Xr","guard","guardedHandlers","qr","finalizer","$r","nt","isLoop","expressions","Y","isAssign","Z","er","rr","binop","isUpdate","postfix","nr","ar","callee","ur","ot","raw","it","st","ct","atomValue","elements","ir","at","allowTrailingCommas","program","defaultOptions","getLineInfo","tokenize","startLoc","endLoc","jumpTo","break","case","catch","continue","debugger","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","new","in","instanceof","typeof","void","delete","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","question","slash","eof","num","regexp","Ft","Pt","Ht","_t","isIdentifierStart","isIdentifierChar","+","-","*","/","%","==","!=",223,"_toNode","mutationMacro","fragment","createDocumentFragment","ElementPrototype","Element","isSupported","replaceChild","timout","vol","mw","mh","path_white","vol_ctrl_width","VolumeCtrl","rect_out_box","box","rect_blue_path","path_blue","rect_white_path","vcg","black_line",225,"currentDialogue","dialogue","currentPhrase","answer","scene","phrase","Dialogue",226,"createVideo","vid","loop","_ref15","bool","exists","_ref11","onAfter","_ref12","_ref13","select","_ref14","switchTo","_dialogue","_dialogue2","Story",257,289,"_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","Atom","LensedAtom","AbstractMutable","_createClass","defineProperties","descriptor","protoProps","staticProps","_partial","_partial2","_Kefir$Property","getPrototypeOf","_len","ls","_key","_len2","_key2","_AbstractMutable","_lens","_$handleValue","_maybeEmitValue","handleValue","_AbstractMutable2","_this4",329,"_toConsumableArray","arr2","_defineProperty","_extends","assign","_typeof","deleteKey","setKey","dropped","toPartial","conserve","toConserve","deleteAll","x2x","choose","x2yL","toFunctor","firstOf","lls","inn","required","predicate","findWith","_len3","_key3","ys","augment","template",453,"locals"],"mappings":"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A/O;gBACA2P;gBACArT;gBACA4O;gBACA1O;gBACAC;gBACAC;gBACA4V;gBACA1V;gBACAK;gBACAC;gBACAG;gBACA8N;gBACAC;gBACAC;gBACAkH;gBACAxC;gBACAzS;gBACAC;gBACAC;gBACAwS;gBACAC;gBACA3G;gBACA5L;gBACA4N;gBACAvN;gBACAC;gBACAC;gBACAC;gBACAsN;gBACAC;gBACAjjB;gBACA2V;gBACAuN;gBACAtN;gBACAC;gBACAC;gBACAC;gBACApB;gBACAqB;gBACAC;gBACAC;gBACAI;gBACA6M;gBACAwC;gBACAzX;gBACAqI;gBACAG;gBACA4U;gBACAjI;gBACAzM;gBACAoT;gBACAvG;gBACAC;gBACAoH;gBACAhU;gBACAzV;gBACAsiB;gBACAzM;gBACA0E;gBACAgM;gBACAzQ;gBACAU;gBACA5F;gBACA2R;gBACArkB;gBACAya;gBACA+N;gBACAC;gBACAnjB;gBACAolB;gBACAhC;gBACAlQ;gBACAC;gBACApT;gBACAqT;gBACAE;gBACA2L;gBACA1L;gBACAG;gBACAtL;gBACAwL;gBACA2P;gBACAC;gBACA4C;gBACA3C;gBACAC;gBACAxE;gBACArL;gBACAxL;gBACA4L;gBACAC;gBACAC;gBACAC;gBACAC;gBACAC;gBACAC;gBACAC;gBACAG;gBACAC;gBACAC;gBACAwQ;gBACAvQ;gBACAE;gBACAC;gBACAG;gBACAkK;gBACAC;gBACAC;gBACA9Q;gBACA+Q;gBACAjK;gBACAC;gBACAE;gBACAE;gBACAE;gBACA4N;gBACA2B;gBACA1B;gBACA9jB;gBACAmW;gBACA4N;gBACAlE;gBACAtkB;gBACAukB;gBACAC;gBACA3J;gBACAC;gBACAC;gBACAE;gBACAwG;gBACAtG;gBACAC;gBACAqJ;gBACA7kB;gBACA8kB;gBACAlY;gBACAgP;gBACAG;gBACA8M;gBACA1oB;gBACA+N;gBACAgO;gBACAC;gBACAN;gBACAS;gBACAG;gBACAC;gBACAE;gBACAmI;gBACA0G;gBACAC;gBACA5W;gBACAgI;gBACAkI;gBACAhI;gBACAC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","file":"main.bundle.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _classCallCheck2 = __webpack_require__(56);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _createClass2 = __webpack_require__(57);\n\t\n\tvar _createClass3 = _interopRequireDefault(_createClass2);\n\t\n\tvar _paper = __webpack_require__(165);\n\t\n\tvar _paper2 = _interopRequireDefault(_paper);\n\t\n\tvar _story = __webpack_require__(226);\n\t\n\tvar _story2 = _interopRequireDefault(_story);\n\t\n\tvar _VolumeCtrl = __webpack_require__(224);\n\t\n\tvar _VolumeCtrl2 = _interopRequireDefault(_VolumeCtrl);\n\t\n\tvar _kefir = __webpack_require__(148);\n\t\n\tvar _kefir2 = __webpack_require__(289);\n\t\n\tvar _kefir3 = _interopRequireDefault(_kefir2);\n\t\n\tvar _ramda = __webpack_require__(47);\n\t\n\tvar _ramda2 = _interopRequireDefault(_ramda);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t__webpack_require__(223);\n\t\n\twindow.R = _ramda2.default;\n\twindow.p = _paper2.default;\n\t\n\t__webpack_require__(453);\n\t\n\t_kefir.Kefir.Observable.prototype.pluck = function (prop) {\n\t\treturn this.map(_ramda2.default.view(_ramda2.default.lensProp(prop)));\n\t};\n\t// TODO: move to new file and find better name\n\t\n\tfunction _ref(rect) {\n\t\tvar res_rect = _ramda2.default.clone(rect);\n\t\tvar margin = 10;\n\t\tres_rect.x -= margin / 2;\n\t\tres_rect.y -= margin / 2;\n\t\tres_rect.width += margin;\n\t\tres_rect.height += margin;\n\t\n\t\treturn res_rect;\n\t}\n\t\n\tfunction _ref2(size) {\n\t\t//(re)calculate dialogue buttons\n\t\tvar rem = size.width - this.width;\n\t\tvar padding = rem / (this.list.length + 1);\n\t\tvar cur = padding;\n\t\tfor (var i = 0; i < this.list.length; i++) {\n\t\t\tvar group = this.list[i];\n\t\t\tgroup.bounds.x = cur;\n\t\t\tgroup.bounds.y = size.height - 75;\n\t\n\t\t\tcur += group.bounds.width + padding;\n\t\t}\n\t}\n\t\n\tfunction _ref4(button) {\n\t\treturn button.remove();\n\t}\n\t\n\tfunction _ref3() {\n\t\tthis.list.forEach(_ref4);\n\t\tthis.list = [];\n\t\tthis.width = 0;\n\t}\n\t\n\tvar DialogueButtons = function () {\n\t\tfunction DialogueButtons() {\n\t\t\t(0, _classCallCheck3.default)(this, DialogueButtons);\n\t\n\t\t\tthis.list = [];\n\t\t\tthis.width = 0;\n\t\t}\n\t\n\t\t(0, _createClass3.default)(DialogueButtons, [{\n\t\t\tkey: \"create\",\n\t\t\tvalue: function create(choices) {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tthis.remove();\n\t\n\t\t\t\tthis.list = choices.map(function (choice, n) {\n\t\t\t\t\tvar group = new _paper2.default.Group();\n\t\n\t\t\t\t\tvar text = new _paper2.default.PointText({\n\t\t\t\t\t\t//\tpoint: point,\n\t\t\t\t\t\tcontent: choice,\n\t\t\t\t\t\tfillColor: \"#AEE1F9\",\n\t\t\t\t\t\tfontFamily: \"Verdana\",\n\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\tfontSize: font_size,\n\t\t\t\t\t\tjustification: \"left\"\n\t\t\t\t\t});\n\t\t\t\t\ttext.onClick = function () {\n\t\t\t\t\t\treturn window.next(n);\n\t\t\t\t\t};\n\t\n\t\t\t\t\tvar button = main_button.clone();\n\t\t\t\t\tbutton.visible = true;\n\t\t\t\t\tbutton.setBounds(_this.calculateButtonSize(text.bounds));\n\t\n\t\t\t\t\tgroup.addChild(button);\n\t\t\t\t\tgroup.addChild(text);\n\t\n\t\t\t\t\t_this.width += group.getBounds().width;\n\t\n\t\t\t\t\treturn group;\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"calculateButtonSize\",\n\t\t\tvalue: _ref\n\t\t}, {\n\t\t\tkey: \"calculate\",\n\t\t\tvalue: _ref2\n\t\t}, {\n\t\t\tkey: \"remove\",\n\t\t\tvalue: _ref3\n\t\t}]);\n\t\treturn DialogueButtons;\n\t}();\n\t\n\tvar story = new _story2.default();\n\t\n\tvar canvas = null;\n\tvar container = null;\n\t\n\t//var planet = null;\n\tvar graphene = null;\n\tvar carbon = null;\n\t\n\tvar video = null;\n\t\n\tvar dbuttons = new DialogueButtons();\n\t\n\tvar talk_text = null;\n\t\n\tvar font_size = 18;\n\t\n\tvar g_text = null;\n\tvar c_text = null;\n\t\n\tvar timeout_id = 0;\n\t\n\tvar main_button = null;\n\t\n\tvar volume = new _kefir3.default(0.5);\n\t\n\tvar guz = false;\n\t\n\tstory.onBefore(\"end_true\", function () {\n\t\n\t\tstory.showDialogue = false;\n\t\tguz = true;\n\t\ttoggleCharacters(false);\n\t\tgraphene.visible = true;\n\t\ttalk_text.visible = true;\n\t\n\t\tgraphene.setPosition(_paper2.default.view.center);\n\t\ttalk_text.content = \"А ти какво научи от всичко това?\";\n\t\t_paper2.default.view.update(true);\n\t});\n\t\n\t//gala --replace\n\t\n\tstory.onBefore(\"test\", function () {\n\t\twindow.location.href = \"./test.html\";\n\t});\n\t\n\tvar resize = _kefir.Kefir.fromEvents(window, \"resize\").toProperty(function () {\n\t\treturn null;\n\t}).map(function () {\n\t\treturn { height: window.innerHeight, width: window.innerWidth };\n\t});\n\t\n\tvar center = resize.map(function () {\n\t\treturn _paper2.default.view.center;\n\t}).toProperty(function () {\n\t\treturn _paper2.default.view.center;\n\t});\n\t\n\tfunction set(obj, prop) {\n\t\treturn function (val) {\n\t\t\tobj[prop] = val;\n\t\t};\n\t}\n\t\n\tfunction toggleCharacters(val) {\n\t\tgraphene.visible = val;\n\t\tcarbon.visible = val;\n\t\ttalk_text.visible = val;\n\t\tg_text.visible = val;\n\t\tc_text.visible = val;\n\t\t_paper2.default.view.draw();\n\t\t_paper2.default.view.update(true);\n\t}\n\t\n\tfunction _ref5() {\n\t\twindow.next();\n\t}\n\t\n\tfunction showDialogue() {\n\t\tvar choices = story.choices();\n\t\n\t\tif (_ramda2.default.isArrayLike(choices)) {\n\t\t\t//\tconsole.log(choices)\n\t\n\t\t\tdbuttons.create(choices);\n\t\t\tdbuttons.calculate({ height: window.innerHeight, width: window.innerWidth });\n\t\n\t\t\t_paper2.default.view.draw();\n\t\t} else {\n\t\n\t\t\ttalk_text.content = choices.who + \": \" + choices.say;\n\t\t\tvar len = choices.say.length;\n\t\t\tvar t = 0;\n\t\t\tif (len < 10) {\n\t\t\t\tt = 5000;\n\t\t\t} else {\n\t\t\t\tt = len * 200;\n\t\t\t}\n\t\n\t\t\ttimeout_id = setTimeout(_ref5, t);\n\t\t}\n\t\t_paper2.default.view.draw();\n\t}\n\t\n\tfunction _ref6() {\n\t\treturn window.next();\n\t}\n\t\n\tfunction show(current) {\n\t\tvar video = story.current.video;\n\t\tif (video == current) {\n\t\t\treturn video;\n\t\t} else {\n\t\t\tif (current) {\n\t\t\t\tconsole.log(\"Removeing: \", video);\n\t\t\t\tcurrent.remove();\n\t\t\t}\n\t\t}\n\t\n\t\tvideo.addEventListener(\"ended\", _ref6);\n\t\n\t\tcontainer.appendChild(video);\n\t\tvideo.play();\n\t\treturn video;\n\t}\n\t\n\twindow.next = function (arg) {\n\t\tclearTimeout(timeout_id);\n\t\tif (story.hasChoices() && arg == null) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tdbuttons.remove();\n\t\n\t\tstory.next(arg);\n\t\tif (story.hasDialogue()) {\n\t\t\tshowDialogue();\n\t\t\ttoggleCharacters(true);\n\t\t} else {\n\t\t\tif (!guz) {\n\t\t\t\ttoggleCharacters(false);\n\t\t\t}\n\t\t}\n\t\n\t\t_paper2.default.view.update(true);\n\t\n\t\tvideo = show(video);\n\t\tvideo.volume = volume.get();\n\t\n\t\tconsole.log(video);\n\t};\n\t\n\tvar volumeModifier = 0.05;\n\t\n\tfunction _ref7(e) {\n\t\treturn e.wheelDelta < 0 ? -volumeModifier : volumeModifier;\n\t}\n\t\n\tfunction _ref8(mod) {\n\t\tvolume.modify(function (old) {\n\t\t\tvar volume = old + mod;\n\t\t\tif (volume < 0) {\n\t\t\t\tvolume = 0;\n\t\t\t} else if (volume > 1) {\n\t\t\t\tvolume = 1;\n\t\t\t}\n\t\t\treturn volume;\n\t\t});\n\t}\n\t\n\tfunction _ref9(point) {\n\t\treturn new _paper2.default.Point(point.x, point.y * 2 - 100);\n\t}\n\t\n\tfunction _ref10() {\n\t\twindow.next();\n\t}\n\t\n\twindow.addEventListener(\"load\", function () {\n\t\n\t\tconsole.log(\"Loading\");\n\t\n\t\tcanvas = document.getElementById(\"drawSurf\");\n\t\tcontainer = document.getElementById(\"container\");\n\t\n\t\t_kefir.Kefir.fromEvents(canvas, \"mousewheel\").map(_ref7).onValue(_ref8);\n\t\n\t\t_paper2.default.setup(canvas);\n\t\n\t\t//planet = new paper.Raster(\"./mercury.png\")\n\t\n\t\tgraphene = new _paper2.default.Raster(\"./img/Graphene.png\");\n\t\tcarbon = new _paper2.default.Raster(\"./img/Carbon1.png\");\n\t\tgraphene.scale(-1, 1);\n\t\n\t\tcarbon.position.x = 100;\n\t\n\t\tcarbon.scale(0.8, 0.8);\n\t\tgraphene.scale(0.8, 0.8);\n\t\n\t\ttalk_text = new _paper2.default.PointText({\n\t\t\tpoint: _paper2.default.view.center,\n\t\t\t//\tcontent: choices.who +\": \"+ choices.say,\n\t\t\tfillColor: \"white\",\n\t\t\tfontFamily: \"Verdana\",\n\t\t\tfontWeight: \"bold\",\n\t\t\tfontSize: font_size,\n\t\t\tjustification: \"center\"\n\t\t});\n\t\n\t\tg_text = new _paper2.default.PointText({\n\t\t\tpoint: _paper2.default.view.center,\n\t\t\tcontent: \"Графен\",\n\t\t\tfillColor: \"white\",\n\t\t\tfontFamily: \"Verdana\",\n\t\t\tfontWeight: \"bold\",\n\t\t\tfontSize: font_size,\n\t\t\tjustification: \"center\"\n\t\t});\n\t\n\t\tc_text = new _paper2.default.PointText({\n\t\t\tpoint: _paper2.default.view.center,\n\t\t\tcontent: \"Карбон\",\n\t\t\tfillColor: \"white\",\n\t\t\tfontFamily: \"Verdana\",\n\t\t\tfontWeight: \"bold\",\n\t\t\tfontSize: font_size,\n\t\t\tjustification: \"center\"\n\t\t});\n\t\n\t\ttalk_text.importSVG(\"./img/button.svg\", function (e) {\n\t\t\tmain_button = e;\n\t\t\tmain_button.visible = false;\n\t\t});\n\t\n\t\tc_text.position.x = 100;\n\t\n\t\tresize.onValue(function (size) {\n\t\n\t\t\tcanvas.width = size.width;\n\t\t\tcanvas.height = size.height;\n\t\t\t_paper2.default.view.setViewSize(size.width, size.height);\n\t\n\t\t\tg_text.position.x = size.width - 100;\n\t\t\tgraphene.position.x = size.width - 100;\n\t\n\t\t\tdbuttons.calculate(size);\n\t\n\t\t\t// update by center\n\t\t\tvar center = _paper2.default.view.center;\n\t\n\t\t\tcarbon.position.y = center.y - 100;\n\t\t\tgraphene.position.y = center.y - 100;\n\t\t\tg_text.position.y = center.y + 200;\n\t\t\tc_text.position.y = center.y + 200;\n\t\n\t\t\t//redraw\n\t\n\t\t\t_paper2.default.view.update(true);\n\t\t\t_paper2.default.view.draw();\n\t\t});\n\t\n\t\tcenter.map(_ref9).onValue(set(talk_text, \"point\"));\n\t\n\t\t_paper2.default.view.onMouseDown = _ref10;\n\t\n\t\tvideo = show();\n\t\ttoggleCharacters(false);\n\t\n\t\tvar volCtrl = new _VolumeCtrl2.default(volume.get());\n\t\n\t\tvolume.onValue(function (value) {\n\t\t\tif (video != null) {\n\t\t\t\tvideo.volume = value;\n\t\t\t}\n\t\t\tvolCtrl.update(value);\n\t\t});\n\t\n\t\tconsole.log(\"Loaded\");\n\t}, false);\n\n/***/ },\n\n/***/ 47:\n/***/ function(module, exports, __webpack_require__) {\n\n\t//  Ramda v0.19.1\n\t//  https://github.com/ramda/ramda\n\t//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n\t//  Ramda may be freely distributed under the MIT license.\n\t\n\t;(function() {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t     * A special placeholder value used to specify \"gaps\" within curried functions,\n\t     * allowing partial application of any combination of arguments, regardless of\n\t     * their positions.\n\t     *\n\t     * If `g` is a curried ternary function and `_` is `R.__`, the following are\n\t     * equivalent:\n\t     *\n\t     *   - `g(1, 2, 3)`\n\t     *   - `g(_, 2, 3)(1)`\n\t     *   - `g(_, _, 3)(1)(2)`\n\t     *   - `g(_, _, 3)(1, 2)`\n\t     *   - `g(_, 2, _)(1, 3)`\n\t     *   - `g(_, 2)(1)(3)`\n\t     *   - `g(_, 2)(1, 3)`\n\t     *   - `g(_, 2)(_, 3)(1)`\n\t     *\n\t     * @constant\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Function\n\t     * @example\n\t     *\n\t     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n\t     *      greet('Alice'); //=> 'Hello, Alice!'\n\t     */\n\t    var __ = { '@@functional/placeholder': true };\n\t\n\t    /* eslint-disable no-unused-vars */\n\t    var _arity = function _arity(n, fn) {\n\t        /* eslint-disable no-unused-vars */\n\t        switch (n) {\n\t        case 0:\n\t            return function () {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 1:\n\t            return function (a0) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 2:\n\t            return function (a0, a1) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 3:\n\t            return function (a0, a1, a2) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 4:\n\t            return function (a0, a1, a2, a3) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 5:\n\t            return function (a0, a1, a2, a3, a4) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 6:\n\t            return function (a0, a1, a2, a3, a4, a5) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 7:\n\t            return function (a0, a1, a2, a3, a4, a5, a6) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 8:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 9:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 10:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        default:\n\t            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n\t        }\n\t    };\n\t\n\t    var _arrayFromIterator = function _arrayFromIterator(iter) {\n\t        var list = [];\n\t        var next;\n\t        while (!(next = iter.next()).done) {\n\t            list.push(next.value);\n\t        }\n\t        return list;\n\t    };\n\t\n\t    var _cloneRegExp = function _cloneRegExp(pattern) {\n\t        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n\t    };\n\t\n\t    var _complement = function _complement(f) {\n\t        return function () {\n\t            return !f.apply(this, arguments);\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Private `concat` function to merge two array-like objects.\n\t     *\n\t     * @private\n\t     * @param {Array|Arguments} [set1=[]] An array-like object.\n\t     * @param {Array|Arguments} [set2=[]] An array-like object.\n\t     * @return {Array} A new, merged array.\n\t     * @example\n\t     *\n\t     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n\t     */\n\t    var _concat = function _concat(set1, set2) {\n\t        set1 = set1 || [];\n\t        set2 = set2 || [];\n\t        var idx;\n\t        var len1 = set1.length;\n\t        var len2 = set2.length;\n\t        var result = [];\n\t        idx = 0;\n\t        while (idx < len1) {\n\t            result[result.length] = set1[idx];\n\t            idx += 1;\n\t        }\n\t        idx = 0;\n\t        while (idx < len2) {\n\t            result[result.length] = set2[idx];\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    };\n\t\n\t    var _containsWith = function _containsWith(pred, x, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len) {\n\t            if (pred(x, list[idx])) {\n\t                return true;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return false;\n\t    };\n\t\n\t    var _filter = function _filter(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [];\n\t        while (idx < len) {\n\t            if (fn(list[idx])) {\n\t                result[result.length] = list[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    };\n\t\n\t    var _forceReduced = function _forceReduced(x) {\n\t        return {\n\t            '@@transducer/value': x,\n\t            '@@transducer/reduced': true\n\t        };\n\t    };\n\t\n\t    var _has = function _has(prop, obj) {\n\t        return Object.prototype.hasOwnProperty.call(obj, prop);\n\t    };\n\t\n\t    var _identity = function _identity(x) {\n\t        return x;\n\t    };\n\t\n\t    var _isArguments = function () {\n\t        var toString = Object.prototype.toString;\n\t        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n\t            return toString.call(x) === '[object Arguments]';\n\t        } : function _isArguments(x) {\n\t            return _has('callee', x);\n\t        };\n\t    }();\n\t\n\t    /**\n\t     * Tests whether or not an object is an array.\n\t     *\n\t     * @private\n\t     * @param {*} val The object to test.\n\t     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n\t     * @example\n\t     *\n\t     *      _isArray([]); //=> true\n\t     *      _isArray(null); //=> false\n\t     *      _isArray({}); //=> false\n\t     */\n\t    var _isArray = Array.isArray || function _isArray(val) {\n\t        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n\t    };\n\t\n\t    /**\n\t     * Determine if the passed argument is an integer.\n\t     *\n\t     * @private\n\t     * @param {*} n\n\t     * @category Type\n\t     * @return {Boolean}\n\t     */\n\t    var _isInteger = Number.isInteger || function _isInteger(n) {\n\t        return n << 0 === n;\n\t    };\n\t\n\t    var _isNumber = function _isNumber(x) {\n\t        return Object.prototype.toString.call(x) === '[object Number]';\n\t    };\n\t\n\t    var _isObject = function _isObject(x) {\n\t        return Object.prototype.toString.call(x) === '[object Object]';\n\t    };\n\t\n\t    var _isPlaceholder = function _isPlaceholder(a) {\n\t        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n\t    };\n\t\n\t    var _isRegExp = function _isRegExp(x) {\n\t        return Object.prototype.toString.call(x) === '[object RegExp]';\n\t    };\n\t\n\t    var _isString = function _isString(x) {\n\t        return Object.prototype.toString.call(x) === '[object String]';\n\t    };\n\t\n\t    var _isTransformer = function _isTransformer(obj) {\n\t        return typeof obj['@@transducer/step'] === 'function';\n\t    };\n\t\n\t    var _map = function _map(fn, functor) {\n\t        var idx = 0;\n\t        var len = functor.length;\n\t        var result = Array(len);\n\t        while (idx < len) {\n\t            result[idx] = fn(functor[idx]);\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    };\n\t\n\t    var _of = function _of(x) {\n\t        return [x];\n\t    };\n\t\n\t    var _pipe = function _pipe(f, g) {\n\t        return function () {\n\t            return g.call(this, f.apply(this, arguments));\n\t        };\n\t    };\n\t\n\t    var _pipeP = function _pipeP(f, g) {\n\t        return function () {\n\t            var ctx = this;\n\t            return f.apply(ctx, arguments).then(function (x) {\n\t                return g.call(ctx, x);\n\t            });\n\t        };\n\t    };\n\t\n\t    // \\b matches word boundary; [\\b] matches backspace\n\t    var _quote = function _quote(s) {\n\t        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\n\t    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\t        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n\t    };\n\t\n\t    var _reduced = function _reduced(x) {\n\t        return x && x['@@transducer/reduced'] ? x : {\n\t            '@@transducer/value': x,\n\t            '@@transducer/reduced': true\n\t        };\n\t    };\n\t\n\t    /**\n\t     * An optimized, private array `slice` implementation.\n\t     *\n\t     * @private\n\t     * @param {Arguments|Array} args The array or arguments object to consider.\n\t     * @param {Number} [from=0] The array index to slice from, inclusive.\n\t     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n\t     * @return {Array} A new, sliced array.\n\t     * @example\n\t     *\n\t     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n\t     *\n\t     *      var firstThreeArgs = function(a, b, c, d) {\n\t     *        return _slice(arguments, 0, 3);\n\t     *      };\n\t     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n\t     */\n\t    var _slice = function _slice(args, from, to) {\n\t        switch (arguments.length) {\n\t        case 1:\n\t            return _slice(args, 0, args.length);\n\t        case 2:\n\t            return _slice(args, from, args.length);\n\t        default:\n\t            var list = [];\n\t            var idx = 0;\n\t            var len = Math.max(0, Math.min(args.length, to) - from);\n\t            while (idx < len) {\n\t                list[idx] = args[from + idx];\n\t                idx += 1;\n\t            }\n\t            return list;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n\t     */\n\t    var _toISOString = function () {\n\t        var pad = function pad(n) {\n\t            return (n < 10 ? '0' : '') + n;\n\t        };\n\t        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n\t            return d.toISOString();\n\t        } : function _toISOString(d) {\n\t            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n\t        };\n\t    }();\n\t\n\t    var _xfBase = {\n\t        init: function () {\n\t            return this.xf['@@transducer/init']();\n\t        },\n\t        result: function (result) {\n\t            return this.xf['@@transducer/result'](result);\n\t        }\n\t    };\n\t\n\t    var _xwrap = function () {\n\t        function XWrap(fn) {\n\t            this.f = fn;\n\t        }\n\t        XWrap.prototype['@@transducer/init'] = function () {\n\t            throw new Error('init not implemented on XWrap');\n\t        };\n\t        XWrap.prototype['@@transducer/result'] = function (acc) {\n\t            return acc;\n\t        };\n\t        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n\t            return this.f(acc, x);\n\t        };\n\t        return function _xwrap(fn) {\n\t            return new XWrap(fn);\n\t        };\n\t    }();\n\t\n\t    var _aperture = function _aperture(n, list) {\n\t        var idx = 0;\n\t        var limit = list.length - (n - 1);\n\t        var acc = new Array(limit >= 0 ? limit : 0);\n\t        while (idx < limit) {\n\t            acc[idx] = _slice(list, idx, idx + n);\n\t            idx += 1;\n\t        }\n\t        return acc;\n\t    };\n\t\n\t    /**\n\t     * Similar to hasMethod, this checks whether a function has a [methodname]\n\t     * function. If it isn't an array it will execute that function otherwise it\n\t     * will default to the ramda implementation.\n\t     *\n\t     * @private\n\t     * @param {Function} fn ramda implemtation\n\t     * @param {String} methodname property to check for a custom implementation\n\t     * @return {Object} Whatever the return value of the method is.\n\t     */\n\t    var _checkForMethod = function _checkForMethod(methodname, fn) {\n\t        return function () {\n\t            var length = arguments.length;\n\t            if (length === 0) {\n\t                return fn();\n\t            }\n\t            var obj = arguments[length - 1];\n\t            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Optimized internal one-arity curry function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curry1 = function _curry1(fn) {\n\t        return function f1(a) {\n\t            if (arguments.length === 0 || _isPlaceholder(a)) {\n\t                return f1;\n\t            } else {\n\t                return fn.apply(this, arguments);\n\t            }\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Optimized internal two-arity curry function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curry2 = function _curry2(fn) {\n\t        return function f2(a, b) {\n\t            switch (arguments.length) {\n\t            case 0:\n\t                return f2;\n\t            case 1:\n\t                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n\t                    return fn(a, _b);\n\t                });\n\t            default:\n\t                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n\t                    return fn(_a, b);\n\t                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n\t                    return fn(a, _b);\n\t                }) : fn(a, b);\n\t            }\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Optimized internal three-arity curry function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curry3 = function _curry3(fn) {\n\t        return function f3(a, b, c) {\n\t            switch (arguments.length) {\n\t            case 0:\n\t                return f3;\n\t            case 1:\n\t                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n\t                    return fn(a, _b, _c);\n\t                });\n\t            case 2:\n\t                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n\t                    return fn(_a, b, _c);\n\t                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n\t                    return fn(a, _b, _c);\n\t                }) : _curry1(function (_c) {\n\t                    return fn(a, b, _c);\n\t                });\n\t            default:\n\t                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n\t                    return fn(_a, _b, c);\n\t                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n\t                    return fn(_a, b, _c);\n\t                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n\t                    return fn(a, _b, _c);\n\t                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n\t                    return fn(_a, b, c);\n\t                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n\t                    return fn(a, _b, c);\n\t                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n\t                    return fn(a, b, _c);\n\t                }) : fn(a, b, c);\n\t            }\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Internal curryN function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Number} length The arity of the curried function.\n\t     * @param {Array} received An array of arguments received thus far.\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curryN = function _curryN(length, received, fn) {\n\t        return function () {\n\t            var combined = [];\n\t            var argsIdx = 0;\n\t            var left = length;\n\t            var combinedIdx = 0;\n\t            while (combinedIdx < received.length || argsIdx < arguments.length) {\n\t                var result;\n\t                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n\t                    result = received[combinedIdx];\n\t                } else {\n\t                    result = arguments[argsIdx];\n\t                    argsIdx += 1;\n\t                }\n\t                combined[combinedIdx] = result;\n\t                if (!_isPlaceholder(result)) {\n\t                    left -= 1;\n\t                }\n\t                combinedIdx += 1;\n\t            }\n\t            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Returns a function that dispatches with different strategies based on the\n\t     * object in list position (last argument). If it is an array, executes [fn].\n\t     * Otherwise, if it has a function with [methodname], it will execute that\n\t     * function (functor case). Otherwise, if it is a transformer, uses transducer\n\t     * [xf] to return a new transformer (transducer case). Otherwise, it will\n\t     * default to executing [fn].\n\t     *\n\t     * @private\n\t     * @param {String} methodname property to check for a custom implementation\n\t     * @param {Function} xf transducer to initialize if object is transformer\n\t     * @param {Function} fn default ramda implementation\n\t     * @return {Function} A function that dispatches on object in list position\n\t     */\n\t    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n\t        return function () {\n\t            var length = arguments.length;\n\t            if (length === 0) {\n\t                return fn();\n\t            }\n\t            var obj = arguments[length - 1];\n\t            if (!_isArray(obj)) {\n\t                var args = _slice(arguments, 0, length - 1);\n\t                if (typeof obj[methodname] === 'function') {\n\t                    return obj[methodname].apply(obj, args);\n\t                }\n\t                if (_isTransformer(obj)) {\n\t                    var transducer = xf.apply(null, args);\n\t                    return transducer(obj);\n\t                }\n\t            }\n\t            return fn.apply(this, arguments);\n\t        };\n\t    };\n\t\n\t    var _dropLastWhile = function dropLastWhile(pred, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0 && pred(list[idx])) {\n\t            idx -= 1;\n\t        }\n\t        return _slice(list, 0, idx + 1);\n\t    };\n\t\n\t    var _xall = function () {\n\t        function XAll(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.all = true;\n\t        }\n\t        XAll.prototype['@@transducer/init'] = _xfBase.init;\n\t        XAll.prototype['@@transducer/result'] = function (result) {\n\t            if (this.all) {\n\t                result = this.xf['@@transducer/step'](result, true);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XAll.prototype['@@transducer/step'] = function (result, input) {\n\t            if (!this.f(input)) {\n\t                this.all = false;\n\t                result = _reduced(this.xf['@@transducer/step'](result, false));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xall(f, xf) {\n\t            return new XAll(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xany = function () {\n\t        function XAny(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.any = false;\n\t        }\n\t        XAny.prototype['@@transducer/init'] = _xfBase.init;\n\t        XAny.prototype['@@transducer/result'] = function (result) {\n\t            if (!this.any) {\n\t                result = this.xf['@@transducer/step'](result, false);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XAny.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f(input)) {\n\t                this.any = true;\n\t                result = _reduced(this.xf['@@transducer/step'](result, true));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xany(f, xf) {\n\t            return new XAny(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xaperture = function () {\n\t        function XAperture(n, xf) {\n\t            this.xf = xf;\n\t            this.pos = 0;\n\t            this.full = false;\n\t            this.acc = new Array(n);\n\t        }\n\t        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\t        XAperture.prototype['@@transducer/result'] = function (result) {\n\t            this.acc = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XAperture.prototype['@@transducer/step'] = function (result, input) {\n\t            this.store(input);\n\t            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n\t        };\n\t        XAperture.prototype.store = function (input) {\n\t            this.acc[this.pos] = input;\n\t            this.pos += 1;\n\t            if (this.pos === this.acc.length) {\n\t                this.pos = 0;\n\t                this.full = true;\n\t            }\n\t        };\n\t        XAperture.prototype.getCopy = function () {\n\t            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n\t        };\n\t        return _curry2(function _xaperture(n, xf) {\n\t            return new XAperture(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdrop = function () {\n\t        function XDrop(n, xf) {\n\t            this.xf = xf;\n\t            this.n = n;\n\t        }\n\t        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\t        XDrop.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.n > 0) {\n\t                this.n -= 1;\n\t                return result;\n\t            }\n\t            return this.xf['@@transducer/step'](result, input);\n\t        };\n\t        return _curry2(function _xdrop(n, xf) {\n\t            return new XDrop(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdropLast = function () {\n\t        function XDropLast(n, xf) {\n\t            this.xf = xf;\n\t            this.pos = 0;\n\t            this.full = false;\n\t            this.acc = new Array(n);\n\t        }\n\t        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDropLast.prototype['@@transducer/result'] = function (result) {\n\t            this.acc = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.full) {\n\t                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n\t            }\n\t            this.store(input);\n\t            return result;\n\t        };\n\t        XDropLast.prototype.store = function (input) {\n\t            this.acc[this.pos] = input;\n\t            this.pos += 1;\n\t            if (this.pos === this.acc.length) {\n\t                this.pos = 0;\n\t                this.full = true;\n\t            }\n\t        };\n\t        return _curry2(function _xdropLast(n, xf) {\n\t            return new XDropLast(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdropRepeatsWith = function () {\n\t        function XDropRepeatsWith(pred, xf) {\n\t            this.xf = xf;\n\t            this.pred = pred;\n\t            this.lastValue = undefined;\n\t            this.seenFirstValue = false;\n\t        }\n\t        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n\t            return this.xf['@@transducer/init']();\n\t        };\n\t        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n\t            var sameAsLast = false;\n\t            if (!this.seenFirstValue) {\n\t                this.seenFirstValue = true;\n\t            } else if (this.pred(this.lastValue, input)) {\n\t                sameAsLast = true;\n\t            }\n\t            this.lastValue = input;\n\t            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n\t        };\n\t        return _curry2(function _xdropRepeatsWith(pred, xf) {\n\t            return new XDropRepeatsWith(pred, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdropWhile = function () {\n\t        function XDropWhile(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\t        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f) {\n\t                if (this.f(input)) {\n\t                    return result;\n\t                }\n\t                this.f = null;\n\t            }\n\t            return this.xf['@@transducer/step'](result, input);\n\t        };\n\t        return _curry2(function _xdropWhile(f, xf) {\n\t            return new XDropWhile(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfilter = function () {\n\t        function XFilter(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\t        XFilter.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n\t        };\n\t        return _curry2(function _xfilter(f, xf) {\n\t            return new XFilter(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfind = function () {\n\t        function XFind(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.found = false;\n\t        }\n\t        XFind.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFind.prototype['@@transducer/result'] = function (result) {\n\t            if (!this.found) {\n\t                result = this.xf['@@transducer/step'](result, void 0);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XFind.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f(input)) {\n\t                this.found = true;\n\t                result = _reduced(this.xf['@@transducer/step'](result, input));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfind(f, xf) {\n\t            return new XFind(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfindIndex = function () {\n\t        function XFindIndex(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.idx = -1;\n\t            this.found = false;\n\t        }\n\t        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFindIndex.prototype['@@transducer/result'] = function (result) {\n\t            if (!this.found) {\n\t                result = this.xf['@@transducer/step'](result, -1);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n\t            this.idx += 1;\n\t            if (this.f(input)) {\n\t                this.found = true;\n\t                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfindIndex(f, xf) {\n\t            return new XFindIndex(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfindLast = function () {\n\t        function XFindLast(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFindLast.prototype['@@transducer/result'] = function (result) {\n\t            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n\t        };\n\t        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f(input)) {\n\t                this.last = input;\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfindLast(f, xf) {\n\t            return new XFindLast(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfindLastIndex = function () {\n\t        function XFindLastIndex(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.idx = -1;\n\t            this.lastIdx = -1;\n\t        }\n\t        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n\t            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n\t        };\n\t        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n\t            this.idx += 1;\n\t            if (this.f(input)) {\n\t                this.lastIdx = this.idx;\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfindLastIndex(f, xf) {\n\t            return new XFindLastIndex(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xmap = function () {\n\t        function XMap(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XMap.prototype['@@transducer/init'] = _xfBase.init;\n\t        XMap.prototype['@@transducer/result'] = _xfBase.result;\n\t        XMap.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.xf['@@transducer/step'](result, this.f(input));\n\t        };\n\t        return _curry2(function _xmap(f, xf) {\n\t            return new XMap(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xtake = function () {\n\t        function XTake(n, xf) {\n\t            this.xf = xf;\n\t            this.n = n;\n\t        }\n\t        XTake.prototype['@@transducer/init'] = _xfBase.init;\n\t        XTake.prototype['@@transducer/result'] = _xfBase.result;\n\t        XTake.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.n === 0) {\n\t                return _reduced(result);\n\t            } else {\n\t                this.n -= 1;\n\t                return this.xf['@@transducer/step'](result, input);\n\t            }\n\t        };\n\t        return _curry2(function _xtake(n, xf) {\n\t            return new XTake(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xtakeWhile = function () {\n\t        function XTakeWhile(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\t        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n\t        };\n\t        return _curry2(function _xtakeWhile(f, xf) {\n\t            return new XTakeWhile(f, xf);\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Adds two numbers. Equivalent to `a + b` but curried.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a\n\t     * @param {Number} b\n\t     * @return {Number}\n\t     * @see R.subtract\n\t     * @example\n\t     *\n\t     *      R.add(2, 3);       //=>  5\n\t     *      R.add(7)(10);      //=> 17\n\t     */\n\t    var add = _curry2(function add(a, b) {\n\t        return a + b;\n\t    });\n\t\n\t    /**\n\t     * Applies a function to the value at the given index of an array, returning a\n\t     * new copy of the array with the element at the given index replaced with the\n\t     * result of the function application.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig (a -> a) -> Number -> [a] -> [a]\n\t     * @param {Function} fn The function to apply.\n\t     * @param {Number} idx The index.\n\t     * @param {Array|Arguments} list An array-like object whose value\n\t     *        at the supplied index will be replaced.\n\t     * @return {Array} A copy of the supplied array-like object with\n\t     *         the element at index `idx` replaced with the value\n\t     *         returned by applying `fn` to the existing element.\n\t     * @see R.update\n\t     * @example\n\t     *\n\t     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n\t     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n\t     */\n\t    var adjust = _curry3(function adjust(fn, idx, list) {\n\t        if (idx >= list.length || idx < -list.length) {\n\t            return list;\n\t        }\n\t        var start = idx < 0 ? list.length : 0;\n\t        var _idx = start + idx;\n\t        var _list = _concat(list);\n\t        _list[_idx] = fn(list[_idx]);\n\t        return _list;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if all elements of the list match the predicate, `false` if\n\t     * there are any that don't.\n\t     *\n\t     * Dispatches to the `all` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Boolean\n\t     * @param {Function} fn The predicate function.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n\t     *         otherwise.\n\t     * @see R.any, R.none, R.transduce\n\t     * @example\n\t     *\n\t     *      var lessThan2 = R.flip(R.lt)(2);\n\t     *      var lessThan3 = R.flip(R.lt)(3);\n\t     *      R.all(lessThan2)([1, 2]); //=> false\n\t     *      R.all(lessThan3)([1, 2]); //=> true\n\t     */\n\t    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n\t        var idx = 0;\n\t        while (idx < list.length) {\n\t            if (!fn(list[idx])) {\n\t                return false;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return true;\n\t    }));\n\t\n\t    /**\n\t     * Returns a function that always returns the given value. Note that for\n\t     * non-primitives the value returned is a reference to the original value.\n\t     *\n\t     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n\t     * other languages and libraries.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig a -> (* -> a)\n\t     * @param {*} val The value to wrap in a function\n\t     * @return {Function} A Function :: * -> val.\n\t     * @example\n\t     *\n\t     *      var t = R.always('Tee');\n\t     *      t(); //=> 'Tee'\n\t     */\n\t    var always = _curry1(function always(val) {\n\t        return function () {\n\t            return val;\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if both arguments are `true`; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig * -> * -> *\n\t     * @param {Boolean} a A boolean value\n\t     * @param {Boolean} b A boolean value\n\t     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n\t     * @see R.both\n\t     * @example\n\t     *\n\t     *      R.and(true, true); //=> true\n\t     *      R.and(true, false); //=> false\n\t     *      R.and(false, true); //=> false\n\t     *      R.and(false, false); //=> false\n\t     */\n\t    var and = _curry2(function and(a, b) {\n\t        return a && b;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if at least one of elements of the list match the predicate,\n\t     * `false` otherwise.\n\t     *\n\t     * Dispatches to the `any` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Boolean\n\t     * @param {Function} fn The predicate function.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n\t     *         otherwise.\n\t     * @see R.all, R.none, R.transduce\n\t     * @example\n\t     *\n\t     *      var lessThan0 = R.flip(R.lt)(0);\n\t     *      var lessThan2 = R.flip(R.lt)(2);\n\t     *      R.any(lessThan0)([1, 2]); //=> false\n\t     *      R.any(lessThan2)([1, 2]); //=> true\n\t     */\n\t    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n\t        var idx = 0;\n\t        while (idx < list.length) {\n\t            if (fn(list[idx])) {\n\t                return true;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return false;\n\t    }));\n\t\n\t    /**\n\t     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n\t     * greater than the length of the list, an empty list is returned.\n\t     *\n\t     * Dispatches to the `aperture` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [[a]]\n\t     * @param {Number} n The size of the tuples to create\n\t     * @param {Array} list The list to split into `n`-tuples\n\t     * @return {Array} The new list.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n\t     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n\t     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n\t     */\n\t    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\t\n\t    /**\n\t     * Returns a new list containing the contents of the given list, followed by\n\t     * the given element.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> [a]\n\t     * @param {*} el The element to add to the end of the new list.\n\t     * @param {Array} list The list whose contents will be added to the beginning of the output\n\t     *        list.\n\t     * @return {Array} A new list containing the contents of the old list followed by `el`.\n\t     * @see R.prepend\n\t     * @example\n\t     *\n\t     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n\t     *      R.append('tests', []); //=> ['tests']\n\t     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n\t     */\n\t    var append = _curry2(function append(el, list) {\n\t        return _concat(list, [el]);\n\t    });\n\t\n\t    /**\n\t     * Applies function `fn` to the argument list `args`. This is useful for\n\t     * creating a fixed-arity function from a variadic function. `fn` should be a\n\t     * bound function if context is significant.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Function\n\t     * @sig (*... -> a) -> [*] -> a\n\t     * @param {Function} fn\n\t     * @param {Array} args\n\t     * @return {*}\n\t     * @see R.call, R.unapply\n\t     * @example\n\t     *\n\t     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n\t     *      R.apply(Math.max, nums); //=> 42\n\t     */\n\t    var apply = _curry2(function apply(fn, args) {\n\t        return fn.apply(this, args);\n\t    });\n\t\n\t    /**\n\t     * Makes a shallow clone of an object, setting or overriding the specified\n\t     * property with the given value. Note that this copies and flattens prototype\n\t     * properties onto the new object as well. All non-primitive properties are\n\t     * copied by reference.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @sig String -> a -> {k: v} -> {k: v}\n\t     * @param {String} prop the property name to set\n\t     * @param {*} val the new value\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object similar to the original except for the specified property.\n\t     * @see R.dissoc\n\t     * @example\n\t     *\n\t     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n\t     */\n\t    var assoc = _curry3(function assoc(prop, val, obj) {\n\t        var result = {};\n\t        for (var p in obj) {\n\t            result[p] = obj[p];\n\t        }\n\t        result[prop] = val;\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Makes a shallow clone of an object, setting or overriding the nodes required\n\t     * to create the given path, and placing the specific value at the tail end of\n\t     * that path. Note that this copies and flattens prototype properties onto the\n\t     * new object as well. All non-primitive properties are copied by reference.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @sig [String] -> a -> {k: v} -> {k: v}\n\t     * @param {Array} path the path to set\n\t     * @param {*} val the new value\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object similar to the original except along the specified path.\n\t     * @see R.dissocPath\n\t     * @example\n\t     *\n\t     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n\t     */\n\t    var assocPath = _curry3(function assocPath(path, val, obj) {\n\t        switch (path.length) {\n\t        case 0:\n\t            return val;\n\t        case 1:\n\t            return assoc(path[0], val, obj);\n\t        default:\n\t            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that is bound to a context.\n\t     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n\t     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Function\n\t     * @category Object\n\t     * @sig (* -> *) -> {*} -> (* -> *)\n\t     * @param {Function} fn The function to bind to context\n\t     * @param {Object} thisObj The context to bind `fn` to\n\t     * @return {Function} A function that will execute in the context of `thisObj`.\n\t     * @see R.partial\n\t     */\n\t    var bind = _curry2(function bind(fn, thisObj) {\n\t        return _arity(fn.length, function () {\n\t            return fn.apply(thisObj, arguments);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * A function wrapping calls to the two functions in an `&&` operation,\n\t     * returning the result of the first function if it is false-y and the result\n\t     * of the second function otherwise. Note that this is short-circuited,\n\t     * meaning that the second function will not be invoked if the first returns a\n\t     * false-y value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category Logic\n\t     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n\t     * @param {Function} f a predicate\n\t     * @param {Function} g another predicate\n\t     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n\t     * @see R.and\n\t     * @example\n\t     *\n\t     *      var gt10 = x => x > 10;\n\t     *      var even = x => x % 2 === 0;\n\t     *      var f = R.both(gt10, even);\n\t     *      f(100); //=> true\n\t     *      f(101); //=> false\n\t     */\n\t    var both = _curry2(function both(f, g) {\n\t        return function _both() {\n\t            return f.apply(this, arguments) && g.apply(this, arguments);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Makes a comparator function out of a function that reports whether the first\n\t     * element is less than the second.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a, b -> Boolean) -> (a, b -> Number)\n\t     * @param {Function} pred A predicate function of arity two.\n\t     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n\t     * @example\n\t     *\n\t     *      var cmp = R.comparator((a, b) => a.age < b.age);\n\t     *      var people = [\n\t     *        // ...\n\t     *      ];\n\t     *      R.sort(cmp, people);\n\t     */\n\t    var comparator = _curry1(function comparator(pred) {\n\t        return function (a, b) {\n\t            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n\t     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n\t     * to `fn` are applied to each of the predicates in turn until one returns a\n\t     * \"truthy\" value, at which point `fn` returns the result of applying its\n\t     * arguments to the corresponding transformer. If none of the predicates\n\t     * matches, `fn` returns undefined.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Logic\n\t     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n\t     * @param {Array} pairs\n\t     * @return {Function}\n\t     * @example\n\t     *\n\t     *      var fn = R.cond([\n\t     *        [R.equals(0),   R.always('water freezes at 0°C')],\n\t     *        [R.equals(100), R.always('water boils at 100°C')],\n\t     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n\t     *      ]);\n\t     *      fn(0); //=> 'water freezes at 0°C'\n\t     *      fn(50); //=> 'nothing special happens at 50°C'\n\t     *      fn(100); //=> 'water boils at 100°C'\n\t     */\n\t    var cond = _curry1(function cond(pairs) {\n\t        return function () {\n\t            var idx = 0;\n\t            while (idx < pairs.length) {\n\t                if (pairs[idx][0].apply(this, arguments)) {\n\t                    return pairs[idx][1].apply(this, arguments);\n\t                }\n\t                idx += 1;\n\t            }\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Counts the elements of a list according to how many match each value of a\n\t     * key generated by the supplied function. Returns an object mapping the keys\n\t     * produced by `fn` to the number of occurrences in the list. Note that all\n\t     * keys are coerced to strings because of how JavaScript objects work.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> String) -> [a] -> {*}\n\t     * @param {Function} fn The function used to map values to keys.\n\t     * @param {Array} list The list to count elements from.\n\t     * @return {Object} An object mapping keys to number of occurrences in the list.\n\t     * @example\n\t     *\n\t     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n\t     *      var letters = R.split('', 'abcABCaaaBBc');\n\t     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n\t     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n\t     */\n\t    var countBy = _curry2(function countBy(fn, list) {\n\t        var counts = {};\n\t        var len = list.length;\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            var key = fn(list[idx]);\n\t            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n\t            idx += 1;\n\t        }\n\t        return counts;\n\t    });\n\t\n\t    /**\n\t     * Returns a curried equivalent of the provided function, with the specified\n\t     * arity. The curried function has two unusual capabilities. First, its\n\t     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1)(2)(3)`\n\t     *   - `g(1)(2, 3)`\n\t     *   - `g(1, 2)(3)`\n\t     *   - `g(1, 2, 3)`\n\t     *\n\t     * Secondly, the special placeholder value `R.__` may be used to specify\n\t     * \"gaps\", allowing partial application of any combination of arguments,\n\t     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1, 2, 3)`\n\t     *   - `g(_, 2, 3)(1)`\n\t     *   - `g(_, _, 3)(1)(2)`\n\t     *   - `g(_, _, 3)(1, 2)`\n\t     *   - `g(_, 2)(1)(3)`\n\t     *   - `g(_, 2)(1, 3)`\n\t     *   - `g(_, 2)(_, 3)(1)`\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.5.0\n\t     * @category Function\n\t     * @sig Number -> (* -> a) -> (* -> a)\n\t     * @param {Number} length The arity for the returned function.\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} A new, curried function.\n\t     * @see R.curry\n\t     * @example\n\t     *\n\t     *      var sumArgs = (...args) => R.sum(args);\n\t     *\n\t     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n\t     *      var f = curriedAddFourNumbers(1, 2);\n\t     *      var g = f(3);\n\t     *      g(4); //=> 10\n\t     */\n\t    var curryN = _curry2(function curryN(length, fn) {\n\t        if (length === 1) {\n\t            return _curry1(fn);\n\t        }\n\t        return _arity(length, _curryN(length, [], fn));\n\t    });\n\t\n\t    /**\n\t     * Decrements its argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Math\n\t     * @sig Number -> Number\n\t     * @param {Number} n\n\t     * @return {Number}\n\t     * @see R.inc\n\t     * @example\n\t     *\n\t     *      R.dec(42); //=> 41\n\t     */\n\t    var dec = add(-1);\n\t\n\t    /**\n\t     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n\t     * otherwise the first argument is returned.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Logic\n\t     * @sig a -> b -> a | b\n\t     * @param {a} val The default value.\n\t     * @param {b} val The value to return if it is not null or undefined\n\t     * @return {*} The the second value or the default value\n\t     * @example\n\t     *\n\t     *      var defaultTo42 = R.defaultTo(42);\n\t     *\n\t     *      defaultTo42(null);  //=> 42\n\t     *      defaultTo42(undefined);  //=> 42\n\t     *      defaultTo42('Ramda');  //=> 'Ramda'\n\t     *      defaultTo42(parseInt('string')); //=> 42\n\t     */\n\t    var defaultTo = _curry2(function defaultTo(d, v) {\n\t        return v == null || v !== v ? d : v;\n\t    });\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements in the first list not\n\t     * contained in the second list. Duplication is determined according to the\n\t     * value returned by applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` that are not in `list2`.\n\t     * @see R.difference\n\t     * @example\n\t     *\n\t     *      function cmp(x, y) => x.a === y.a;\n\t     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n\t     *      var l2 = [{a: 3}, {a: 4}];\n\t     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n\t     */\n\t    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n\t        var out = [];\n\t        var idx = 0;\n\t        var firstLen = first.length;\n\t        while (idx < firstLen) {\n\t            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n\t                out.push(first[idx]);\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a new object that does not contain a `prop` property.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Object\n\t     * @sig String -> {k: v} -> {k: v}\n\t     * @param {String} prop the name of the property to dissociate\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object similar to the original but without the specified property\n\t     * @see R.assoc\n\t     * @example\n\t     *\n\t     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n\t     */\n\t    var dissoc = _curry2(function dissoc(prop, obj) {\n\t        var result = {};\n\t        for (var p in obj) {\n\t            if (p !== prop) {\n\t                result[p] = obj[p];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Makes a shallow clone of an object, omitting the property at the given path.\n\t     * Note that this copies and flattens prototype properties onto the new object\n\t     * as well. All non-primitive properties are copied by reference.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.11.0\n\t     * @category Object\n\t     * @sig [String] -> {k: v} -> {k: v}\n\t     * @param {Array} path the path to set\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object without the property at path\n\t     * @see R.assocPath\n\t     * @example\n\t     *\n\t     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n\t     */\n\t    var dissocPath = _curry2(function dissocPath(path, obj) {\n\t        switch (path.length) {\n\t        case 0:\n\t            return obj;\n\t        case 1:\n\t            return dissoc(path[0], obj);\n\t        default:\n\t            var head = path[0];\n\t            var tail = _slice(path, 1);\n\t            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Divides two numbers. Equivalent to `a / b`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The first value.\n\t     * @param {Number} b The second value.\n\t     * @return {Number} The result of `a / b`.\n\t     * @see R.multiply\n\t     * @example\n\t     *\n\t     *      R.divide(71, 100); //=> 0.71\n\t     *\n\t     *      var half = R.divide(R.__, 2);\n\t     *      half(42); //=> 21\n\t     *\n\t     *      var reciprocal = R.divide(1);\n\t     *      reciprocal(4);   //=> 0.25\n\t     */\n\t    var divide = _curry2(function divide(a, b) {\n\t        return a / b;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing the last `n` elements of a given list, passing\n\t     * each value to the supplied predicate function, skipping elements while the\n\t     * predicate function returns `true`. The predicate function is passed one\n\t     * argument: *(value)*.\n\t     *\n\t     * Dispatches to the `dropWhile` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.takeWhile, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var lteTwo = x => x <= 2;\n\t     *\n\t     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n\t     */\n\t    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len && pred(list[idx])) {\n\t            idx += 1;\n\t        }\n\t        return _slice(list, idx);\n\t    }));\n\t\n\t    /**\n\t     * A function wrapping calls to the two functions in an `||` operation,\n\t     * returning the result of the first function if it is truth-y and the result\n\t     * of the second function otherwise. Note that this is short-circuited,\n\t     * meaning that the second function will not be invoked if the first returns a\n\t     * truth-y value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category Logic\n\t     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n\t     * @param {Function} f a predicate\n\t     * @param {Function} g another predicate\n\t     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n\t     * @see R.or\n\t     * @example\n\t     *\n\t     *      var gt10 = x => x > 10;\n\t     *      var even = x => x % 2 === 0;\n\t     *      var f = R.either(gt10, even);\n\t     *      f(101); //=> true\n\t     *      f(8); //=> true\n\t     */\n\t    var either = _curry2(function either(f, g) {\n\t        return function _either() {\n\t            return f.apply(this, arguments) || g.apply(this, arguments);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns the empty value of its argument's type. Ramda defines the empty\n\t     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n\t     * types are supported if they define `<Type>.empty` and/or\n\t     * `<Type>.prototype.empty`.\n\t     *\n\t     * Dispatches to the `empty` method of the first argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Function\n\t     * @sig a -> a\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @example\n\t     *\n\t     *      R.empty(Just(42));      //=> Nothing()\n\t     *      R.empty([1, 2, 3]);     //=> []\n\t     *      R.empty('unicorns');    //=> ''\n\t     *      R.empty({x: 1, y: 2});  //=> {}\n\t     */\n\t    // else\n\t    var empty = _curry1(function empty(x) {\n\t        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n\t            return arguments;\n\t        }() : // else\n\t        void 0;\n\t    });\n\t\n\t    /**\n\t     * Creates a new object by recursively evolving a shallow copy of `object`,\n\t     * according to the `transformation` functions. All non-primitive properties\n\t     * are copied by reference.\n\t     *\n\t     * A `transformation` function will not be invoked if its corresponding key\n\t     * does not exist in the evolved object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n\t     * @param {Object} transformations The object specifying transformation functions to apply\n\t     *        to the object.\n\t     * @param {Object} object The object to be transformed.\n\t     * @return {Object} The transformed object.\n\t     * @example\n\t     *\n\t     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n\t     *      var transformations = {\n\t     *        firstName: R.trim,\n\t     *        lastName: R.trim, // Will not get invoked.\n\t     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n\t     *      };\n\t     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n\t     */\n\t    var evolve = _curry2(function evolve(transformations, object) {\n\t        var result = {};\n\t        var transformation, key, type;\n\t        for (key in object) {\n\t            transformation = transformations[key];\n\t            type = typeof transformation;\n\t            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the first element of the list which matches the predicate, or\n\t     * `undefined` if no element matches.\n\t     *\n\t     * Dispatches to the `find` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> a | undefined\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     *        desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Object} The element found, or `undefined`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n\t     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n\t     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n\t     */\n\t    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len) {\n\t            if (fn(list[idx])) {\n\t                return list[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t    }));\n\t\n\t    /**\n\t     * Returns the index of the first element of the list which matches the\n\t     * predicate, or `-1` if no element matches.\n\t     *\n\t     * Dispatches to the `findIndex` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Number\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     * desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Number} The index of the element found, or `-1`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n\t     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n\t     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n\t     */\n\t    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len) {\n\t            if (fn(list[idx])) {\n\t                return idx;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return -1;\n\t    }));\n\t\n\t    /**\n\t     * Returns the last element of the list which matches the predicate, or\n\t     * `undefined` if no element matches.\n\t     *\n\t     * Dispatches to the `findLast` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> a | undefined\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     * desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Object} The element found, or `undefined`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n\t     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n\t     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n\t     */\n\t    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0) {\n\t            if (fn(list[idx])) {\n\t                return list[idx];\n\t            }\n\t            idx -= 1;\n\t        }\n\t    }));\n\t\n\t    /**\n\t     * Returns the index of the last element of the list which matches the\n\t     * predicate, or `-1` if no element matches.\n\t     *\n\t     * Dispatches to the `findLastIndex` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Number\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     * desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Number} The index of the element found, or `-1`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n\t     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n\t     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n\t     */\n\t    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0) {\n\t            if (fn(list[idx])) {\n\t                return idx;\n\t            }\n\t            idx -= 1;\n\t        }\n\t        return -1;\n\t    }));\n\t\n\t    /**\n\t     * Iterate over an input `list`, calling a provided function `fn` for each\n\t     * element in the list.\n\t     *\n\t     * `fn` receives one argument: *(value)*.\n\t     *\n\t     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n\t     * arrays), unlike the native `Array.prototype.forEach` method. For more\n\t     * details on this behavior, see:\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n\t     *\n\t     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n\t     * the original array. In some libraries this function is named `each`.\n\t     *\n\t     * Dispatches to the `forEach` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> *) -> [a] -> [a]\n\t     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {Array} The original list.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var printXPlusFive = x => console.log(x + 5);\n\t     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n\t     *      //-> 6\n\t     *      //-> 7\n\t     *      //-> 8\n\t     */\n\t    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n\t        var len = list.length;\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            fn(list[idx]);\n\t            idx += 1;\n\t        }\n\t        return list;\n\t    }));\n\t\n\t    /**\n\t     * Creates a new object out of a list key-value pairs.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig [[k,v]] -> {k: v}\n\t     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n\t     * @return {Object} The object made by pairing up `keys` and `values`.\n\t     * @see R.toPairs, R.pair\n\t     * @example\n\t     *\n\t     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n\t     */\n\t    var fromPairs = _curry1(function fromPairs(pairs) {\n\t        var idx = 0;\n\t        var len = pairs.length;\n\t        var out = {};\n\t        while (idx < len) {\n\t            if (_isArray(pairs[idx]) && pairs[idx].length) {\n\t                out[pairs[idx][0]] = pairs[idx][1];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is greater than the second; `false`\n\t     * otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @see R.lt\n\t     * @example\n\t     *\n\t     *      R.gt(2, 1); //=> true\n\t     *      R.gt(2, 2); //=> false\n\t     *      R.gt(2, 3); //=> false\n\t     *      R.gt('a', 'z'); //=> false\n\t     *      R.gt('z', 'a'); //=> true\n\t     */\n\t    var gt = _curry2(function gt(a, b) {\n\t        return a > b;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is greater than or equal to the second;\n\t     * `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {Number} a\n\t     * @param {Number} b\n\t     * @return {Boolean}\n\t     * @see R.lte\n\t     * @example\n\t     *\n\t     *      R.gte(2, 1); //=> true\n\t     *      R.gte(2, 2); //=> true\n\t     *      R.gte(2, 3); //=> false\n\t     *      R.gte('a', 'z'); //=> false\n\t     *      R.gte('z', 'a'); //=> true\n\t     */\n\t    var gte = _curry2(function gte(a, b) {\n\t        return a >= b;\n\t    });\n\t\n\t    /**\n\t     * Returns whether or not an object has an own property with the specified name\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Object\n\t     * @sig s -> {s: x} -> Boolean\n\t     * @param {String} prop The name of the property to check for.\n\t     * @param {Object} obj The object to query.\n\t     * @return {Boolean} Whether the property exists.\n\t     * @example\n\t     *\n\t     *      var hasName = R.has('name');\n\t     *      hasName({name: 'alice'});   //=> true\n\t     *      hasName({name: 'bob'});     //=> true\n\t     *      hasName({});                //=> false\n\t     *\n\t     *      var point = {x: 0, y: 0};\n\t     *      var pointHas = R.has(R.__, point);\n\t     *      pointHas('x');  //=> true\n\t     *      pointHas('y');  //=> true\n\t     *      pointHas('z');  //=> false\n\t     */\n\t    var has = _curry2(_has);\n\t\n\t    /**\n\t     * Returns whether or not an object or its prototype chain has a property with\n\t     * the specified name\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Object\n\t     * @sig s -> {s: x} -> Boolean\n\t     * @param {String} prop The name of the property to check for.\n\t     * @param {Object} obj The object to query.\n\t     * @return {Boolean} Whether the property exists.\n\t     * @example\n\t     *\n\t     *      function Rectangle(width, height) {\n\t     *        this.width = width;\n\t     *        this.height = height;\n\t     *      }\n\t     *      Rectangle.prototype.area = function() {\n\t     *        return this.width * this.height;\n\t     *      };\n\t     *\n\t     *      var square = new Rectangle(2, 2);\n\t     *      R.hasIn('width', square);  //=> true\n\t     *      R.hasIn('area', square);  //=> true\n\t     */\n\t    var hasIn = _curry2(function hasIn(prop, obj) {\n\t        return prop in obj;\n\t    });\n\t\n\t    /**\n\t     * Returns true if its arguments are identical, false otherwise. Values are\n\t     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n\t     * `0` and `-0` are not identical.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category Relation\n\t     * @sig a -> a -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      var o = {};\n\t     *      R.identical(o, o); //=> true\n\t     *      R.identical(1, 1); //=> true\n\t     *      R.identical(1, '1'); //=> false\n\t     *      R.identical([], []); //=> false\n\t     *      R.identical(0, -0); //=> false\n\t     *      R.identical(NaN, NaN); //=> true\n\t     */\n\t    // SameValue algorithm\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Step 6.a: NaN == NaN\n\t    var identical = _curry2(function identical(a, b) {\n\t        // SameValue algorithm\n\t        if (a === b) {\n\t            // Steps 1-5, 7-10\n\t            // Steps 6.b-6.e: +0 != -0\n\t            return a !== 0 || 1 / a === 1 / b;\n\t        } else {\n\t            // Step 6.a: NaN == NaN\n\t            return a !== a && b !== b;\n\t        }\n\t    });\n\t\n\t    /**\n\t     * A function that does nothing but return the parameter supplied to it. Good\n\t     * as a default or placeholder function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig a -> a\n\t     * @param {*} x The value to return.\n\t     * @return {*} The input value, `x`.\n\t     * @example\n\t     *\n\t     *      R.identity(1); //=> 1\n\t     *\n\t     *      var obj = {};\n\t     *      R.identity(obj) === obj; //=> true\n\t     */\n\t    var identity = _curry1(_identity);\n\t\n\t    /**\n\t     * Creates a function that will process either the `onTrue` or the `onFalse`\n\t     * function depending upon the result of the `condition` predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Logic\n\t     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n\t     * @param {Function} condition A predicate function\n\t     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n\t     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n\t     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n\t     *                    function depending upon the result of the `condition` predicate.\n\t     * @see R.unless, R.when\n\t     * @example\n\t     *\n\t     *      var incCount = R.ifElse(\n\t     *        R.has('count'),\n\t     *        R.over(R.lensProp('count'), R.inc),\n\t     *        R.assoc('count', 1)\n\t     *      );\n\t     *      incCount({});           //=> { count: 1 }\n\t     *      incCount({ count: 1 }); //=> { count: 2 }\n\t     */\n\t    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n\t        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n\t            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Increments its argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Math\n\t     * @sig Number -> Number\n\t     * @param {Number} n\n\t     * @return {Number}\n\t     * @see R.dec\n\t     * @example\n\t     *\n\t     *      R.inc(42); //=> 43\n\t     */\n\t    var inc = add(1);\n\t\n\t    /**\n\t     * Inserts the supplied element into the list, at index `index`. _Note that\n\t     * this is not destructive_: it returns a copy of the list with the changes.\n\t     * <small>No lists have been harmed in the application of this function.</small>\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.2\n\t     * @category List\n\t     * @sig Number -> a -> [a] -> [a]\n\t     * @param {Number} index The position to insert the element\n\t     * @param {*} elt The element to insert into the Array\n\t     * @param {Array} list The list to insert into\n\t     * @return {Array} A new Array with `elt` inserted at `index`.\n\t     * @example\n\t     *\n\t     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n\t     */\n\t    var insert = _curry3(function insert(idx, elt, list) {\n\t        idx = idx < list.length && idx >= 0 ? idx : list.length;\n\t        var result = _slice(list);\n\t        result.splice(idx, 0, elt);\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n\t     * destructive_: it returns a copy of the list with the changes.\n\t     * <small>No lists have been harmed in the application of this function.</small>\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a] -> [a]\n\t     * @param {Number} index The position to insert the sub-list\n\t     * @param {Array} elts The sub-list to insert into the Array\n\t     * @param {Array} list The list to insert the sub-list into\n\t     * @return {Array} A new Array with `elts` inserted starting at `index`.\n\t     * @example\n\t     *\n\t     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n\t     */\n\t    var insertAll = _curry3(function insertAll(idx, elts, list) {\n\t        idx = idx < list.length && idx >= 0 ? idx : list.length;\n\t        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n\t    });\n\t\n\t    /**\n\t     * Creates a new list with the separator interposed between elements.\n\t     *\n\t     * Dispatches to the `intersperse` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig a -> [a] -> [a]\n\t     * @param {*} separator The element to add to the list.\n\t     * @param {Array} list The list to be interposed.\n\t     * @return {Array} The new list.\n\t     * @example\n\t     *\n\t     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n\t     */\n\t    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n\t        var out = [];\n\t        var idx = 0;\n\t        var length = list.length;\n\t        while (idx < length) {\n\t            if (idx === length - 1) {\n\t                out.push(list[idx]);\n\t            } else {\n\t                out.push(list[idx], separator);\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    }));\n\t\n\t    /**\n\t     * See if an object (`val`) is an instance of the supplied constructor. This\n\t     * function will check up the inheritance chain, if any.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Type\n\t     * @sig (* -> {*}) -> a -> Boolean\n\t     * @param {Object} ctor A constructor\n\t     * @param {*} val The value to test\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      R.is(Object, {}); //=> true\n\t     *      R.is(Number, 1); //=> true\n\t     *      R.is(Object, 1); //=> false\n\t     *      R.is(String, 's'); //=> true\n\t     *      R.is(String, new String('')); //=> true\n\t     *      R.is(Object, new String('')); //=> true\n\t     *      R.is(Object, 's'); //=> false\n\t     *      R.is(Number, {}); //=> false\n\t     */\n\t    var is = _curry2(function is(Ctor, val) {\n\t        return val != null && val.constructor === Ctor || val instanceof Ctor;\n\t    });\n\t\n\t    /**\n\t     * Tests whether or not an object is similar to an array.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.5.0\n\t     * @category Type\n\t     * @category List\n\t     * @sig * -> Boolean\n\t     * @param {*} x The object to test.\n\t     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n\t     * @example\n\t     *\n\t     *      R.isArrayLike([]); //=> true\n\t     *      R.isArrayLike(true); //=> false\n\t     *      R.isArrayLike({}); //=> false\n\t     *      R.isArrayLike({length: 10}); //=> false\n\t     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n\t     */\n\t    var isArrayLike = _curry1(function isArrayLike(x) {\n\t        if (_isArray(x)) {\n\t            return true;\n\t        }\n\t        if (!x) {\n\t            return false;\n\t        }\n\t        if (typeof x !== 'object') {\n\t            return false;\n\t        }\n\t        if (x instanceof String) {\n\t            return false;\n\t        }\n\t        if (x.nodeType === 1) {\n\t            return !!x.length;\n\t        }\n\t        if (x.length === 0) {\n\t            return true;\n\t        }\n\t        if (x.length > 0) {\n\t            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n\t        }\n\t        return false;\n\t    });\n\t\n\t    /**\n\t     * Checks if the input value is `null` or `undefined`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Type\n\t     * @sig * -> Boolean\n\t     * @param {*} x The value to test.\n\t     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n\t     * @example\n\t     *\n\t     *      R.isNil(null); //=> true\n\t     *      R.isNil(undefined); //=> true\n\t     *      R.isNil(0); //=> false\n\t     *      R.isNil([]); //=> false\n\t     */\n\t    var isNil = _curry1(function isNil(x) {\n\t        return x == null;\n\t    });\n\t\n\t    /**\n\t     * Returns a list containing the names of all the enumerable own properties of\n\t     * the supplied object.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {k: v} -> [k]\n\t     * @param {Object} obj The object to extract properties from\n\t     * @return {Array} An array of the object's own properties.\n\t     * @example\n\t     *\n\t     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n\t     */\n\t    // cover IE < 9 keys issues\n\t    // Safari bug\n\t    var keys = function () {\n\t        // cover IE < 9 keys issues\n\t        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n\t        var nonEnumerableProps = [\n\t            'constructor',\n\t            'valueOf',\n\t            'isPrototypeOf',\n\t            'toString',\n\t            'propertyIsEnumerable',\n\t            'hasOwnProperty',\n\t            'toLocaleString'\n\t        ];\n\t        // Safari bug\n\t        var hasArgsEnumBug = function () {\n\t            'use strict';\n\t            return arguments.propertyIsEnumerable('length');\n\t        }();\n\t        var contains = function contains(list, item) {\n\t            var idx = 0;\n\t            while (idx < list.length) {\n\t                if (list[idx] === item) {\n\t                    return true;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return false;\n\t        };\n\t        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n\t            return Object(obj) !== obj ? [] : Object.keys(obj);\n\t        }) : _curry1(function keys(obj) {\n\t            if (Object(obj) !== obj) {\n\t                return [];\n\t            }\n\t            var prop, nIdx;\n\t            var ks = [];\n\t            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\t            for (prop in obj) {\n\t                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n\t                    ks[ks.length] = prop;\n\t                }\n\t            }\n\t            if (hasEnumBug) {\n\t                nIdx = nonEnumerableProps.length - 1;\n\t                while (nIdx >= 0) {\n\t                    prop = nonEnumerableProps[nIdx];\n\t                    if (_has(prop, obj) && !contains(ks, prop)) {\n\t                        ks[ks.length] = prop;\n\t                    }\n\t                    nIdx -= 1;\n\t                }\n\t            }\n\t            return ks;\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Returns a list containing the names of all the properties of the supplied\n\t     * object, including prototype properties.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Object\n\t     * @sig {k: v} -> [k]\n\t     * @param {Object} obj The object to extract properties from\n\t     * @return {Array} An array of the object's own and prototype properties.\n\t     * @example\n\t     *\n\t     *      var F = function() { this.x = 'X'; };\n\t     *      F.prototype.y = 'Y';\n\t     *      var f = new F();\n\t     *      R.keysIn(f); //=> ['x', 'y']\n\t     */\n\t    var keysIn = _curry1(function keysIn(obj) {\n\t        var prop;\n\t        var ks = [];\n\t        for (prop in obj) {\n\t            ks[ks.length] = prop;\n\t        }\n\t        return ks;\n\t    });\n\t\n\t    /**\n\t     * Returns the number of elements in the array by returning `list.length`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig [a] -> Number\n\t     * @param {Array} list The array to inspect.\n\t     * @return {Number} The length of the array.\n\t     * @example\n\t     *\n\t     *      R.length([]); //=> 0\n\t     *      R.length([1, 2, 3]); //=> 3\n\t     */\n\t    var length = _curry1(function length(list) {\n\t        return list != null && is(Number, list.length) ? list.length : NaN;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is less than the second; `false`\n\t     * otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @see R.gt\n\t     * @example\n\t     *\n\t     *      R.lt(2, 1); //=> false\n\t     *      R.lt(2, 2); //=> false\n\t     *      R.lt(2, 3); //=> true\n\t     *      R.lt('a', 'z'); //=> true\n\t     *      R.lt('z', 'a'); //=> false\n\t     */\n\t    var lt = _curry2(function lt(a, b) {\n\t        return a < b;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is less than or equal to the second;\n\t     * `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {Number} a\n\t     * @param {Number} b\n\t     * @return {Boolean}\n\t     * @see R.gte\n\t     * @example\n\t     *\n\t     *      R.lte(2, 1); //=> false\n\t     *      R.lte(2, 2); //=> true\n\t     *      R.lte(2, 3); //=> true\n\t     *      R.lte('a', 'z'); //=> true\n\t     *      R.lte('z', 'a'); //=> false\n\t     */\n\t    var lte = _curry2(function lte(a, b) {\n\t        return a <= b;\n\t    });\n\t\n\t    /**\n\t     * The mapAccum function behaves like a combination of map and reduce; it\n\t     * applies a function to each element of a list, passing an accumulating\n\t     * parameter from left to right, and returning a final value of this\n\t     * accumulator together with the new list.\n\t     *\n\t     * The iterator function receives two arguments, *acc* and *value*, and should\n\t     * return a tuple *[acc, value]*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n\t     * @param {Function} fn The function to be called on every element of the input `list`.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var digits = ['1', '2', '3', '4'];\n\t     *      var append = (a, b) => [a + b, a + b];\n\t     *\n\t     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n\t     */\n\t    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [];\n\t        var tuple = [acc];\n\t        while (idx < len) {\n\t            tuple = fn(tuple[0], list[idx]);\n\t            result[idx] = tuple[1];\n\t            idx += 1;\n\t        }\n\t        return [\n\t            tuple[0],\n\t            result\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * The mapAccumRight function behaves like a combination of map and reduce; it\n\t     * applies a function to each element of a list, passing an accumulating\n\t     * parameter from right to left, and returning a final value of this\n\t     * accumulator together with the new list.\n\t     *\n\t     * Similar to `mapAccum`, except moves through the input list from the right to\n\t     * the left.\n\t     *\n\t     * The iterator function receives two arguments, *acc* and *value*, and should\n\t     * return a tuple *[acc, value]*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n\t     * @param {Function} fn The function to be called on every element of the input `list`.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var digits = ['1', '2', '3', '4'];\n\t     *      var append = (a, b) => [a + b, a + b];\n\t     *\n\t     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n\t     */\n\t    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n\t        var idx = list.length - 1;\n\t        var result = [];\n\t        var tuple = [acc];\n\t        while (idx >= 0) {\n\t            tuple = fn(tuple[0], list[idx]);\n\t            result[idx] = tuple[1];\n\t            idx -= 1;\n\t        }\n\t        return [\n\t            tuple[0],\n\t            result\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Tests a regular expression against a String. Note that this function will\n\t     * return an empty array when there are no matches. This differs from\n\t     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n\t     * which returns `null` when there are no matches.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category String\n\t     * @sig RegExp -> String -> [String | Undefined]\n\t     * @param {RegExp} rx A regular expression.\n\t     * @param {String} str The string to match against\n\t     * @return {Array} The list of matches or empty array.\n\t     * @see R.test\n\t     * @example\n\t     *\n\t     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n\t     *      R.match(/a/, 'b'); //=> []\n\t     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n\t     */\n\t    var match = _curry2(function match(rx, str) {\n\t        return str.match(rx) || [];\n\t    });\n\t\n\t    /**\n\t     * mathMod behaves like the modulo operator should mathematically, unlike the\n\t     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n\t     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n\t     * when the modulus is zero or negative.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} m The dividend.\n\t     * @param {Number} p the modulus.\n\t     * @return {Number} The result of `b mod a`.\n\t     * @example\n\t     *\n\t     *      R.mathMod(-17, 5);  //=> 3\n\t     *      R.mathMod(17, 5);   //=> 2\n\t     *      R.mathMod(17, -5);  //=> NaN\n\t     *      R.mathMod(17, 0);   //=> NaN\n\t     *      R.mathMod(17.2, 5); //=> NaN\n\t     *      R.mathMod(17, 5.3); //=> NaN\n\t     *\n\t     *      var clock = R.mathMod(R.__, 12);\n\t     *      clock(15); //=> 3\n\t     *      clock(24); //=> 0\n\t     *\n\t     *      var seventeenMod = R.mathMod(17);\n\t     *      seventeenMod(3);  //=> 2\n\t     *      seventeenMod(4);  //=> 1\n\t     *      seventeenMod(10); //=> 7\n\t     */\n\t    var mathMod = _curry2(function mathMod(m, p) {\n\t        if (!_isInteger(m)) {\n\t            return NaN;\n\t        }\n\t        if (!_isInteger(p) || p < 1) {\n\t            return NaN;\n\t        }\n\t        return (m % p + p) % p;\n\t    });\n\t\n\t    /**\n\t     * Returns the larger of its two arguments.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> a\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.maxBy, R.min\n\t     * @example\n\t     *\n\t     *      R.max(789, 123); //=> 789\n\t     *      R.max('a', 'b'); //=> 'b'\n\t     */\n\t    var max = _curry2(function max(a, b) {\n\t        return b > a ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Takes a function and two values, and returns whichever value produces the\n\t     * larger result when passed to the provided function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Relation\n\t     * @sig Ord b => (a -> b) -> a -> a -> a\n\t     * @param {Function} f\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.max, R.minBy\n\t     * @example\n\t     *\n\t     *      //  square :: Number -> Number\n\t     *      var square = n => n * n;\n\t     *\n\t     *      R.maxBy(square, -3, 2); //=> -3\n\t     *\n\t     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n\t     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n\t     */\n\t    var maxBy = _curry3(function maxBy(f, a, b) {\n\t        return f(b) > f(a) ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Creates a new object with the own properties of the two provided objects. If\n\t     * a key exists in both objects, the provided function is applied to the key\n\t     * and the values associated with the key in each object, with the result being\n\t     * used as the value associated with the key in the returned object. The key\n\t     * will be excluded from the returned object if the resulting value is\n\t     * `undefined`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Object\n\t     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n\t     * @param {Function} fn\n\t     * @param {Object} l\n\t     * @param {Object} r\n\t     * @return {Object}\n\t     * @see R.merge, R.mergeWith\n\t     * @example\n\t     *\n\t     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n\t     *      R.mergeWithKey(concatValues,\n\t     *                     { a: true, thing: 'foo', values: [10, 20] },\n\t     *                     { b: true, thing: 'bar', values: [15, 35] });\n\t     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n\t     */\n\t    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n\t        var result = {};\n\t        var k;\n\t        for (k in l) {\n\t            if (_has(k, l)) {\n\t                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n\t            }\n\t        }\n\t        for (k in r) {\n\t            if (_has(k, r) && !_has(k, result)) {\n\t                result[k] = r[k];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the smaller of its two arguments.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> a\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.minBy, R.max\n\t     * @example\n\t     *\n\t     *      R.min(789, 123); //=> 123\n\t     *      R.min('a', 'b'); //=> 'a'\n\t     */\n\t    var min = _curry2(function min(a, b) {\n\t        return b < a ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Takes a function and two values, and returns whichever value produces the\n\t     * smaller result when passed to the provided function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Relation\n\t     * @sig Ord b => (a -> b) -> a -> a -> a\n\t     * @param {Function} f\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.min, R.maxBy\n\t     * @example\n\t     *\n\t     *      //  square :: Number -> Number\n\t     *      var square = n => n * n;\n\t     *\n\t     *      R.minBy(square, -3, 2); //=> 2\n\t     *\n\t     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n\t     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n\t     */\n\t    var minBy = _curry3(function minBy(f, a, b) {\n\t        return f(b) < f(a) ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Divides the second parameter by the first and returns the remainder. Note\n\t     * that this function preserves the JavaScript-style behavior for modulo. For\n\t     * mathematical modulo see `mathMod`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The value to the divide.\n\t     * @param {Number} b The pseudo-modulus\n\t     * @return {Number} The result of `b % a`.\n\t     * @see R.mathMod\n\t     * @example\n\t     *\n\t     *      R.modulo(17, 3); //=> 2\n\t     *      // JS behavior:\n\t     *      R.modulo(-17, 3); //=> -2\n\t     *      R.modulo(17, -3); //=> 2\n\t     *\n\t     *      var isOdd = R.modulo(R.__, 2);\n\t     *      isOdd(42); //=> 0\n\t     *      isOdd(21); //=> 1\n\t     */\n\t    var modulo = _curry2(function modulo(a, b) {\n\t        return a % b;\n\t    });\n\t\n\t    /**\n\t     * Multiplies two numbers. Equivalent to `a * b` but curried.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The first value.\n\t     * @param {Number} b The second value.\n\t     * @return {Number} The result of `a * b`.\n\t     * @see R.divide\n\t     * @example\n\t     *\n\t     *      var double = R.multiply(2);\n\t     *      var triple = R.multiply(3);\n\t     *      double(3);       //=>  6\n\t     *      triple(4);       //=> 12\n\t     *      R.multiply(2, 5);  //=> 10\n\t     */\n\t    var multiply = _curry2(function multiply(a, b) {\n\t        return a * b;\n\t    });\n\t\n\t    /**\n\t     * Wraps a function of any arity (including nullary) in a function that accepts\n\t     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n\t     * supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig Number -> (* -> a) -> (* -> a)\n\t     * @param {Number} n The desired arity of the new function.\n\t     * @param {Function} fn The function to wrap.\n\t     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t     *         arity `n`.\n\t     * @example\n\t     *\n\t     *      var takesTwoArgs = (a, b) => [a, b];\n\t     *\n\t     *      takesTwoArgs.length; //=> 2\n\t     *      takesTwoArgs(1, 2); //=> [1, 2]\n\t     *\n\t     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n\t     *      takesOneArg.length; //=> 1\n\t     *      // Only `n` arguments are passed to the wrapped function\n\t     *      takesOneArg(1, 2); //=> [1, undefined]\n\t     */\n\t    var nAry = _curry2(function nAry(n, fn) {\n\t        switch (n) {\n\t        case 0:\n\t            return function () {\n\t                return fn.call(this);\n\t            };\n\t        case 1:\n\t            return function (a0) {\n\t                return fn.call(this, a0);\n\t            };\n\t        case 2:\n\t            return function (a0, a1) {\n\t                return fn.call(this, a0, a1);\n\t            };\n\t        case 3:\n\t            return function (a0, a1, a2) {\n\t                return fn.call(this, a0, a1, a2);\n\t            };\n\t        case 4:\n\t            return function (a0, a1, a2, a3) {\n\t                return fn.call(this, a0, a1, a2, a3);\n\t            };\n\t        case 5:\n\t            return function (a0, a1, a2, a3, a4) {\n\t                return fn.call(this, a0, a1, a2, a3, a4);\n\t            };\n\t        case 6:\n\t            return function (a0, a1, a2, a3, a4, a5) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5);\n\t            };\n\t        case 7:\n\t            return function (a0, a1, a2, a3, a4, a5, a6) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n\t            };\n\t        case 8:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n\t            };\n\t        case 9:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n\t            };\n\t        case 10:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n\t            };\n\t        default:\n\t            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Negates its argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Math\n\t     * @sig Number -> Number\n\t     * @param {Number} n\n\t     * @return {Number}\n\t     * @example\n\t     *\n\t     *      R.negate(42); //=> -42\n\t     */\n\t    var negate = _curry1(function negate(n) {\n\t        return -n;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if no elements of the list match the predicate, `false`\n\t     * otherwise.\n\t     *\n\t     * Dispatches to the `any` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Boolean\n\t     * @param {Function} fn The predicate function.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n\t     * @see R.all, R.any\n\t     * @example\n\t     *\n\t     *      var isEven = n => n % 2 === 0;\n\t     *\n\t     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n\t     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n\t     */\n\t    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\t\n\t    /**\n\t     * A function that returns the `!` of its argument. It will return `true` when\n\t     * passed false-y value, and `false` when passed a truth-y one.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig * -> Boolean\n\t     * @param {*} a any value\n\t     * @return {Boolean} the logical inverse of passed argument.\n\t     * @see R.complement\n\t     * @example\n\t     *\n\t     *      R.not(true); //=> false\n\t     *      R.not(false); //=> true\n\t     *      R.not(0); => true\n\t     *      R.not(1); => false\n\t     */\n\t    var not = _curry1(function not(a) {\n\t        return !a;\n\t    });\n\t\n\t    /**\n\t     * Returns the nth element of the given list or string. If n is negative the\n\t     * element at index length + n is returned.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> [a] -> a | Undefined\n\t     * @sig Number -> String -> String\n\t     * @param {Number} offset\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @example\n\t     *\n\t     *      var list = ['foo', 'bar', 'baz', 'quux'];\n\t     *      R.nth(1, list); //=> 'bar'\n\t     *      R.nth(-1, list); //=> 'quux'\n\t     *      R.nth(-99, list); //=> undefined\n\t     *\n\t     *      R.nth('abc', 2); //=> 'c'\n\t     *      R.nth('abc', 3); //=> ''\n\t     */\n\t    var nth = _curry2(function nth(offset, list) {\n\t        var idx = offset < 0 ? list.length + offset : offset;\n\t        return _isString(list) ? list.charAt(idx) : list[idx];\n\t    });\n\t\n\t    /**\n\t     * Returns a function which returns its nth argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig Number -> *... -> *\n\t     * @param {Number} n\n\t     * @return {Function}\n\t     * @example\n\t     *\n\t     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n\t     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n\t     */\n\t    var nthArg = _curry1(function nthArg(n) {\n\t        return function () {\n\t            return nth(n, arguments);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Creates an object containing a single key:value pair.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Object\n\t     * @sig String -> a -> {String:a}\n\t     * @param {String} key\n\t     * @param {*} val\n\t     * @return {Object}\n\t     * @see R.pair\n\t     * @example\n\t     *\n\t     *      var matchPhrases = R.compose(\n\t     *        R.objOf('must'),\n\t     *        R.map(R.objOf('match_phrase'))\n\t     *      );\n\t     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n\t     */\n\t    var objOf = _curry2(function objOf(key, val) {\n\t        var obj = {};\n\t        obj[key] = val;\n\t        return obj;\n\t    });\n\t\n\t    /**\n\t     * Returns a singleton array containing the value provided.\n\t     *\n\t     * Note this `of` is different from the ES6 `of`; See\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Function\n\t     * @sig a -> [a]\n\t     * @param {*} x any value\n\t     * @return {Array} An array wrapping `x`.\n\t     * @example\n\t     *\n\t     *      R.of(null); //=> [null]\n\t     *      R.of([42]); //=> [[42]]\n\t     */\n\t    var of = _curry1(_of);\n\t\n\t    /**\n\t     * Accepts a function `fn` and returns a function that guards invocation of\n\t     * `fn` such that `fn` can only ever be called once, no matter how many times\n\t     * the returned function is invoked. The first value calculated is returned in\n\t     * subsequent invocations.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a... -> b) -> (a... -> b)\n\t     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n\t     * @return {Function} The wrapped function.\n\t     * @example\n\t     *\n\t     *      var addOneOnce = R.once(x => x + 1);\n\t     *      addOneOnce(10); //=> 11\n\t     *      addOneOnce(addOneOnce(50)); //=> 11\n\t     */\n\t    var once = _curry1(function once(fn) {\n\t        var called = false;\n\t        var result;\n\t        return _arity(fn.length, function () {\n\t            if (called) {\n\t                return result;\n\t            }\n\t            called = true;\n\t            result = fn.apply(this, arguments);\n\t            return result;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n\t     * if both arguments are `false`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig * -> * -> *\n\t     * @param {Boolean} a A boolean value\n\t     * @param {Boolean} b A boolean value\n\t     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n\t     * @see R.either\n\t     * @example\n\t     *\n\t     *      R.or(true, true); //=> true\n\t     *      R.or(true, false); //=> true\n\t     *      R.or(false, true); //=> true\n\t     *      R.or(false, false); //=> false\n\t     */\n\t    var or = _curry2(function or(a, b) {\n\t        return a || b;\n\t    });\n\t\n\t    /**\n\t     * Returns the result of \"setting\" the portion of the given data structure\n\t     * focused by the given lens to the result of applying the given function to\n\t     * the focused value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Lens s a -> (a -> a) -> s -> s\n\t     * @param {Lens} lens\n\t     * @param {*} v\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @see R.prop, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var headLens = R.lensIndex(0);\n\t     *\n\t     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n\t     */\n\t    var over = function () {\n\t        var Identity = function (x) {\n\t            return {\n\t                value: x,\n\t                map: function (f) {\n\t                    return Identity(f(x));\n\t                }\n\t            };\n\t        };\n\t        return _curry3(function over(lens, f, x) {\n\t            return lens(function (y) {\n\t                return Identity(f(y));\n\t            })(x).value;\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category List\n\t     * @sig a -> b -> (a,b)\n\t     * @param {*} fst\n\t     * @param {*} snd\n\t     * @return {Array}\n\t     * @see R.createMapEntry, R.of\n\t     * @example\n\t     *\n\t     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n\t     */\n\t    var pair = _curry2(function pair(fst, snd) {\n\t        return [\n\t            fst,\n\t            snd\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Retrieve the value at a given path.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Object\n\t     * @sig [String] -> {k: v} -> v | Undefined\n\t     * @param {Array} path The path to use.\n\t     * @param {Object} obj The object to retrieve the nested property from.\n\t     * @return {*} The data at `path`.\n\t     * @example\n\t     *\n\t     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n\t     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n\t     */\n\t    var path = _curry2(function path(paths, obj) {\n\t        var val = obj;\n\t        var idx = 0;\n\t        while (idx < paths.length) {\n\t            if (val == null) {\n\t                return;\n\t            }\n\t            val = val[paths[idx]];\n\t            idx += 1;\n\t        }\n\t        return val;\n\t    });\n\t\n\t    /**\n\t     * If the given, non-null object has a value at the given path, returns the\n\t     * value at that path. Otherwise returns the provided default value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Object\n\t     * @sig a -> [String] -> Object -> a\n\t     * @param {*} d The default value.\n\t     * @param {Array} p The path to use.\n\t     * @param {Object} obj The object to retrieve the nested property from.\n\t     * @return {*} The data at `path` of the supplied object or the default value.\n\t     * @example\n\t     *\n\t     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n\t     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n\t     */\n\t    var pathOr = _curry3(function pathOr(d, p, obj) {\n\t        return defaultTo(d, path(p, obj));\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified object property at given path satisfies the\n\t     * given predicate; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n\t     * @param {Function} pred\n\t     * @param {Array} propPath\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.propSatisfies, R.path\n\t     * @example\n\t     *\n\t     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n\t     */\n\t    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n\t        return propPath.length > 0 && pred(path(propPath, obj));\n\t    });\n\t\n\t    /**\n\t     * Returns a partial copy of an object containing only the keys specified. If\n\t     * the key does not exist, the property is ignored.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [k] -> {k: v} -> {k: v}\n\t     * @param {Array} names an array of String property names to copy onto a new object\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with only properties from `names` on it.\n\t     * @see R.omit, R.props\n\t     * @example\n\t     *\n\t     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n\t     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n\t     */\n\t    var pick = _curry2(function pick(names, obj) {\n\t        var result = {};\n\t        var idx = 0;\n\t        while (idx < names.length) {\n\t            if (names[idx] in obj) {\n\t                result[names[idx]] = obj[names[idx]];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Similar to `pick` except that this one includes a `key: undefined` pair for\n\t     * properties that don't exist.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [k] -> {k: v} -> {k: v}\n\t     * @param {Array} names an array of String property names to copy onto a new object\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with only properties from `names` on it.\n\t     * @see R.pick\n\t     * @example\n\t     *\n\t     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n\t     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n\t     */\n\t    var pickAll = _curry2(function pickAll(names, obj) {\n\t        var result = {};\n\t        var idx = 0;\n\t        var len = names.length;\n\t        while (idx < len) {\n\t            var name = names[idx];\n\t            result[name] = obj[name];\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a partial copy of an object containing only the keys that satisfy\n\t     * the supplied predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n\t     * @param {Function} pred A predicate to determine whether or not a key\n\t     *        should be included on the output object.\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with only properties that satisfy `pred`\n\t     *         on it.\n\t     * @see R.pick, R.filter\n\t     * @example\n\t     *\n\t     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n\t     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n\t     */\n\t    var pickBy = _curry2(function pickBy(test, obj) {\n\t        var result = {};\n\t        for (var prop in obj) {\n\t            if (test(obj[prop], prop, obj)) {\n\t                result[prop] = obj[prop];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list with the given element at the front, followed by the\n\t     * contents of the list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> [a]\n\t     * @param {*} el The item to add to the head of the output list.\n\t     * @param {Array} list The array to add to the tail of the output list.\n\t     * @return {Array} A new array.\n\t     * @see R.append\n\t     * @example\n\t     *\n\t     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n\t     */\n\t    var prepend = _curry2(function prepend(el, list) {\n\t        return _concat([el], list);\n\t    });\n\t\n\t    /**\n\t     * Returns a function that when supplied an object returns the indicated\n\t     * property of that object, if it exists.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig s -> {s: a} -> a | Undefined\n\t     * @param {String} p The property name\n\t     * @param {Object} obj The object to query\n\t     * @return {*} The value at `obj.p`.\n\t     * @example\n\t     *\n\t     *      R.prop('x', {x: 100}); //=> 100\n\t     *      R.prop('x', {}); //=> undefined\n\t     */\n\t    var prop = _curry2(function prop(p, obj) {\n\t        return obj[p];\n\t    });\n\t\n\t    /**\n\t     * If the given, non-null object has an own property with the specified name,\n\t     * returns the value of that property. Otherwise returns the provided default\n\t     * value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Object\n\t     * @sig a -> String -> Object -> a\n\t     * @param {*} val The default value.\n\t     * @param {String} p The name of the property to return.\n\t     * @param {Object} obj The object to query.\n\t     * @return {*} The value of given property of the supplied object or the default value.\n\t     * @example\n\t     *\n\t     *      var alice = {\n\t     *        name: 'ALICE',\n\t     *        age: 101\n\t     *      };\n\t     *      var favorite = R.prop('favoriteLibrary');\n\t     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n\t     *\n\t     *      favorite(alice);  //=> undefined\n\t     *      favoriteWithDefault(alice);  //=> 'Ramda'\n\t     */\n\t    var propOr = _curry3(function propOr(val, p, obj) {\n\t        return obj != null && _has(p, obj) ? obj[p] : val;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified object property satisfies the given\n\t     * predicate; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n\t     * @param {Function} pred\n\t     * @param {String} name\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.propEq, R.propIs\n\t     * @example\n\t     *\n\t     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n\t     */\n\t    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n\t        return pred(obj[name]);\n\t    });\n\t\n\t    /**\n\t     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n\t     * order.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [k] -> {k: v} -> [v]\n\t     * @param {Array} ps The property names to fetch\n\t     * @param {Object} obj The object to query\n\t     * @return {Array} The corresponding values or partially applied function.\n\t     * @example\n\t     *\n\t     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n\t     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n\t     *\n\t     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n\t     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n\t     */\n\t    var props = _curry2(function props(ps, obj) {\n\t        var len = ps.length;\n\t        var out = [];\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            out[idx] = obj[ps[idx]];\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> Number -> [Number]\n\t     * @param {Number} from The first number in the list.\n\t     * @param {Number} to One more than the last number in the list.\n\t     * @return {Array} The list of numbers in tthe set `[a, b)`.\n\t     * @example\n\t     *\n\t     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n\t     *      R.range(50, 53);  //=> [50, 51, 52]\n\t     */\n\t    var range = _curry2(function range(from, to) {\n\t        if (!(_isNumber(from) && _isNumber(to))) {\n\t            throw new TypeError('Both arguments to range must be numbers');\n\t        }\n\t        var result = [];\n\t        var n = from;\n\t        while (n < to) {\n\t            result.push(n);\n\t            n += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a single item by iterating through the list, successively calling\n\t     * the iterator function and passing it an accumulator value and the current\n\t     * value from the array, and then passing the result to the next call.\n\t     *\n\t     * Similar to `reduce`, except moves through the input list from the right to\n\t     * the left.\n\t     *\n\t     * The iterator function receives two values: *(acc, value)*\n\t     *\n\t     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n\t     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n\t     * on this behavior, see:\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a,b -> a) -> a -> [b] -> a\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n\t     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n\t     *\n\t     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n\t     */\n\t    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0) {\n\t            acc = fn(acc, list[idx]);\n\t            idx -= 1;\n\t        }\n\t        return acc;\n\t    });\n\t\n\t    /**\n\t     * Returns a value wrapped to indicate that it is the final value of the reduce\n\t     * and transduce functions. The returned value should be considered a black\n\t     * box: the internal structure is not guaranteed to be stable.\n\t     *\n\t     * Note: this optimization is unavailable to functions not explicitly listed\n\t     * above. For instance, it is not currently supported by reduceRight.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category List\n\t     * @sig a -> *\n\t     * @param {*} x The final value of the reduce.\n\t     * @return {*} The wrapped value.\n\t     * @see R.reduce, R.transduce\n\t     * @example\n\t     *\n\t     *      R.reduce(\n\t     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n\t     *        0,\n\t     *        [1, 2, 3, 4, 5]) // 10\n\t     */\n\t    var reduced = _curry1(_reduced);\n\t\n\t    /**\n\t     * Removes the sub-list of `list` starting at index `start` and containing\n\t     * `count` elements. _Note that this is not destructive_: it returns a copy of\n\t     * the list with the changes.\n\t     * <small>No lists have been harmed in the application of this function.</small>\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.2\n\t     * @category List\n\t     * @sig Number -> Number -> [a] -> [a]\n\t     * @param {Number} start The position to start removing elements\n\t     * @param {Number} count The number of elements to remove\n\t     * @param {Array} list The list to remove from\n\t     * @return {Array} A new Array with `count` elements from `start` removed.\n\t     * @example\n\t     *\n\t     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n\t     */\n\t    var remove = _curry3(function remove(start, count, list) {\n\t        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n\t    });\n\t\n\t    /**\n\t     * Replace a substring or regex match in a string with a replacement.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category String\n\t     * @sig RegExp|String -> String -> String -> String\n\t     * @param {RegExp|String} pattern A regular expression or a substring to match.\n\t     * @param {String} replacement The string to replace the matches with.\n\t     * @param {String} str The String to do the search and replacement in.\n\t     * @return {String} The result.\n\t     * @example\n\t     *\n\t     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n\t     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n\t     *\n\t     *      // Use the \"g\" (global) flag to replace all occurrences:\n\t     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n\t     */\n\t    var replace = _curry3(function replace(regex, replacement, str) {\n\t        return str.replace(regex, replacement);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list or string with the elements or characters in reverse\n\t     * order.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @sig String -> String\n\t     * @param {Array|String} list\n\t     * @return {Array|String}\n\t     * @example\n\t     *\n\t     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n\t     *      R.reverse([1, 2]);     //=> [2, 1]\n\t     *      R.reverse([1]);        //=> [1]\n\t     *      R.reverse([]);         //=> []\n\t     *\n\t     *      R.reverse('abc');      //=> 'cba'\n\t     *      R.reverse('ab');       //=> 'ba'\n\t     *      R.reverse('a');        //=> 'a'\n\t     *      R.reverse('');         //=> ''\n\t     */\n\t    var reverse = _curry1(function reverse(list) {\n\t        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n\t    });\n\t\n\t    /**\n\t     * Scan is similar to reduce, but returns a list of successively reduced values\n\t     * from the left\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (a,b -> a) -> a -> [b] -> [a]\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {Array} A list of all intermediately reduced values.\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3, 4];\n\t     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n\t     */\n\t    var scan = _curry3(function scan(fn, acc, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [acc];\n\t        while (idx < len) {\n\t            acc = fn(acc, list[idx]);\n\t            result[idx + 1] = acc;\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the result of \"setting\" the portion of the given data structure\n\t     * focused by the given lens to the given value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Lens s a -> a -> s -> s\n\t     * @param {Lens} lens\n\t     * @param {*} v\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @see R.prop, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var xLens = R.lensProp('x');\n\t     *\n\t     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n\t     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n\t     */\n\t    var set = _curry3(function set(lens, v, x) {\n\t        return over(lens, always(v), x);\n\t    });\n\t\n\t    /**\n\t     * Returns the elements of the given list or string (or object with a `slice`\n\t     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n\t     *\n\t     * Dispatches to the `slice` method of the third argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.4\n\t     * @category List\n\t     * @sig Number -> Number -> [a] -> [a]\n\t     * @sig Number -> Number -> String -> String\n\t     * @param {Number} fromIndex The start index (inclusive).\n\t     * @param {Number} toIndex The end index (exclusive).\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @example\n\t     *\n\t     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n\t     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n\t     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n\t     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n\t     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n\t     */\n\t    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n\t        return Array.prototype.slice.call(list, fromIndex, toIndex);\n\t    }));\n\t\n\t    /**\n\t     * Returns a copy of the list, sorted according to the comparator function,\n\t     * which should accept two values at a time and return a negative number if the\n\t     * first value is smaller, a positive number if it's larger, and zero if they\n\t     * are equal. Please note that this is a **copy** of the list. It does not\n\t     * modify the original.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a,a -> Number) -> [a] -> [a]\n\t     * @param {Function} comparator A sorting function :: a -> b -> Int\n\t     * @param {Array} list The list to sort\n\t     * @return {Array} a new array with its elements sorted by the comparator function.\n\t     * @example\n\t     *\n\t     *      var diff = function(a, b) { return a - b; };\n\t     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n\t     */\n\t    var sort = _curry2(function sort(comparator, list) {\n\t        return _slice(list).sort(comparator);\n\t    });\n\t\n\t    /**\n\t     * Sorts the list according to the supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord b => (a -> b) -> [a] -> [a]\n\t     * @param {Function} fn\n\t     * @param {Array} list The list to sort.\n\t     * @return {Array} A new list sorted by the keys generated by `fn`.\n\t     * @example\n\t     *\n\t     *      var sortByFirstItem = R.sortBy(R.prop(0));\n\t     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n\t     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n\t     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n\t     *      var alice = {\n\t     *        name: 'ALICE',\n\t     *        age: 101\n\t     *      };\n\t     *      var bob = {\n\t     *        name: 'Bob',\n\t     *        age: -10\n\t     *      };\n\t     *      var clara = {\n\t     *        name: 'clara',\n\t     *        age: 314.159\n\t     *      };\n\t     *      var people = [clara, bob, alice];\n\t     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n\t     */\n\t    var sortBy = _curry2(function sortBy(fn, list) {\n\t        return _slice(list).sort(function (a, b) {\n\t            var aa = fn(a);\n\t            var bb = fn(b);\n\t            return aa < bb ? -1 : aa > bb ? 1 : 0;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Splits a given list or string at a given index.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [[a], [a]]\n\t     * @sig Number -> String -> [String, String]\n\t     * @param {Number} index The index where the array/string is split.\n\t     * @param {Array|String} array The array/string to be split.\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n\t     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n\t     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n\t     */\n\t    var splitAt = _curry2(function splitAt(index, array) {\n\t        return [\n\t            slice(0, index, array),\n\t            slice(index, length(array), array)\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Splits a collection into slices of the specified length.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [[a]]\n\t     * @sig Number -> String -> [String]\n\t     * @param {Number} n\n\t     * @param {Array} list\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n\t     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n\t     */\n\t    var splitEvery = _curry2(function splitEvery(n, list) {\n\t        if (n <= 0) {\n\t            throw new Error('First argument to splitEvery must be a positive integer');\n\t        }\n\t        var result = [];\n\t        var idx = 0;\n\t        while (idx < list.length) {\n\t            result.push(slice(idx, idx += n, list));\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Takes a list and a predicate and returns a pair of lists with the following properties:\n\t     *\n\t     *  - the result of concatenating the two output lists is equivalent to the input list;\n\t     *  - none of the elements of the first output list satisfies the predicate; and\n\t     *  - if the second output list is non-empty, its first element satisfies the predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n\t     * @param {Function} pred The predicate that determines where the array is split.\n\t     * @param {Array} list The array to be split.\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n\t     */\n\t    var splitWhen = _curry2(function splitWhen(pred, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var prefix = [];\n\t        while (idx < len && !pred(list[idx])) {\n\t            prefix.push(list[idx]);\n\t            idx += 1;\n\t        }\n\t        return [\n\t            prefix,\n\t            _slice(list, idx)\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Subtracts two numbers. Equivalent to `a - b` but curried.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The first value.\n\t     * @param {Number} b The second value.\n\t     * @return {Number} The result of `a - b`.\n\t     * @see R.add\n\t     * @example\n\t     *\n\t     *      R.subtract(10, 8); //=> 2\n\t     *\n\t     *      var minus5 = R.subtract(R.__, 5);\n\t     *      minus5(17); //=> 12\n\t     *\n\t     *      var complementaryAngle = R.subtract(90);\n\t     *      complementaryAngle(30); //=> 60\n\t     *      complementaryAngle(72); //=> 18\n\t     */\n\t    var subtract = _curry2(function subtract(a, b) {\n\t        return a - b;\n\t    });\n\t\n\t    /**\n\t     * Returns all but the first element of the given list or string (or object\n\t     * with a `tail` method).\n\t     *\n\t     * Dispatches to the `slice` method of the first argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @sig String -> String\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.head, R.init, R.last\n\t     * @example\n\t     *\n\t     *      R.tail([1, 2, 3]);  //=> [2, 3]\n\t     *      R.tail([1, 2]);     //=> [2]\n\t     *      R.tail([1]);        //=> []\n\t     *      R.tail([]);         //=> []\n\t     *\n\t     *      R.tail('abc');  //=> 'bc'\n\t     *      R.tail('ab');   //=> 'b'\n\t     *      R.tail('a');    //=> ''\n\t     *      R.tail('');     //=> ''\n\t     */\n\t    var tail = _checkForMethod('tail', slice(1, Infinity));\n\t\n\t    /**\n\t     * Returns the first `n` elements of the given list, string, or\n\t     * transducer/transformer (or object with a `take` method).\n\t     *\n\t     * Dispatches to the `take` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.drop\n\t     * @example\n\t     *\n\t     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n\t     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n\t     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.take(3, 'ramda');               //=> 'ram'\n\t     *\n\t     *      var personnel = [\n\t     *        'Dave Brubeck',\n\t     *        'Paul Desmond',\n\t     *        'Eugene Wright',\n\t     *        'Joe Morello',\n\t     *        'Gerry Mulligan',\n\t     *        'Bob Bates',\n\t     *        'Joe Dodge',\n\t     *        'Ron Crotty'\n\t     *      ];\n\t     *\n\t     *      var takeFive = R.take(5);\n\t     *      takeFive(personnel);\n\t     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n\t     */\n\t    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n\t        return slice(0, n < 0 ? Infinity : n, xs);\n\t    }));\n\t\n\t    /**\n\t     * Returns a new list containing the last `n` elements of a given list, passing\n\t     * each value to the supplied predicate function, and terminating when the\n\t     * predicate function returns `false`. Excludes the element that caused the\n\t     * predicate function to fail. The predicate function is passed one argument:\n\t     * *(value)*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.dropLastWhile, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isNotOne = x => x !== 1;\n\t     *\n\t     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n\t     */\n\t    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0 && fn(list[idx])) {\n\t            idx -= 1;\n\t        }\n\t        return _slice(list, idx + 1, Infinity);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing the first `n` elements of a given list,\n\t     * passing each value to the supplied predicate function, and terminating when\n\t     * the predicate function returns `false`. Excludes the element that caused the\n\t     * predicate function to fail. The predicate function is passed one argument:\n\t     * *(value)*.\n\t     *\n\t     * Dispatches to the `takeWhile` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.dropWhile, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isNotFour = x => x !== 4;\n\t     *\n\t     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n\t     */\n\t    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len && fn(list[idx])) {\n\t            idx += 1;\n\t        }\n\t        return _slice(list, 0, idx);\n\t    }));\n\t\n\t    /**\n\t     * Runs the given function with the supplied object, then returns the object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a -> *) -> a -> a\n\t     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n\t     * @param {*} x\n\t     * @return {*} `x`.\n\t     * @example\n\t     *\n\t     *      var sayX = x => console.log('x is ' + x);\n\t     *      R.tap(sayX, 100); //=> 100\n\t     *      //-> 'x is 100'\n\t     */\n\t    var tap = _curry2(function tap(fn, x) {\n\t        fn(x);\n\t        return x;\n\t    });\n\t\n\t    /**\n\t     * Calls an input function `n` times, returning an array containing the results\n\t     * of those function calls.\n\t     *\n\t     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n\t     * and is gradually incremented to `n - 1`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.3\n\t     * @category List\n\t     * @sig (Number -> a) -> Number -> [a]\n\t     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n\t     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n\t     * @return {Array} An array containing the return values of all calls to `fn`.\n\t     * @example\n\t     *\n\t     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n\t     */\n\t    var times = _curry2(function times(fn, n) {\n\t        var len = Number(n);\n\t        var idx = 0;\n\t        var list;\n\t        if (len < 0 || isNaN(len)) {\n\t            throw new RangeError('n must be a non-negative number');\n\t        }\n\t        list = new Array(len);\n\t        while (idx < len) {\n\t            list[idx] = fn(idx);\n\t            idx += 1;\n\t        }\n\t        return list;\n\t    });\n\t\n\t    /**\n\t     * Converts an object into an array of key, value arrays. Only the object's\n\t     * own properties are used.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.0\n\t     * @category Object\n\t     * @sig {String: *} -> [[String,*]]\n\t     * @param {Object} obj The object to extract from\n\t     * @return {Array} An array of key, value arrays from the object's own properties.\n\t     * @see R.fromPairs\n\t     * @example\n\t     *\n\t     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n\t     */\n\t    var toPairs = _curry1(function toPairs(obj) {\n\t        var pairs = [];\n\t        for (var prop in obj) {\n\t            if (_has(prop, obj)) {\n\t                pairs[pairs.length] = [\n\t                    prop,\n\t                    obj[prop]\n\t                ];\n\t            }\n\t        }\n\t        return pairs;\n\t    });\n\t\n\t    /**\n\t     * Converts an object into an array of key, value arrays. The object's own\n\t     * properties and prototype properties are used. Note that the order of the\n\t     * output array is not guaranteed to be consistent across different JS\n\t     * platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.0\n\t     * @category Object\n\t     * @sig {String: *} -> [[String,*]]\n\t     * @param {Object} obj The object to extract from\n\t     * @return {Array} An array of key, value arrays from the object's own\n\t     *         and prototype properties.\n\t     * @example\n\t     *\n\t     *      var F = function() { this.x = 'X'; };\n\t     *      F.prototype.y = 'Y';\n\t     *      var f = new F();\n\t     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n\t     */\n\t    var toPairsIn = _curry1(function toPairsIn(obj) {\n\t        var pairs = [];\n\t        for (var prop in obj) {\n\t            pairs[pairs.length] = [\n\t                prop,\n\t                obj[prop]\n\t            ];\n\t        }\n\t        return pairs;\n\t    });\n\t\n\t    /**\n\t     * Transposes the rows and columns of a 2D list.\n\t     * When passed a list of `n` lists of length `x`,\n\t     * returns a list of `x` lists of length `n`.\n\t     *\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig [[a]] -> [[a]]\n\t     * @param {Array} list A 2D list\n\t     * @return {Array} A 2D list\n\t     * @example\n\t     *\n\t     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n\t     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n\t     *\n\t     * If some of the rows are shorter than the following rows, their elements are skipped:\n\t     *\n\t     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n\t     */\n\t    var transpose = _curry1(function transpose(outerlist) {\n\t        var i = 0;\n\t        var result = [];\n\t        while (i < outerlist.length) {\n\t            var innerlist = outerlist[i];\n\t            var j = 0;\n\t            while (j < innerlist.length) {\n\t                if (typeof result[j] === 'undefined') {\n\t                    result[j] = [];\n\t                }\n\t                result[j].push(innerlist[j]);\n\t                j += 1;\n\t            }\n\t            i += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Removes (strips) whitespace from both ends of the string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category String\n\t     * @sig String -> String\n\t     * @param {String} str The string to trim.\n\t     * @return {String} Trimmed version of `str`.\n\t     * @example\n\t     *\n\t     *      R.trim('   xyz  '); //=> 'xyz'\n\t     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n\t     */\n\t    var trim = function () {\n\t        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n\t        var zeroWidth = '\\u200B';\n\t        var hasProtoTrim = typeof String.prototype.trim === 'function';\n\t        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n\t            return _curry1(function trim(str) {\n\t                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n\t                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n\t                return str.replace(beginRx, '').replace(endRx, '');\n\t            });\n\t        } else {\n\t            return _curry1(function trim(str) {\n\t                return str.trim();\n\t            });\n\t        }\n\t    }();\n\t\n\t    /**\n\t     * Gives a single-word string description of the (native) type of a value,\n\t     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n\t     * attempt to distinguish user Object types any further, reporting them all as\n\t     * 'Object'.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Type\n\t     * @sig (* -> {*}) -> String\n\t     * @param {*} val The value to test\n\t     * @return {String}\n\t     * @example\n\t     *\n\t     *      R.type({}); //=> \"Object\"\n\t     *      R.type(1); //=> \"Number\"\n\t     *      R.type(false); //=> \"Boolean\"\n\t     *      R.type('s'); //=> \"String\"\n\t     *      R.type(null); //=> \"Null\"\n\t     *      R.type([]); //=> \"Array\"\n\t     *      R.type(/[A-z]/); //=> \"RegExp\"\n\t     */\n\t    var type = _curry1(function type(val) {\n\t        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n\t    });\n\t\n\t    /**\n\t     * Takes a function `fn`, which takes a single array argument, and returns a\n\t     * function which:\n\t     *\n\t     *   - takes any number of positional arguments;\n\t     *   - passes these arguments to `fn` as an array; and\n\t     *   - returns the result.\n\t     *\n\t     * In other words, R.unapply derives a variadic function from a function which\n\t     * takes an array. R.unapply is the inverse of R.apply.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Function\n\t     * @sig ([*...] -> a) -> (*... -> a)\n\t     * @param {Function} fn\n\t     * @return {Function}\n\t     * @see R.apply\n\t     * @example\n\t     *\n\t     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n\t     */\n\t    var unapply = _curry1(function unapply(fn) {\n\t        return function () {\n\t            return fn(_slice(arguments));\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Wraps a function of any arity (including nullary) in a function that accepts\n\t     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n\t     * supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Function\n\t     * @sig (* -> b) -> (a -> b)\n\t     * @param {Function} fn The function to wrap.\n\t     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t     *         arity 1.\n\t     * @example\n\t     *\n\t     *      var takesTwoArgs = function(a, b) {\n\t     *        return [a, b];\n\t     *      };\n\t     *      takesTwoArgs.length; //=> 2\n\t     *      takesTwoArgs(1, 2); //=> [1, 2]\n\t     *\n\t     *      var takesOneArg = R.unary(takesTwoArgs);\n\t     *      takesOneArg.length; //=> 1\n\t     *      // Only 1 argument is passed to the wrapped function\n\t     *      takesOneArg(1, 2); //=> [1, undefined]\n\t     */\n\t    var unary = _curry1(function unary(fn) {\n\t        return nAry(1, fn);\n\t    });\n\t\n\t    /**\n\t     * Returns a function of arity `n` from a (manually) curried function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Function\n\t     * @sig Number -> (a -> b) -> (a -> c)\n\t     * @param {Number} length The arity for the returned function.\n\t     * @param {Function} fn The function to uncurry.\n\t     * @return {Function} A new function.\n\t     * @see R.curry\n\t     * @example\n\t     *\n\t     *      var addFour = a => b => c => d => a + b + c + d;\n\t     *\n\t     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n\t     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n\t     */\n\t    var uncurryN = _curry2(function uncurryN(depth, fn) {\n\t        return curryN(depth, function () {\n\t            var currentDepth = 1;\n\t            var value = fn;\n\t            var idx = 0;\n\t            var endIdx;\n\t            while (currentDepth <= depth && typeof value === 'function') {\n\t                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n\t                value = value.apply(this, _slice(arguments, idx, endIdx));\n\t                currentDepth += 1;\n\t                idx = endIdx;\n\t            }\n\t            return value;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Builds a list from a seed value. Accepts an iterator function, which returns\n\t     * either false to stop iteration or an array of length 2 containing the value\n\t     * to add to the resulting list and the seed to be used in the next call to the\n\t     * iterator function.\n\t     *\n\t     * The iterator function receives one argument: *(seed)*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (a -> [b]) -> * -> [b]\n\t     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n\t     *        either false to quit iteration or an array of length two to proceed. The element\n\t     *        at index 0 of this array will be added to the resulting array, and the element\n\t     *        at index 1 will be passed to the next call to `fn`.\n\t     * @param {*} seed The seed value.\n\t     * @return {Array} The final list.\n\t     * @example\n\t     *\n\t     *      var f = n => n > 50 ? false : [-n, n + 10];\n\t     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n\t     */\n\t    var unfold = _curry2(function unfold(fn, seed) {\n\t        var pair = fn(seed);\n\t        var result = [];\n\t        while (pair && pair.length) {\n\t            result[result.length] = pair[0];\n\t            pair = fn(pair[1]);\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing only one copy of each element in the original\n\t     * list, based upon the value returned by applying the supplied predicate to\n\t     * two list elements. Prefers the first item if two items compare equal based\n\t     * on the predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category List\n\t     * @sig (a, a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of unique items.\n\t     * @example\n\t     *\n\t     *      var strEq = R.eqBy(String);\n\t     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n\t     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n\t     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n\t     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n\t     */\n\t    var uniqWith = _curry2(function uniqWith(pred, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [];\n\t        var item;\n\t        while (idx < len) {\n\t            item = list[idx];\n\t            if (!_containsWith(pred, item, result)) {\n\t                result[result.length] = item;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Tests the final argument by passing it to the given predicate function. If\n\t     * the predicate is not satisfied, the function will return the result of\n\t     * calling the `whenFalseFn` function with the same argument. If the predicate\n\t     * is satisfied, the argument is returned as is.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n\t     * @param {Function} pred        A predicate function\n\t     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n\t     *                               to a falsy value.\n\t     * @param {*}        x           An object to test with the `pred` function and\n\t     *                               pass to `whenFalseFn` if necessary.\n\t     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n\t     * @see R.ifElse, R.when\n\t     * @example\n\t     *\n\t     *      // coerceArray :: (a|[a]) -> [a]\n\t     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n\t     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n\t     *      coerceArray(1);         //=> [1]\n\t     */\n\t    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n\t        return pred(x) ? x : whenFalseFn(x);\n\t    });\n\t\n\t    /**\n\t     * Returns a new copy of the array with the element at the provided index\n\t     * replaced with the given value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig Number -> a -> [a] -> [a]\n\t     * @param {Number} idx The index to update.\n\t     * @param {*} x The value to exist at the given index of the returned array.\n\t     * @param {Array|Arguments} list The source array-like object to be updated.\n\t     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n\t     * @see R.adjust\n\t     * @example\n\t     *\n\t     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n\t     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n\t     */\n\t    var update = _curry3(function update(idx, x, list) {\n\t        return adjust(always(x), idx, list);\n\t    });\n\t\n\t    /**\n\t     * Accepts a function `fn` and a list of transformer functions and returns a\n\t     * new curried function. When the new function is invoked, it calls the\n\t     * function `fn` with parameters consisting of the result of calling each\n\t     * supplied handler on successive arguments to the new function.\n\t     *\n\t     * If more arguments are passed to the returned function than transformer\n\t     * functions, those arguments are passed directly to `fn` as additional\n\t     * parameters. If you expect additional arguments that don't need to be\n\t     * transformed, although you can ignore them, it's best to pass an identity\n\t     * function so that the new function reports the correct arity.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n\t     * @param {Function} fn The function to wrap.\n\t     * @param {Array} transformers A list of transformer functions\n\t     * @return {Function} The wrapped function.\n\t     * @example\n\t     *\n\t     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n\t     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n\t     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n\t     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n\t     */\n\t    var useWith = _curry2(function useWith(fn, transformers) {\n\t        return curryN(transformers.length, function () {\n\t            var args = [];\n\t            var idx = 0;\n\t            while (idx < transformers.length) {\n\t                args.push(transformers[idx].call(this, arguments[idx]));\n\t                idx += 1;\n\t            }\n\t            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns a list of all the enumerable own properties of the supplied object.\n\t     * Note that the order of the output array is not guaranteed across different\n\t     * JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {k: v} -> [v]\n\t     * @param {Object} obj The object to extract values from\n\t     * @return {Array} An array of the values of the object's own properties.\n\t     * @example\n\t     *\n\t     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n\t     */\n\t    var values = _curry1(function values(obj) {\n\t        var props = keys(obj);\n\t        var len = props.length;\n\t        var vals = [];\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            vals[idx] = obj[props[idx]];\n\t            idx += 1;\n\t        }\n\t        return vals;\n\t    });\n\t\n\t    /**\n\t     * Returns a list of all the properties, including prototype properties, of the\n\t     * supplied object.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Object\n\t     * @sig {k: v} -> [v]\n\t     * @param {Object} obj The object to extract values from\n\t     * @return {Array} An array of the values of the object's own and prototype properties.\n\t     * @example\n\t     *\n\t     *      var F = function() { this.x = 'X'; };\n\t     *      F.prototype.y = 'Y';\n\t     *      var f = new F();\n\t     *      R.valuesIn(f); //=> ['X', 'Y']\n\t     */\n\t    var valuesIn = _curry1(function valuesIn(obj) {\n\t        var prop;\n\t        var vs = [];\n\t        for (prop in obj) {\n\t            vs[vs.length] = obj[prop];\n\t        }\n\t        return vs;\n\t    });\n\t\n\t    /**\n\t     * Returns a \"view\" of the given data structure, determined by the given lens.\n\t     * The lens's focus determines which portion of the data structure is visible.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Lens s a -> s -> a\n\t     * @param {Lens} lens\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @see R.prop, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var xLens = R.lensProp('x');\n\t     *\n\t     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n\t     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n\t     */\n\t    var view = function () {\n\t        var Const = function (x) {\n\t            return {\n\t                value: x,\n\t                map: function () {\n\t                    return this;\n\t                }\n\t            };\n\t        };\n\t        return _curry2(function view(lens, x) {\n\t            return lens(Const)(x).value;\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Tests the final argument by passing it to the given predicate function. If\n\t     * the predicate is satisfied, the function will return the result of calling\n\t     * the `whenTrueFn` function with the same argument. If the predicate is not\n\t     * satisfied, the argument is returned as is.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n\t     * @param {Function} pred       A predicate function\n\t     * @param {Function} whenTrueFn A function to invoke when the `condition`\n\t     *                              evaluates to a truthy value.\n\t     * @param {*}        x          An object to test with the `pred` function and\n\t     *                              pass to `whenTrueFn` if necessary.\n\t     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n\t     * @see R.ifElse, R.unless\n\t     * @example\n\t     *\n\t     *      // truncate :: String -> String\n\t     *      var truncate = R.when(\n\t     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n\t     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n\t     *      );\n\t     *      truncate('12345');         //=> '12345'\n\t     *      truncate('0123456789ABC'); //=> '0123456789…'\n\t     */\n\t    var when = _curry3(function when(pred, whenTrueFn, x) {\n\t        return pred(x) ? whenTrueFn(x) : x;\n\t    });\n\t\n\t    /**\n\t     * Takes a spec object and a test object; returns true if the test satisfies\n\t     * the spec. Each of the spec's own properties must be a predicate function.\n\t     * Each predicate is applied to the value of the corresponding property of the\n\t     * test object. `where` returns true if all the predicates return true, false\n\t     * otherwise.\n\t     *\n\t     * `where` is well suited to declaratively expressing constraints for other\n\t     * functions such as `filter` and `find`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category Object\n\t     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n\t     * @param {Object} spec\n\t     * @param {Object} testObj\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      // pred :: Object -> Boolean\n\t     *      var pred = R.where({\n\t     *        a: R.equals('foo'),\n\t     *        b: R.complement(R.equals('bar')),\n\t     *        x: R.gt(_, 10),\n\t     *        y: R.lt(_, 20)\n\t     *      });\n\t     *\n\t     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n\t     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n\t     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n\t     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n\t     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n\t     */\n\t    var where = _curry2(function where(spec, testObj) {\n\t        for (var prop in spec) {\n\t            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    });\n\t\n\t    /**\n\t     * Wrap a function inside another to allow you to make adjustments to the\n\t     * parameters, or do other processing either before the internal function is\n\t     * called or with its results.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n\t     * @param {Function} fn The function to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @return {Function} The wrapped function.\n\t     * @example\n\t     *\n\t     *      var greet = name => 'Hello ' + name;\n\t     *\n\t     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n\t     *\n\t     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n\t     *\n\t     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n\t     *        return gr(name.substring(0, 3));\n\t     *      });\n\t     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n\t     */\n\t    var wrap = _curry2(function wrap(fn, wrapper) {\n\t        return curryN(fn.length, function () {\n\t            return wrapper.apply(this, _concat([fn], arguments));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Creates a new list out of the two supplied by creating each possible pair\n\t     * from the lists.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [b] -> [[a,b]]\n\t     * @param {Array} as The first list.\n\t     * @param {Array} bs The second list.\n\t     * @return {Array} The list made by combining each possible pair from\n\t     *         `as` and `bs` into pairs (`[a, b]`).\n\t     * @example\n\t     *\n\t     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n\t     */\n\t    // = xprodWith(prepend); (takes about 3 times as long...)\n\t    var xprod = _curry2(function xprod(a, b) {\n\t        // = xprodWith(prepend); (takes about 3 times as long...)\n\t        var idx = 0;\n\t        var ilen = a.length;\n\t        var j;\n\t        var jlen = b.length;\n\t        var result = [];\n\t        while (idx < ilen) {\n\t            j = 0;\n\t            while (j < jlen) {\n\t                result[result.length] = [\n\t                    a[idx],\n\t                    b[j]\n\t                ];\n\t                j += 1;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Creates a new list out of the two supplied by pairing up equally-positioned\n\t     * items from both lists. The returned list is truncated to the length of the\n\t     * shorter of the two input lists.\n\t     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [b] -> [[a,b]]\n\t     * @param {Array} list1 The first array to consider.\n\t     * @param {Array} list2 The second array to consider.\n\t     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n\t     * @example\n\t     *\n\t     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n\t     */\n\t    var zip = _curry2(function zip(a, b) {\n\t        var rv = [];\n\t        var idx = 0;\n\t        var len = Math.min(a.length, b.length);\n\t        while (idx < len) {\n\t            rv[idx] = [\n\t                a[idx],\n\t                b[idx]\n\t            ];\n\t            idx += 1;\n\t        }\n\t        return rv;\n\t    });\n\t\n\t    /**\n\t     * Creates a new object out of a list of keys and a list of values.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig [String] -> [*] -> {String: *}\n\t     * @param {Array} keys The array that will be properties on the output object.\n\t     * @param {Array} values The list of values on the output object.\n\t     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n\t     * @example\n\t     *\n\t     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n\t     */\n\t    var zipObj = _curry2(function zipObj(keys, values) {\n\t        var idx = 0;\n\t        var len = keys.length;\n\t        var out = {};\n\t        while (idx < len) {\n\t            out[keys[idx]] = values[idx];\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Creates a new list out of the two supplied by applying the function to each\n\t     * equally-positioned pair in the lists. The returned list is truncated to the\n\t     * length of the shorter of the two input lists.\n\t     *\n\t     * @function\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n\t     * @param {Function} fn The function used to combine the two elements into one value.\n\t     * @param {Array} list1 The first array to consider.\n\t     * @param {Array} list2 The second array to consider.\n\t     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n\t     *         using `fn`.\n\t     * @example\n\t     *\n\t     *      var f = (x, y) => {\n\t     *        // ...\n\t     *      };\n\t     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n\t     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n\t     */\n\t    var zipWith = _curry3(function zipWith(fn, a, b) {\n\t        var rv = [];\n\t        var idx = 0;\n\t        var len = Math.min(a.length, b.length);\n\t        while (idx < len) {\n\t            rv[idx] = fn(a[idx], b[idx]);\n\t            idx += 1;\n\t        }\n\t        return rv;\n\t    });\n\t\n\t    /**\n\t     * A function that always returns `false`. Any passed in parameters are ignored.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig * -> Boolean\n\t     * @param {*}\n\t     * @return {Boolean}\n\t     * @see R.always, R.T\n\t     * @example\n\t     *\n\t     *      R.F(); //=> false\n\t     */\n\t    var F = always(false);\n\t\n\t    /**\n\t     * A function that always returns `true`. Any passed in parameters are ignored.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig * -> Boolean\n\t     * @param {*}\n\t     * @return {Boolean}\n\t     * @see R.always, R.F\n\t     * @example\n\t     *\n\t     *      R.T(); //=> true\n\t     */\n\t    var T = always(true);\n\t\n\t    /**\n\t     * Copies an object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to be copied\n\t     * @param {Array} refFrom Array containing the source references\n\t     * @param {Array} refTo Array containing the copied source references\n\t     * @return {*} The copied value.\n\t     */\n\t    var _clone = function _clone(value, refFrom, refTo) {\n\t        var copy = function copy(copiedValue) {\n\t            var len = refFrom.length;\n\t            var idx = 0;\n\t            while (idx < len) {\n\t                if (value === refFrom[idx]) {\n\t                    return refTo[idx];\n\t                }\n\t                idx += 1;\n\t            }\n\t            refFrom[idx + 1] = value;\n\t            refTo[idx + 1] = copiedValue;\n\t            for (var key in value) {\n\t                copiedValue[key] = _clone(value[key], refFrom, refTo);\n\t            }\n\t            return copiedValue;\n\t        };\n\t        switch (type(value)) {\n\t        case 'Object':\n\t            return copy({});\n\t        case 'Array':\n\t            return copy([]);\n\t        case 'Date':\n\t            return new Date(value.valueOf());\n\t        case 'RegExp':\n\t            return _cloneRegExp(value);\n\t        default:\n\t            return value;\n\t        }\n\t    };\n\t\n\t    var _createPartialApplicator = function _createPartialApplicator(concat) {\n\t        return _curry2(function (fn, args) {\n\t            return _arity(Math.max(0, fn.length - args.length), function () {\n\t                return fn.apply(this, concat(args, arguments));\n\t            });\n\t        });\n\t    };\n\t\n\t    var _dropLast = function dropLast(n, xs) {\n\t        return take(n < xs.length ? xs.length - n : 0, xs);\n\t    };\n\t\n\t    // Values of other types are only equal if identical.\n\t    var _equals = function _equals(a, b, stackA, stackB) {\n\t        if (identical(a, b)) {\n\t            return true;\n\t        }\n\t        if (type(a) !== type(b)) {\n\t            return false;\n\t        }\n\t        if (a == null || b == null) {\n\t            return false;\n\t        }\n\t        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n\t            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n\t        }\n\t        switch (type(a)) {\n\t        case 'Arguments':\n\t        case 'Array':\n\t        case 'Object':\n\t            break;\n\t        case 'Boolean':\n\t        case 'Number':\n\t        case 'String':\n\t            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Date':\n\t            if (!identical(a.valueOf(), b.valueOf())) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Error':\n\t            return a.name === b.name && a.message === b.message;\n\t        case 'RegExp':\n\t            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Map':\n\t        case 'Set':\n\t            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Int8Array':\n\t        case 'Uint8Array':\n\t        case 'Uint8ClampedArray':\n\t        case 'Int16Array':\n\t        case 'Uint16Array':\n\t        case 'Int32Array':\n\t        case 'Uint32Array':\n\t        case 'Float32Array':\n\t        case 'Float64Array':\n\t            break;\n\t        case 'ArrayBuffer':\n\t            break;\n\t        default:\n\t            // Values of other types are only equal if identical.\n\t            return false;\n\t        }\n\t        var keysA = keys(a);\n\t        if (keysA.length !== keys(b).length) {\n\t            return false;\n\t        }\n\t        var idx = stackA.length - 1;\n\t        while (idx >= 0) {\n\t            if (stackA[idx] === a) {\n\t                return stackB[idx] === b;\n\t            }\n\t            idx -= 1;\n\t        }\n\t        stackA.push(a);\n\t        stackB.push(b);\n\t        idx = keysA.length - 1;\n\t        while (idx >= 0) {\n\t            var key = keysA[idx];\n\t            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n\t                return false;\n\t            }\n\t            idx -= 1;\n\t        }\n\t        stackA.pop();\n\t        stackB.pop();\n\t        return true;\n\t    };\n\t\n\t    /**\n\t     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n\t     * function based on the flag passed in.\n\t     *\n\t     * @private\n\t     */\n\t    var _makeFlat = function _makeFlat(recursive) {\n\t        return function flatt(list) {\n\t            var value, jlen, j;\n\t            var result = [];\n\t            var idx = 0;\n\t            var ilen = list.length;\n\t            while (idx < ilen) {\n\t                if (isArrayLike(list[idx])) {\n\t                    value = recursive ? flatt(list[idx]) : list[idx];\n\t                    j = 0;\n\t                    jlen = value.length;\n\t                    while (j < jlen) {\n\t                        result[result.length] = value[j];\n\t                        j += 1;\n\t                    }\n\t                } else {\n\t                    result[result.length] = list[idx];\n\t                }\n\t                idx += 1;\n\t            }\n\t            return result;\n\t        };\n\t    };\n\t\n\t    var _reduce = function () {\n\t        function _arrayReduce(xf, acc, list) {\n\t            var idx = 0;\n\t            var len = list.length;\n\t            while (idx < len) {\n\t                acc = xf['@@transducer/step'](acc, list[idx]);\n\t                if (acc && acc['@@transducer/reduced']) {\n\t                    acc = acc['@@transducer/value'];\n\t                    break;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return xf['@@transducer/result'](acc);\n\t        }\n\t        function _iterableReduce(xf, acc, iter) {\n\t            var step = iter.next();\n\t            while (!step.done) {\n\t                acc = xf['@@transducer/step'](acc, step.value);\n\t                if (acc && acc['@@transducer/reduced']) {\n\t                    acc = acc['@@transducer/value'];\n\t                    break;\n\t                }\n\t                step = iter.next();\n\t            }\n\t            return xf['@@transducer/result'](acc);\n\t        }\n\t        function _methodReduce(xf, acc, obj) {\n\t            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n\t        }\n\t        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\t        return function _reduce(fn, acc, list) {\n\t            if (typeof fn === 'function') {\n\t                fn = _xwrap(fn);\n\t            }\n\t            if (isArrayLike(list)) {\n\t                return _arrayReduce(fn, acc, list);\n\t            }\n\t            if (typeof list.reduce === 'function') {\n\t                return _methodReduce(fn, acc, list);\n\t            }\n\t            if (list[symIterator] != null) {\n\t                return _iterableReduce(fn, acc, list[symIterator]());\n\t            }\n\t            if (typeof list.next === 'function') {\n\t                return _iterableReduce(fn, acc, list);\n\t            }\n\t            throw new TypeError('reduce: list must be array or iterable');\n\t        };\n\t    }();\n\t\n\t    var _xdropLastWhile = function () {\n\t        function XDropLastWhile(fn, xf) {\n\t            this.f = fn;\n\t            this.retained = [];\n\t            this.xf = xf;\n\t        }\n\t        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n\t            this.retained = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n\t        };\n\t        XDropLastWhile.prototype.flush = function (result, input) {\n\t            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n\t            this.retained = [];\n\t            return this.xf['@@transducer/step'](result, input);\n\t        };\n\t        XDropLastWhile.prototype.retain = function (result, input) {\n\t            this.retained.push(input);\n\t            return result;\n\t        };\n\t        return _curry2(function _xdropLastWhile(fn, xf) {\n\t            return new XDropLastWhile(fn, xf);\n\t        });\n\t    }();\n\t\n\t    var _xgroupBy = function () {\n\t        function XGroupBy(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.inputs = {};\n\t        }\n\t        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n\t        XGroupBy.prototype['@@transducer/result'] = function (result) {\n\t            var key;\n\t            for (key in this.inputs) {\n\t                if (_has(key, this.inputs)) {\n\t                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\t                    if (result['@@transducer/reduced']) {\n\t                        result = result['@@transducer/value'];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            this.inputs = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n\t            var key = this.f(input);\n\t            this.inputs[key] = this.inputs[key] || [\n\t                key,\n\t                []\n\t            ];\n\t            this.inputs[key][1] = append(input, this.inputs[key][1]);\n\t            return result;\n\t        };\n\t        return _curry2(function _xgroupBy(f, xf) {\n\t            return new XGroupBy(f, xf);\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Creates a new list iteration function from an existing one by adding two new\n\t     * parameters to its callback function: the current index, and the entire list.\n\t     *\n\t     * This would turn, for instance, Ramda's simple `map` function into one that\n\t     * more closely resembles `Array.prototype.map`. Note that this will only work\n\t     * for functions in which the iteration callback function is the first\n\t     * parameter, and where the list is the last parameter. (This latter might be\n\t     * unimportant if the list parameter is not used.)\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category Function\n\t     * @category List\n\t     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n\t     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n\t     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n\t     * @example\n\t     *\n\t     *      var mapIndexed = R.addIndex(R.map);\n\t     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n\t     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n\t     */\n\t    var addIndex = _curry1(function addIndex(fn) {\n\t        return curryN(fn.length, function () {\n\t            var idx = 0;\n\t            var origFn = arguments[0];\n\t            var list = arguments[arguments.length - 1];\n\t            var args = _slice(arguments);\n\t            args[0] = function () {\n\t                var result = origFn.apply(this, _concat(arguments, [\n\t                    idx,\n\t                    list\n\t                ]));\n\t                idx += 1;\n\t                return result;\n\t            };\n\t            return fn.apply(this, args);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Wraps a function of any arity (including nullary) in a function that accepts\n\t     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n\t     * supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Function\n\t     * @sig (* -> c) -> (a, b -> c)\n\t     * @param {Function} fn The function to wrap.\n\t     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t     *         arity 2.\n\t     * @example\n\t     *\n\t     *      var takesThreeArgs = function(a, b, c) {\n\t     *        return [a, b, c];\n\t     *      };\n\t     *      takesThreeArgs.length; //=> 3\n\t     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n\t     *\n\t     *      var takesTwoArgs = R.binary(takesThreeArgs);\n\t     *      takesTwoArgs.length; //=> 2\n\t     *      // Only 2 arguments are passed to the wrapped function\n\t     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n\t     */\n\t    var binary = _curry1(function binary(fn) {\n\t        return nAry(2, fn);\n\t    });\n\t\n\t    /**\n\t     * Creates a deep copy of the value which may contain (nested) `Array`s and\n\t     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n\t     * copied, but assigned by their reference.\n\t     *\n\t     * Dispatches to a `clone` method if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {*} -> {*}\n\t     * @param {*} value The object or array to clone\n\t     * @return {*} A new object or array.\n\t     * @example\n\t     *\n\t     *      var objects = [{}, {}, {}];\n\t     *      var objectsClone = R.clone(objects);\n\t     *      objects[0] === objectsClone[0]; //=> false\n\t     */\n\t    var clone = _curry1(function clone(value) {\n\t        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], []);\n\t    });\n\t\n\t    /**\n\t     * Returns a curried equivalent of the provided function. The curried function\n\t     * has two unusual capabilities. First, its arguments needn't be provided one\n\t     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1)(2)(3)`\n\t     *   - `g(1)(2, 3)`\n\t     *   - `g(1, 2)(3)`\n\t     *   - `g(1, 2, 3)`\n\t     *\n\t     * Secondly, the special placeholder value `R.__` may be used to specify\n\t     * \"gaps\", allowing partial application of any combination of arguments,\n\t     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1, 2, 3)`\n\t     *   - `g(_, 2, 3)(1)`\n\t     *   - `g(_, _, 3)(1)(2)`\n\t     *   - `g(_, _, 3)(1, 2)`\n\t     *   - `g(_, 2)(1)(3)`\n\t     *   - `g(_, 2)(1, 3)`\n\t     *   - `g(_, 2)(_, 3)(1)`\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (* -> a) -> (* -> a)\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} A new, curried function.\n\t     * @see R.curryN\n\t     * @example\n\t     *\n\t     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n\t     *\n\t     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n\t     *      var f = curriedAddFourNumbers(1, 2);\n\t     *      var g = f(3);\n\t     *      g(4); //=> 10\n\t     */\n\t    var curry = _curry1(function curry(fn) {\n\t        return curryN(fn.length, fn);\n\t    });\n\t\n\t    /**\n\t     * Returns all but the first `n` elements of the given list, string, or\n\t     * transducer/transformer (or object with a `drop` method).\n\t     *\n\t     * Dispatches to the `drop` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.take, R.transduce\n\t     * @example\n\t     *\n\t     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n\t     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n\t     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.drop(3, 'ramda');               //=> 'da'\n\t     */\n\t    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n\t        return slice(Math.max(0, n), Infinity, xs);\n\t    }));\n\t\n\t    /**\n\t     * Returns a list containing all but the last `n` elements of the given `list`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n The number of elements of `xs` to skip.\n\t     * @param {Array} xs The collection to consider.\n\t     * @return {Array}\n\t     * @see R.takeLast\n\t     * @example\n\t     *\n\t     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n\t     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n\t     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.dropLast(3, 'ramda');               //=> 'ra'\n\t     */\n\t    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\t\n\t    /**\n\t     * Returns a new list containing all but last the`n` elements of a given list,\n\t     * passing each value from the right to the supplied predicate function,\n\t     * skipping elements while the predicate function returns `true`. The predicate\n\t     * function is passed one argument: (value)*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.takeLastWhile, R.addIndex\n\t     * @example\n\t     *\n\t     *      var lteThree = x => x <= 3;\n\t     *\n\t     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n\t     */\n\t    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\t\n\t    /**\n\t     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n\t     * cyclical data structures.\n\t     *\n\t     * Dispatches symmetrically to the `equals` methods of both arguments, if\n\t     * present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category Relation\n\t     * @sig a -> b -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      R.equals(1, 1); //=> true\n\t     *      R.equals(1, '1'); //=> false\n\t     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n\t     *\n\t     *      var a = {}; a.v = a;\n\t     *      var b = {}; b.v = b;\n\t     *      R.equals(a, b); //=> true\n\t     */\n\t    var equals = _curry2(function equals(a, b) {\n\t        return _equals(a, b, [], []);\n\t    });\n\t\n\t    /**\n\t     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n\t     * same type containing the members of the given filterable which satisfy the\n\t     * given predicate.\n\t     *\n\t     * Dispatches to the `filter` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t     * @param {Function} pred\n\t     * @param {Array} filterable\n\t     * @return {Array}\n\t     * @see R.reject, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isEven = n => n % 2 === 0;\n\t     *\n\t     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n\t     *\n\t     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t     */\n\t    // else\n\t    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n\t        return _isObject(filterable) ? _reduce(function (acc, key) {\n\t            if (pred(filterable[key])) {\n\t                acc[key] = filterable[key];\n\t            }\n\t            return acc;\n\t        }, {}, keys(filterable)) : // else\n\t        _filter(pred, filterable);\n\t    }));\n\t\n\t    /**\n\t     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n\t     * and putting them in a new array, depth-first.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [b]\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The flattened list.\n\t     * @see R.unnest\n\t     * @example\n\t     *\n\t     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n\t     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\t     */\n\t    var flatten = _curry1(_makeFlat(true));\n\t\n\t    /**\n\t     * Returns a new function much like the supplied one, except that the first two\n\t     * arguments' order is reversed.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n\t     * @param {Function} fn The function to invoke with its first two parameters reversed.\n\t     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n\t     * @example\n\t     *\n\t     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n\t     *\n\t     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n\t     *\n\t     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n\t     */\n\t    var flip = _curry1(function flip(fn) {\n\t        return curry(function (a, b) {\n\t            var args = _slice(arguments);\n\t            args[0] = b;\n\t            args[1] = a;\n\t            return fn.apply(this, args);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Splits a list into sub-lists stored in an object, based on the result of\n\t     * calling a String-returning function on each element, and grouping the\n\t     * results according to values returned.\n\t     *\n\t     * Dispatches to the `groupBy` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> String) -> [a] -> {String: [a]}\n\t     * @param {Function} fn Function :: a -> String\n\t     * @param {Array} list The array to group\n\t     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n\t     *         that produced that key when passed to `fn`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var byGrade = R.groupBy(function(student) {\n\t     *        var score = student.score;\n\t     *        return score < 65 ? 'F' :\n\t     *               score < 70 ? 'D' :\n\t     *               score < 80 ? 'C' :\n\t     *               score < 90 ? 'B' : 'A';\n\t     *      });\n\t     *      var students = [{name: 'Abby', score: 84},\n\t     *                      {name: 'Eddy', score: 58},\n\t     *                      // ...\n\t     *                      {name: 'Jack', score: 69}];\n\t     *      byGrade(students);\n\t     *      // {\n\t     *      //   'A': [{name: 'Dianne', score: 99}],\n\t     *      //   'B': [{name: 'Abby', score: 84}]\n\t     *      //   // ...,\n\t     *      //   'F': [{name: 'Eddy', score: 58}]\n\t     *      // }\n\t     */\n\t    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n\t        return _reduce(function (acc, elt) {\n\t            var key = fn(elt);\n\t            acc[key] = append(elt, acc[key] || (acc[key] = []));\n\t            return acc;\n\t        }, {}, list);\n\t    }));\n\t\n\t    /**\n\t     * Returns the first element of the given list or string. In some libraries\n\t     * this function is named `first`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> a | Undefined\n\t     * @sig String -> String\n\t     * @param {Array|String} list\n\t     * @return {*}\n\t     * @see R.tail, R.init, R.last\n\t     * @example\n\t     *\n\t     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n\t     *      R.head([]); //=> undefined\n\t     *\n\t     *      R.head('abc'); //=> 'a'\n\t     *      R.head(''); //=> ''\n\t     */\n\t    var head = nth(0);\n\t\n\t    /**\n\t     * Given a function that generates a key, turns a list of objects into an\n\t     * object indexing the objects by the given key. Note that if multiple\n\t     * objects generate the same value for the indexing key only the last value\n\t     * will be included in the generated object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n\t     * @param {Function} fn Function :: a -> String\n\t     * @param {Array} array The array of objects to index\n\t     * @return {Object} An object indexing each array element by the given property.\n\t     * @example\n\t     *\n\t     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n\t     *      R.indexBy(R.prop('id'), list);\n\t     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n\t     */\n\t    var indexBy = _curry2(function indexBy(fn, list) {\n\t        return _reduce(function (acc, elem) {\n\t            var key = fn(elem);\n\t            acc[key] = elem;\n\t            return acc;\n\t        }, {}, list);\n\t    });\n\t\n\t    /**\n\t     * Returns all but the last element of the given list or string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @sig String -> String\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.last, R.head, R.tail\n\t     * @example\n\t     *\n\t     *      R.init([1, 2, 3]);  //=> [1, 2]\n\t     *      R.init([1, 2]);     //=> [1]\n\t     *      R.init([1]);        //=> []\n\t     *      R.init([]);         //=> []\n\t     *\n\t     *      R.init('abc');  //=> 'ab'\n\t     *      R.init('ab');   //=> 'a'\n\t     *      R.init('a');    //=> ''\n\t     *      R.init('');     //=> ''\n\t     */\n\t    var init = slice(0, -1);\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of those\n\t     * elements common to both lists. Duplication is determined according to the\n\t     * value returned by applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n\t     * @param {Function} pred A predicate function that determines whether\n\t     *        the two supplied elements are equal.\n\t     * @param {Array} list1 One list of items to compare\n\t     * @param {Array} list2 A second list of items to compare\n\t     * @return {Array} A new list containing those elements common to both lists.\n\t     * @see R.intersection\n\t     * @example\n\t     *\n\t     *      var buffaloSpringfield = [\n\t     *        {id: 824, name: 'Richie Furay'},\n\t     *        {id: 956, name: 'Dewey Martin'},\n\t     *        {id: 313, name: 'Bruce Palmer'},\n\t     *        {id: 456, name: 'Stephen Stills'},\n\t     *        {id: 177, name: 'Neil Young'}\n\t     *      ];\n\t     *      var csny = [\n\t     *        {id: 204, name: 'David Crosby'},\n\t     *        {id: 456, name: 'Stephen Stills'},\n\t     *        {id: 539, name: 'Graham Nash'},\n\t     *        {id: 177, name: 'Neil Young'}\n\t     *      ];\n\t     *\n\t     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n\t     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n\t     */\n\t    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n\t        var results = [];\n\t        var idx = 0;\n\t        while (idx < list1.length) {\n\t            if (_containsWith(pred, list1[idx], list2)) {\n\t                results[results.length] = list1[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return uniqWith(pred, results);\n\t    });\n\t\n\t    /**\n\t     * Same as R.invertObj, however this accounts for objects with duplicate values\n\t     * by putting the values into an array.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig {s: x} -> {x: [ s, ... ]}\n\t     * @param {Object} obj The object or array to invert\n\t     * @return {Object} out A new object with keys\n\t     * in an array.\n\t     * @example\n\t     *\n\t     *      var raceResultsByFirstName = {\n\t     *        first: 'alice',\n\t     *        second: 'jake',\n\t     *        third: 'alice',\n\t     *      };\n\t     *      R.invert(raceResultsByFirstName);\n\t     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n\t     */\n\t    var invert = _curry1(function invert(obj) {\n\t        var props = keys(obj);\n\t        var len = props.length;\n\t        var idx = 0;\n\t        var out = {};\n\t        while (idx < len) {\n\t            var key = props[idx];\n\t            var val = obj[key];\n\t            var list = _has(val, out) ? out[val] : out[val] = [];\n\t            list[list.length] = key;\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a new object with the keys of the given object as values, and the\n\t     * values of the given object, which are coerced to strings, as keys. Note\n\t     * that the last key found is preferred when handling the same value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig {s: x} -> {x: s}\n\t     * @param {Object} obj The object or array to invert\n\t     * @return {Object} out A new object\n\t     * @example\n\t     *\n\t     *      var raceResults = {\n\t     *        first: 'alice',\n\t     *        second: 'jake'\n\t     *      };\n\t     *      R.invertObj(raceResults);\n\t     *      //=> { 'alice': 'first', 'jake':'second' }\n\t     *\n\t     *      // Alternatively:\n\t     *      var raceResults = ['alice', 'jake'];\n\t     *      R.invertObj(raceResults);\n\t     *      //=> { 'alice': '0', 'jake':'1' }\n\t     */\n\t    var invertObj = _curry1(function invertObj(obj) {\n\t        var props = keys(obj);\n\t        var len = props.length;\n\t        var idx = 0;\n\t        var out = {};\n\t        while (idx < len) {\n\t            var key = props[idx];\n\t            out[obj[key]] = key;\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the given value is its type's empty value; `false`\n\t     * otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig a -> Boolean\n\t     * @param {*} x\n\t     * @return {Boolean}\n\t     * @see R.empty\n\t     * @example\n\t     *\n\t     *      R.isEmpty([1, 2, 3]);   //=> false\n\t     *      R.isEmpty([]);          //=> true\n\t     *      R.isEmpty('');          //=> true\n\t     *      R.isEmpty(null);        //=> false\n\t     *      R.isEmpty({});          //=> true\n\t     *      R.isEmpty({length: 0}); //=> false\n\t     */\n\t    var isEmpty = _curry1(function isEmpty(x) {\n\t        return x != null && equals(x, empty(x));\n\t    });\n\t\n\t    /**\n\t     * Returns the last element of the given list or string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.4\n\t     * @category List\n\t     * @sig [a] -> a | Undefined\n\t     * @sig String -> String\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.init, R.head, R.tail\n\t     * @example\n\t     *\n\t     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n\t     *      R.last([]); //=> undefined\n\t     *\n\t     *      R.last('abc'); //=> 'c'\n\t     *      R.last(''); //=> ''\n\t     */\n\t    var last = nth(-1);\n\t\n\t    /**\n\t     * Returns the position of the last occurrence of an item in an array, or -1 if\n\t     * the item is not included in the array. `R.equals` is used to determine\n\t     * equality.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> Number\n\t     * @param {*} target The item to find.\n\t     * @param {Array} xs The array to search in.\n\t     * @return {Number} the index of the target, or -1 if the target is not found.\n\t     * @see R.indexOf\n\t     * @example\n\t     *\n\t     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n\t     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n\t     */\n\t    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n\t        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n\t            return xs.lastIndexOf(target);\n\t        } else {\n\t            var idx = xs.length - 1;\n\t            while (idx >= 0) {\n\t                if (equals(xs[idx], target)) {\n\t                    return idx;\n\t                }\n\t                idx -= 1;\n\t            }\n\t            return -1;\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Takes a function and\n\t     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n\t     * applies the function to each of the functor's values, and returns\n\t     * a functor of the same shape.\n\t     *\n\t     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n\t     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n\t     *\n\t     * Dispatches to the `map` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * Also treats functions as functors and will compose them together.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Functor f => (a -> b) -> f a -> f b\n\t     * @param {Function} fn The function to be called on every element of the input `list`.\n\t     * @param {Array} list The list to be iterated over.\n\t     * @return {Array} The new list.\n\t     * @see R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var double = x => x * 2;\n\t     *\n\t     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n\t     *\n\t     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n\t     */\n\t    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n\t        switch (Object.prototype.toString.call(functor)) {\n\t        case '[object Function]':\n\t            return curryN(functor.length, function () {\n\t                return fn.call(this, functor.apply(this, arguments));\n\t            });\n\t        case '[object Object]':\n\t            return _reduce(function (acc, key) {\n\t                acc[key] = fn(functor[key]);\n\t                return acc;\n\t            }, {}, keys(functor));\n\t        default:\n\t            return _map(fn, functor);\n\t        }\n\t    }));\n\t\n\t    /**\n\t     * An Object-specific version of `map`. The function is applied to three\n\t     * arguments: *(value, key, obj)*. If only the value is significant, use\n\t     * `map` instead.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig ((*, String, Object) -> *) -> Object -> Object\n\t     * @param {Function} fn\n\t     * @param {Object} obj\n\t     * @return {Object}\n\t     * @see R.map\n\t     * @example\n\t     *\n\t     *      var values = { x: 1, y: 2, z: 3 };\n\t     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n\t     *\n\t     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n\t     */\n\t    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n\t        return _reduce(function (acc, key) {\n\t            acc[key] = fn(obj[key], key, obj);\n\t            return acc;\n\t        }, {}, keys(obj));\n\t    });\n\t\n\t    /**\n\t     * Creates a new object with the own properties of the two provided objects. If\n\t     * a key exists in both objects, the provided function is applied to the values\n\t     * associated with the key in each object, with the result being used as the\n\t     * value associated with the key in the returned object. The key will be\n\t     * excluded from the returned object if the resulting value is `undefined`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Object\n\t     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n\t     * @param {Function} fn\n\t     * @param {Object} l\n\t     * @param {Object} r\n\t     * @return {Object}\n\t     * @see R.merge, R.mergeWithKey\n\t     * @example\n\t     *\n\t     *      R.mergeWith(R.concat,\n\t     *                  { a: true, values: [10, 20] },\n\t     *                  { b: true, values: [15, 35] });\n\t     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n\t     */\n\t    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n\t        return mergeWithKey(function (_, _l, _r) {\n\t            return fn(_l, _r);\n\t        }, l, r);\n\t    });\n\t\n\t    /**\n\t     * Takes a function `f` and a list of arguments, and returns a function `g`.\n\t     * When applied, `g` returns the result of applying `f` to the arguments\n\t     * provided initially followed by the arguments provided to `g`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n\t     * @param {Function} f\n\t     * @param {Array} args\n\t     * @return {Function}\n\t     * @see R.partialRight\n\t     * @example\n\t     *\n\t     *      var multiply = (a, b) => a * b;\n\t     *      var double = R.partial(multiply, [2]);\n\t     *      double(2); //=> 4\n\t     *\n\t     *      var greet = (salutation, title, firstName, lastName) =>\n\t     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n\t     *\n\t     *      var sayHello = R.partial(greet, ['Hello']);\n\t     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n\t     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n\t     */\n\t    var partial = _createPartialApplicator(_concat);\n\t\n\t    /**\n\t     * Takes a function `f` and a list of arguments, and returns a function `g`.\n\t     * When applied, `g` returns the result of applying `f` to the arguments\n\t     * provided to `g` followed by the arguments provided initially.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n\t     * @param {Function} f\n\t     * @param {Array} args\n\t     * @return {Function}\n\t     * @see R.partial\n\t     * @example\n\t     *\n\t     *      var greet = (salutation, title, firstName, lastName) =>\n\t     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n\t     *\n\t     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n\t     *\n\t     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n\t     */\n\t    var partialRight = _createPartialApplicator(flip(_concat));\n\t\n\t    /**\n\t     * Takes a predicate and a list and returns the pair of lists of elements which\n\t     * do and do not satisfy the predicate, respectively.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.4\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n\t     * @param {Function} pred A predicate to determine which array the element belongs to.\n\t     * @param {Array} list The array to partition.\n\t     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n\t     *         and second an array of elements that did not satisfy.\n\t     * @see R.filter, R.reject\n\t     * @example\n\t     *\n\t     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n\t     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n\t     */\n\t    var partition = _curry2(function partition(pred, list) {\n\t        return _reduce(function (acc, elt) {\n\t            var xs = acc[pred(elt) ? 0 : 1];\n\t            xs[xs.length] = elt;\n\t            return acc;\n\t        }, [\n\t            [],\n\t            []\n\t        ], list);\n\t    });\n\t\n\t    /**\n\t     * Determines whether a nested path on an object has a specific value, in\n\t     * `R.equals` terms. Most likely used to filter a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Relation\n\t     * @sig [String] -> * -> {String: *} -> Boolean\n\t     * @param {Array} path The path of the nested property to use\n\t     * @param {*} val The value to compare the nested property with\n\t     * @param {Object} obj The object to check the nested property in\n\t     * @return {Boolean} `true` if the value equals the nested object property,\n\t     *         `false` otherwise.\n\t     * @example\n\t     *\n\t     *      var user1 = { address: { zipCode: 90210 } };\n\t     *      var user2 = { address: { zipCode: 55555 } };\n\t     *      var user3 = { name: 'Bob' };\n\t     *      var users = [ user1, user2, user3 ];\n\t     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n\t     *      R.filter(isFamous, users); //=> [ user1 ]\n\t     */\n\t    var pathEq = _curry3(function pathEq(_path, val, obj) {\n\t        return equals(path(_path, obj), val);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list by plucking the same named property off all objects in\n\t     * the list supplied.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig k -> [{k: v}] -> [v]\n\t     * @param {Number|String} key The key name to pluck off of each object.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of values for the given key.\n\t     * @see R.props\n\t     * @example\n\t     *\n\t     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n\t     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n\t     */\n\t    var pluck = _curry2(function pluck(p, list) {\n\t        return map(prop(p), list);\n\t    });\n\t\n\t    /**\n\t     * Reasonable analog to SQL `select` statement.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @category Relation\n\t     * @sig [k] -> [{k: v}] -> [{k: v}]\n\t     * @param {Array} props The property names to project\n\t     * @param {Array} objs The objects to query\n\t     * @return {Array} An array of objects with just the `props` properties.\n\t     * @example\n\t     *\n\t     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n\t     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n\t     *      var kids = [abby, fred];\n\t     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n\t     */\n\t    // passing `identity` gives correct arity\n\t    var project = useWith(_map, [\n\t        pickAll,\n\t        identity\n\t    ]);\n\t\n\t    /**\n\t     * Returns `true` if the specified object property is equal, in `R.equals`\n\t     * terms, to the given value; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig String -> a -> Object -> Boolean\n\t     * @param {String} name\n\t     * @param {*} val\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.equals, R.propSatisfies\n\t     * @example\n\t     *\n\t     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n\t     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n\t     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n\t     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n\t     *      var kids = [abby, fred, rusty, alois];\n\t     *      var hasBrownHair = R.propEq('hair', 'brown');\n\t     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n\t     */\n\t    var propEq = _curry3(function propEq(name, val, obj) {\n\t        return propSatisfies(equals(val), name, obj);\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified object property is of the given type;\n\t     * `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Type\n\t     * @sig Type -> String -> Object -> Boolean\n\t     * @param {Function} type\n\t     * @param {String} name\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.is, R.propSatisfies\n\t     * @example\n\t     *\n\t     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n\t     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n\t     *      R.propIs(Number, 'x', {});            //=> false\n\t     */\n\t    var propIs = _curry3(function propIs(type, name, obj) {\n\t        return propSatisfies(is(type), name, obj);\n\t    });\n\t\n\t    /**\n\t     * Returns a single item by iterating through the list, successively calling\n\t     * the iterator function and passing it an accumulator value and the current\n\t     * value from the array, and then passing the result to the next call.\n\t     *\n\t     * The iterator function receives two values: *(acc, value)*. It may use\n\t     * `R.reduced` to shortcut the iteration.\n\t     *\n\t     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n\t     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n\t     * on this behavior, see:\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n\t     *\n\t     * Dispatches to the `reduce` method of the third argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig ((a, b) -> a) -> a -> [b] -> a\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.reduced, R.addIndex\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3];\n\t     *      var add = (a, b) => a + b;\n\t     *\n\t     *      R.reduce(add, 10, numbers); //=> 16\n\t     */\n\t    var reduce = _curry3(_reduce);\n\t\n\t    /**\n\t     * The complement of `filter`.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t     * @param {Function} pred\n\t     * @param {Array} filterable\n\t     * @return {Array}\n\t     * @see R.filter, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isOdd = (n) => n % 2 === 1;\n\t     *\n\t     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n\t     *\n\t     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t     */\n\t    var reject = _curry2(function reject(pred, filterable) {\n\t        return filter(_complement(pred), filterable);\n\t    });\n\t\n\t    /**\n\t     * Returns a fixed list of size `n` containing a specified identical value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig a -> n -> [a]\n\t     * @param {*} value The value to repeat.\n\t     * @param {Number} n The desired size of the output list.\n\t     * @return {Array} A new array containing `n` `value`s.\n\t     * @example\n\t     *\n\t     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n\t     *\n\t     *      var obj = {};\n\t     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n\t     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n\t     */\n\t    var repeat = _curry2(function repeat(value, n) {\n\t        return times(always(value), n);\n\t    });\n\t\n\t    /**\n\t     * Adds together all the elements of a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list An array of numbers\n\t     * @return {Number} The sum of all the numbers in the list.\n\t     * @see R.reduce\n\t     * @example\n\t     *\n\t     *      R.sum([2,4,6,8,100,1]); //=> 121\n\t     */\n\t    var sum = reduce(add, 0);\n\t\n\t    /**\n\t     * Returns a new list containing the last `n` elements of the given list.\n\t     * If `n > list.length`, returns a list of `list.length` elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n The number of elements to return.\n\t     * @param {Array} xs The collection to consider.\n\t     * @return {Array}\n\t     * @see R.dropLast\n\t     * @example\n\t     *\n\t     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n\t     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n\t     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.takeLast(3, 'ramda');               //=> 'mda'\n\t     */\n\t    var takeLast = _curry2(function takeLast(n, xs) {\n\t        return drop(n >= 0 ? xs.length - n : 0, xs);\n\t    });\n\t\n\t    /**\n\t     * Initializes a transducer using supplied iterator function. Returns a single\n\t     * item by iterating through the list, successively calling the transformed\n\t     * iterator function and passing it an accumulator value and the current value\n\t     * from the array, and then passing the result to the next call.\n\t     *\n\t     * The iterator function receives two values: *(acc, value)*. It will be\n\t     * wrapped as a transformer to initialize the transducer. A transformer can be\n\t     * passed directly in place of an iterator function. In both cases, iteration\n\t     * may be stopped early with the `R.reduced` function.\n\t     *\n\t     * A transducer is a function that accepts a transformer and returns a\n\t     * transformer and can be composed directly.\n\t     *\n\t     * A transformer is an an object that provides a 2-arity reducing iterator\n\t     * function, step, 0-arity initial value function, init, and 1-arity result\n\t     * extraction function, result. The step function is used as the iterator\n\t     * function in reduce. The result function is used to convert the final\n\t     * accumulator into the return type and in most cases is R.identity. The init\n\t     * function can be used to provide an initial accumulator, but is ignored by\n\t     * transduce.\n\t     *\n\t     * The iteration is performed with R.reduce after initializing the transducer.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n\t     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array. Wrapped as transformer, if necessary, and used to\n\t     *        initialize the transducer\n\t     * @param {*} acc The initial accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.reduce, R.reduced, R.into\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3, 4];\n\t     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n\t     *\n\t     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n\t     */\n\t    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n\t        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n\t    });\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n\t     * of each list. Duplication is determined according to the value returned by\n\t     * applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The first and second lists concatenated, with\n\t     *         duplicates removed.\n\t     * @see R.union\n\t     * @example\n\t     *\n\t     *      var l1 = [{a: 1}, {a: 2}];\n\t     *      var l2 = [{a: 1}, {a: 4}];\n\t     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n\t     */\n\t    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n\t        return uniqWith(pred, _concat(list1, list2));\n\t    });\n\t\n\t    /**\n\t     * Takes a spec object and a test object; returns true if the test satisfies\n\t     * the spec, false otherwise. An object satisfies the spec if, for each of the\n\t     * spec's own properties, accessing that property of the object gives the same\n\t     * value (in `R.equals` terms) as accessing that property of the spec.\n\t     *\n\t     * `whereEq` is a specialization of [`where`](#where).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Object\n\t     * @sig {String: *} -> {String: *} -> Boolean\n\t     * @param {Object} spec\n\t     * @param {Object} testObj\n\t     * @return {Boolean}\n\t     * @see R.where\n\t     * @example\n\t     *\n\t     *      // pred :: Object -> Boolean\n\t     *      var pred = R.whereEq({a: 1, b: 2});\n\t     *\n\t     *      pred({a: 1});              //=> false\n\t     *      pred({a: 1, b: 2});        //=> true\n\t     *      pred({a: 1, b: 2, c: 3});  //=> true\n\t     *      pred({a: 1, b: 1});        //=> false\n\t     */\n\t    var whereEq = _curry2(function whereEq(spec, testObj) {\n\t        return where(map(equals, spec), testObj);\n\t    });\n\t\n\t    var _flatCat = function () {\n\t        var preservingReduced = function (xf) {\n\t            return {\n\t                '@@transducer/init': _xfBase.init,\n\t                '@@transducer/result': function (result) {\n\t                    return xf['@@transducer/result'](result);\n\t                },\n\t                '@@transducer/step': function (result, input) {\n\t                    var ret = xf['@@transducer/step'](result, input);\n\t                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n\t                }\n\t            };\n\t        };\n\t        return function _xcat(xf) {\n\t            var rxf = preservingReduced(xf);\n\t            return {\n\t                '@@transducer/init': _xfBase.init,\n\t                '@@transducer/result': function (result) {\n\t                    return rxf['@@transducer/result'](result);\n\t                },\n\t                '@@transducer/step': function (result, input) {\n\t                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n\t                }\n\t            };\n\t        };\n\t    }();\n\t\n\t    // Array.prototype.indexOf doesn't exist below IE9\n\t    // manually crawl the list to distinguish between +0 and -0\n\t    // NaN\n\t    // non-zero numbers can utilise Set\n\t    // all these types can utilise Set\n\t    // null can utilise Set\n\t    // anything else not covered above, defer to R.equals\n\t    var _indexOf = function _indexOf(list, a, idx) {\n\t        var inf, item;\n\t        // Array.prototype.indexOf doesn't exist below IE9\n\t        if (typeof list.indexOf === 'function') {\n\t            switch (typeof a) {\n\t            case 'number':\n\t                if (a === 0) {\n\t                    // manually crawl the list to distinguish between +0 and -0\n\t                    inf = 1 / a;\n\t                    while (idx < list.length) {\n\t                        item = list[idx];\n\t                        if (item === 0 && 1 / item === inf) {\n\t                            return idx;\n\t                        }\n\t                        idx += 1;\n\t                    }\n\t                    return -1;\n\t                } else if (a !== a) {\n\t                    // NaN\n\t                    while (idx < list.length) {\n\t                        item = list[idx];\n\t                        if (typeof item === 'number' && item !== item) {\n\t                            return idx;\n\t                        }\n\t                        idx += 1;\n\t                    }\n\t                    return -1;\n\t                }\n\t                // non-zero numbers can utilise Set\n\t                return list.indexOf(a, idx);\n\t            // all these types can utilise Set\n\t            case 'string':\n\t            case 'boolean':\n\t            case 'function':\n\t            case 'undefined':\n\t                return list.indexOf(a, idx);\n\t            case 'object':\n\t                if (a === null) {\n\t                    // null can utilise Set\n\t                    return list.indexOf(a, idx);\n\t                }\n\t            }\n\t        }\n\t        // anything else not covered above, defer to R.equals\n\t        while (idx < list.length) {\n\t            if (equals(list[idx], a)) {\n\t                return idx;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return -1;\n\t    };\n\t\n\t    var _xchain = _curry2(function _xchain(f, xf) {\n\t        return map(f, _flatCat(xf));\n\t    });\n\t\n\t    /**\n\t     * Takes a list of predicates and returns a predicate that returns true for a\n\t     * given list of arguments if every one of the provided predicates is satisfied\n\t     * by those arguments.\n\t     *\n\t     * The function returned is a curried function whose arity matches that of the\n\t     * highest-arity predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Logic\n\t     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n\t     * @param {Array} preds\n\t     * @return {Function}\n\t     * @see R.anyPass\n\t     * @example\n\t     *\n\t     *      var isQueen = R.propEq('rank', 'Q');\n\t     *      var isSpade = R.propEq('suit', '♠︎');\n\t     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n\t     *\n\t     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n\t     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n\t     */\n\t    var allPass = _curry1(function allPass(preds) {\n\t        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n\t            var idx = 0;\n\t            var len = preds.length;\n\t            while (idx < len) {\n\t                if (!preds[idx].apply(this, arguments)) {\n\t                    return false;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return true;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if all elements are unique, in `R.equals` terms, otherwise\n\t     * `false`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category List\n\t     * @sig [a] -> Boolean\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if all elements are unique, else `false`.\n\t     * @example\n\t     *\n\t     *      R.allUniq(['1', 1]); //=> true\n\t     *      R.allUniq([1, 1]);   //=> false\n\t     *      R.allUniq([[42], [42]]); //=> false\n\t     */\n\t    var allUniq = _curry1(function allUniq(list) {\n\t        var len = list.length;\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n\t                return false;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return true;\n\t    });\n\t\n\t    /**\n\t     * Takes a list of predicates and returns a predicate that returns true for a\n\t     * given list of arguments if at least one of the provided predicates is\n\t     * satisfied by those arguments.\n\t     *\n\t     * The function returned is a curried function whose arity matches that of the\n\t     * highest-arity predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Logic\n\t     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n\t     * @param {Array} preds\n\t     * @return {Function}\n\t     * @see R.allPass\n\t     * @example\n\t     *\n\t     *      var gte = R.anyPass([R.gt, R.equals]);\n\t     *\n\t     *      gte(3, 2); //=> true\n\t     *      gte(2, 2); //=> true\n\t     *      gte(2, 3); //=> false\n\t     */\n\t    var anyPass = _curry1(function anyPass(preds) {\n\t        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n\t            var idx = 0;\n\t            var len = preds.length;\n\t            while (idx < len) {\n\t                if (preds[idx].apply(this, arguments)) {\n\t                    return true;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return false;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * ap applies a list of functions to a list of values.\n\t     *\n\t     * Dispatches to the `ap` method of the second argument, if present. Also\n\t     * treats functions as applicatives.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Function\n\t     * @sig [f] -> [a] -> [f a]\n\t     * @param {Array} fns An array of functions\n\t     * @param {Array} vs An array of values\n\t     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n\t     * @example\n\t     *\n\t     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n\t     */\n\t    // else\n\t    var ap = _curry2(function ap(applicative, fn) {\n\t        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? curryN(Math.max(applicative.length, fn.length), function () {\n\t            return applicative.apply(this, arguments)(fn.apply(this, arguments));\n\t        }) : // else\n\t        _reduce(function (acc, f) {\n\t            return _concat(acc, map(f, fn));\n\t        }, [], applicative);\n\t    });\n\t\n\t    /**\n\t     * Returns the result of calling its first argument with the remaining\n\t     * arguments. This is occasionally useful as a converging function for\n\t     * `R.converge`: the left branch can produce a function while the right branch\n\t     * produces a value to be passed to that function as an argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig (*... -> a),*... -> a\n\t     * @param {Function} fn The function to apply to the remaining arguments.\n\t     * @param {...*} args Any number of positional arguments.\n\t     * @return {*}\n\t     * @see R.apply\n\t     * @example\n\t     *\n\t     *      var indentN = R.pipe(R.times(R.always(' ')),\n\t     *                           R.join(''),\n\t     *                           R.replace(/^(?!$)/gm));\n\t     *\n\t     *      var format = R.converge(R.call, [\n\t     *                                  R.pipe(R.prop('indent'), indentN),\n\t     *                                  R.prop('value')\n\t     *                              ]);\n\t     *\n\t     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n\t     */\n\t    var call = curry(function call(fn) {\n\t        return fn.apply(this, _slice(arguments, 1));\n\t    });\n\t\n\t    /**\n\t     * `chain` maps a function over a list and concatenates the results. `chain`\n\t     * is also known as `flatMap` in some libraries\n\t     *\n\t     * Dispatches to the `chain` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig (a -> [b]) -> [a] -> [b]\n\t     * @param {Function} fn\n\t     * @param {Array} list\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      var duplicate = n => [n, n];\n\t     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n\t     */\n\t    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n\t        if (typeof monad === 'function') {\n\t            return function () {\n\t                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n\t            };\n\t        }\n\t        return _makeFlat(false)(map(fn, monad));\n\t    }));\n\t\n\t    /**\n\t     * Turns a list of Functors into a Functor of a list, applying a mapping\n\t     * function to the elements of the list along the way.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category List\n\t     * @sig Functor f => (a -> f b) -> (x -> f x) -> [a] -> f [b]\n\t     * @param {Function} fn The transformation function\n\t     * @param {Function} of A function that returns the data type to return\n\t     * @param {Array} list An array of functors of the same type\n\t     * @return {*}\n\t     * @see R.traverse\n\t     * @deprecated since v0.19.0\n\t     * @example\n\t     *\n\t     *      var add10 = R.map(R.add(10));\n\t     *      R.commuteMap(add10, R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n\t     *      R.commuteMap(add10, R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n\t     *      R.commuteMap(add10, R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n\t     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n\t     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     *\n\t     *      var fetch = url => Future((rej, res) => http.get(url, res).on('error', rej));\n\t     *      R.commuteMap(fetch, Future.of, [\n\t     *        'http://ramdajs.com',\n\t     *        'http://github.com/ramda'\n\t     *      ]); //=> Future([IncomingMessage, IncomingMessage])\n\t     */\n\t    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n\t        function consF(acc, x) {\n\t            return ap(map(prepend, fn(x)), acc);\n\t        }\n\t        return reduceRight(consF, of([]), list);\n\t    });\n\t\n\t    /**\n\t     * Wraps a constructor function inside a curried function that can be called\n\t     * with the same arguments and returns the same type. The arity of the function\n\t     * returned is specified to allow using variadic constructor functions.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.0\n\t     * @category Function\n\t     * @sig Number -> (* -> {*}) -> (* -> {*})\n\t     * @param {Number} n The arity of the constructor function.\n\t     * @param {Function} Fn The constructor function to wrap.\n\t     * @return {Function} A wrapped, curried constructor function.\n\t     * @example\n\t     *\n\t     *      // Variadic constructor function\n\t     *      var Widget = () => {\n\t     *        this.children = Array.prototype.slice.call(arguments);\n\t     *        // ...\n\t     *      };\n\t     *      Widget.prototype = {\n\t     *        // ...\n\t     *      };\n\t     *      var allConfigs = [\n\t     *        // ...\n\t     *      ];\n\t     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n\t     */\n\t    var constructN = _curry2(function constructN(n, Fn) {\n\t        if (n > 10) {\n\t            throw new Error('Constructor with greater than ten arguments');\n\t        }\n\t        if (n === 0) {\n\t            return function () {\n\t                return new Fn();\n\t            };\n\t        }\n\t        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n\t            switch (arguments.length) {\n\t            case 1:\n\t                return new Fn($0);\n\t            case 2:\n\t                return new Fn($0, $1);\n\t            case 3:\n\t                return new Fn($0, $1, $2);\n\t            case 4:\n\t                return new Fn($0, $1, $2, $3);\n\t            case 5:\n\t                return new Fn($0, $1, $2, $3, $4);\n\t            case 6:\n\t                return new Fn($0, $1, $2, $3, $4, $5);\n\t            case 7:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6);\n\t            case 8:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\t            case 9:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\t            case 10:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n\t            }\n\t        }));\n\t    });\n\t\n\t    /**\n\t     * Accepts a converging function and a list of branching functions and returns\n\t     * a new function. When invoked, this new function is applied to some\n\t     * arguments, each branching function is applied to those same arguments. The\n\t     * results of each branching function are passed as arguments to the converging\n\t     * function to produce the return value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.2\n\t     * @category Function\n\t     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n\t     * @param {Function} after A function. `after` will be invoked with the return values of\n\t     *        `fn1` and `fn2` as its arguments.\n\t     * @param {Array} functions A list of functions.\n\t     * @return {Function} A new function.\n\t     * @example\n\t     *\n\t     *      var add = (a, b) => a + b;\n\t     *      var multiply = (a, b) => a * b;\n\t     *      var subtract = (a, b) => a - b;\n\t     *\n\t     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n\t     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n\t     *\n\t     *      var add3 = (a, b, c) => a + b + c;\n\t     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n\t     */\n\t    var converge = _curry2(function converge(after, fns) {\n\t        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n\t            var args = arguments;\n\t            var context = this;\n\t            return after.apply(context, _map(function (fn) {\n\t                return fn.apply(context, args);\n\t            }, fns));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns a new list without any consecutively repeating elements. Equality is\n\t     * determined by applying the supplied predicate two consecutive elements. The\n\t     * first element in a series of equal element is the one being preserved.\n\t     *\n\t     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig (a, a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} `list` without repeating elements.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var lengthEq = (x, y) => Math.abs(x) === Math.abs(y);\n\t     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n\t     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n\t     */\n\t    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n\t        var result = [];\n\t        var idx = 1;\n\t        var len = list.length;\n\t        if (len !== 0) {\n\t            result[0] = list[0];\n\t            while (idx < len) {\n\t                if (!pred(last(result), list[idx])) {\n\t                    result[result.length] = list[idx];\n\t                }\n\t                idx += 1;\n\t            }\n\t        }\n\t        return result;\n\t    }));\n\t\n\t    /**\n\t     * Takes a function and two values in its domain and returns `true` if the\n\t     * values map to the same value in the codomain; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Relation\n\t     * @sig (a -> b) -> a -> a -> Boolean\n\t     * @param {Function} f\n\t     * @param {*} x\n\t     * @param {*} y\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      R.eqBy(Math.abs, 5, -5); //=> true\n\t     */\n\t    var eqBy = _curry3(function eqBy(f, x, y) {\n\t        return equals(f(x), f(y));\n\t    });\n\t\n\t    /**\n\t     * Reports whether two objects have the same value, in `R.equals` terms, for\n\t     * the specified property. Useful as a curried predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig k -> {k: v} -> {k: v} -> Boolean\n\t     * @param {String} prop The name of the property to compare\n\t     * @param {Object} obj1\n\t     * @param {Object} obj2\n\t     * @return {Boolean}\n\t     *\n\t     * @example\n\t     *\n\t     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n\t     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n\t     *      R.eqProps('a', o1, o2); //=> false\n\t     *      R.eqProps('c', o1, o2); //=> true\n\t     */\n\t    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n\t        return equals(obj1[prop], obj2[prop]);\n\t    });\n\t\n\t    /**\n\t     * Returns the position of the first occurrence of an item in an array, or -1\n\t     * if the item is not included in the array. `R.equals` is used to determine\n\t     * equality.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> Number\n\t     * @param {*} target The item to find.\n\t     * @param {Array} xs The array to search in.\n\t     * @return {Number} the index of the target, or -1 if the target is not found.\n\t     * @see R.lastIndexOf\n\t     * @example\n\t     *\n\t     *      R.indexOf(3, [1,2,3,4]); //=> 2\n\t     *      R.indexOf(10, [1,2,3,4]); //=> -1\n\t     */\n\t    var indexOf = _curry2(function indexOf(target, xs) {\n\t        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n\t    });\n\t\n\t    /**\n\t     * juxt applies a list of functions to a list of values.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Function\n\t     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n\t     * @param {Array} fns An array of functions\n\t     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n\t     * @example\n\t     *\n\t     *      var range = R.juxt([Math.min, Math.max]);\n\t     *      range(3, 4, 9, -3); //=> [-3, 9]\n\t     */\n\t    var juxt = _curry1(function juxt(fns) {\n\t        return function () {\n\t            return map(apply(__, arguments), fns);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n\t     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n\t     * should not mutate the data structure.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n\t     * @param {Function} getter\n\t     * @param {Function} setter\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n\t     *\n\t     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n\t     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n\t     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n\t     */\n\t    var lens = _curry2(function lens(getter, setter) {\n\t        return function (f) {\n\t            return function (s) {\n\t                return map(function (v) {\n\t                    return setter(v, s);\n\t                }, f(getter(s)));\n\t            };\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns a lens whose focus is the specified index.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Number -> Lens s a\n\t     * @param {Number} n\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over\n\t     * @example\n\t     *\n\t     *      var headLens = R.lensIndex(0);\n\t     *\n\t     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n\t     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n\t     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n\t     */\n\t    var lensIndex = _curry1(function lensIndex(n) {\n\t        return lens(nth(n), update(n));\n\t    });\n\t\n\t    /**\n\t     * Returns a lens whose focus is the specified path.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig [String] -> Lens s a\n\t     * @param {Array} path The path to use.\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over\n\t     * @example\n\t     *\n\t     *      var xyLens = R.lensPath(['x', 'y']);\n\t     *\n\t     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n\t     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n\t     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n\t     */\n\t    var lensPath = _curry1(function lensPath(p) {\n\t        return lens(path(p), assocPath(p));\n\t    });\n\t\n\t    /**\n\t     * Returns a lens whose focus is the specified property.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig String -> Lens s a\n\t     * @param {String} k\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over\n\t     * @example\n\t     *\n\t     *      var xLens = R.lensProp('x');\n\t     *\n\t     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n\t     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n\t     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n\t     */\n\t    var lensProp = _curry1(function lensProp(k) {\n\t        return lens(prop(k), assoc(k));\n\t    });\n\t\n\t    /**\n\t     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n\t     * many lists (or other objects that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply)).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Function\n\t     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n\t     * @param {Function} fn The function to lift into higher context\n\t     * @return {Function} The lifted function.\n\t     * @see R.lift\n\t     * @example\n\t     *\n\t     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n\t     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n\t     */\n\t    var liftN = _curry2(function liftN(arity, fn) {\n\t        var lifted = curryN(arity, fn);\n\t        return curryN(arity, function () {\n\t            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns the mean of the given list of numbers.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list\n\t     * @return {Number}\n\t     * @example\n\t     *\n\t     *      R.mean([2, 7, 9]); //=> 6\n\t     *      R.mean([]); //=> NaN\n\t     */\n\t    var mean = _curry1(function mean(list) {\n\t        return sum(list) / list.length;\n\t    });\n\t\n\t    /**\n\t     * Returns the median of the given list of numbers.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list\n\t     * @return {Number}\n\t     * @example\n\t     *\n\t     *      R.median([2, 9, 7]); //=> 7\n\t     *      R.median([7, 2, 10, 9]); //=> 8\n\t     *      R.median([]); //=> NaN\n\t     */\n\t    var median = _curry1(function median(list) {\n\t        var len = list.length;\n\t        if (len === 0) {\n\t            return NaN;\n\t        }\n\t        var width = 2 - len % 2;\n\t        var idx = (len - width) / 2;\n\t        return mean(_slice(list).sort(function (a, b) {\n\t            return a < b ? -1 : a > b ? 1 : 0;\n\t        }).slice(idx, idx + width));\n\t    });\n\t\n\t    /**\n\t     * Create a new object with the own properties of the first object merged with\n\t     * the own properties of the second object. If a key exists in both objects,\n\t     * the value from the second object will be used.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {k: v} -> {k: v} -> {k: v}\n\t     * @param {Object} l\n\t     * @param {Object} r\n\t     * @return {Object}\n\t     * @see R.mergeWith, R.mergeWithKey\n\t     * @example\n\t     *\n\t     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n\t     *      //=> { 'name': 'fred', 'age': 40 }\n\t     *\n\t     *      var resetToDefault = R.merge(R.__, {x: 0});\n\t     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n\t     */\n\t    var merge = mergeWith(function (l, r) {\n\t        return r;\n\t    });\n\t\n\t    /**\n\t     * Merges a list of objects together into one object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig [{k: v}] -> {k: v}\n\t     * @param {Array} list An array of objects\n\t     * @return {Object} A merged object.\n\t     * @see R.reduce\n\t     * @example\n\t     *\n\t     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n\t     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n\t     */\n\t    var mergeAll = _curry1(function mergeAll(list) {\n\t        return reduce(merge, {}, list);\n\t    });\n\t\n\t    /**\n\t     * Performs left-to-right function composition. The leftmost function may have\n\t     * any arity; the remaining functions must be unary.\n\t     *\n\t     * In some libraries this function is named `sequence`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.compose\n\t     * @example\n\t     *\n\t     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n\t     *\n\t     *      f(3, 4); // -(3^4) + 1\n\t     */\n\t    var pipe = function pipe() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('pipe requires at least one argument');\n\t        }\n\t        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n\t    };\n\t\n\t    /**\n\t     * Performs left-to-right composition of one or more Promise-returning\n\t     * functions. The leftmost function may have any arity; the remaining functions\n\t     * must be unary.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.composeP\n\t     * @example\n\t     *\n\t     *      //  followersForUser :: String -> Promise [User]\n\t     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n\t     */\n\t    var pipeP = function pipeP() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('pipeP requires at least one argument');\n\t        }\n\t        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n\t    };\n\t\n\t    /**\n\t     * Multiplies together all the elements of a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list An array of numbers\n\t     * @return {Number} The product of all the numbers in the list.\n\t     * @see R.reduce\n\t     * @example\n\t     *\n\t     *      R.product([2,4,6,8,100,1]); //=> 38400\n\t     */\n\t    var product = reduce(multiply, 1);\n\t\n\t    /**\n\t     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n\t     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n\t     * Applicative of Traversable.\n\t     *\n\t     * Dispatches to the `sequence` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n\t     * @param {Function} of\n\t     * @param {*} traversable\n\t     * @return {*}\n\t     * @see R.traverse\n\t     * @example\n\t     *\n\t     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n\t     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     *\n\t     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n\t     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n\t     */\n\t    var sequence = _curry2(function sequence(of, traversable) {\n\t        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n\t            return ap(map(prepend, x), acc);\n\t        }, of([]), traversable);\n\t    });\n\t\n\t    /**\n\t     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n\t     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n\t     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n\t     * into an Applicative of Traversable.\n\t     *\n\t     * Dispatches to the `sequence` method of the third argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n\t     * @param {Function} of\n\t     * @param {Function} f\n\t     * @param {*} traversable\n\t     * @return {*}\n\t     * @see R.sequence\n\t     * @example\n\t     *\n\t     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Just(3)]);   //=> Just([-1, -2, -3])\n\t     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     *\n\t     *      R.traverse(R.of, R.negate, Just([1, 2, 3])); //=> [Just(-1), Just(-2), Just(-3)]\n\t     *      R.traverse(R.of, R.negate, Nothing());       //=> [Nothing()]\n\t     */\n\t    var traverse = _curry3(function traverse(of, f, traversable) {\n\t        return sequence(of, map(f, traversable));\n\t    });\n\t\n\t    /**\n\t     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n\t     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig Chain c => c (c a) -> c a\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.flatten, R.chain\n\t     * @example\n\t     *\n\t     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n\t     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n\t     */\n\t    var unnest = chain(_identity);\n\t\n\t    var _contains = function _contains(a, list) {\n\t        return _indexOf(list, a, 0) >= 0;\n\t    };\n\t\n\t    var _stepCat = function () {\n\t        var _stepCatArray = {\n\t            '@@transducer/init': Array,\n\t            '@@transducer/step': function (xs, x) {\n\t                return _concat(xs, [x]);\n\t            },\n\t            '@@transducer/result': _identity\n\t        };\n\t        var _stepCatString = {\n\t            '@@transducer/init': String,\n\t            '@@transducer/step': function (a, b) {\n\t                return a + b;\n\t            },\n\t            '@@transducer/result': _identity\n\t        };\n\t        var _stepCatObject = {\n\t            '@@transducer/init': Object,\n\t            '@@transducer/step': function (result, input) {\n\t                return merge(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n\t            },\n\t            '@@transducer/result': _identity\n\t        };\n\t        return function _stepCat(obj) {\n\t            if (_isTransformer(obj)) {\n\t                return obj;\n\t            }\n\t            if (isArrayLike(obj)) {\n\t                return _stepCatArray;\n\t            }\n\t            if (typeof obj === 'string') {\n\t                return _stepCatString;\n\t            }\n\t            if (typeof obj === 'object') {\n\t                return _stepCatObject;\n\t            }\n\t            throw new Error('Cannot create transformer for ' + obj);\n\t        };\n\t    }();\n\t\n\t    //  mapPairs :: (Object, [String]) -> [String]\n\t    var _toString = function _toString(x, seen) {\n\t        var recur = function recur(y) {\n\t            var xs = seen.concat([x]);\n\t            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n\t        };\n\t        //  mapPairs :: (Object, [String]) -> [String]\n\t        var mapPairs = function (obj, keys) {\n\t            return _map(function (k) {\n\t                return _quote(k) + ': ' + recur(obj[k]);\n\t            }, keys.slice().sort());\n\t        };\n\t        switch (Object.prototype.toString.call(x)) {\n\t        case '[object Arguments]':\n\t            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\t        case '[object Array]':\n\t            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n\t                return /^\\d+$/.test(k);\n\t            }, keys(x)))).join(', ') + ']';\n\t        case '[object Boolean]':\n\t            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\t        case '[object Date]':\n\t            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\t        case '[object Null]':\n\t            return 'null';\n\t        case '[object Number]':\n\t            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\t        case '[object String]':\n\t            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\t        case '[object Undefined]':\n\t            return 'undefined';\n\t        default:\n\t            if (typeof x.toString === 'function') {\n\t                var repr = x.toString();\n\t                if (repr !== '[object Object]') {\n\t                    return repr;\n\t                }\n\t            }\n\t            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Turns a list of Functors into a Functor of a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category List\n\t     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n\t     * @param {Function} of A function that returns the data type to return\n\t     * @param {Array} list An array of functors of the same type\n\t     * @return {*}\n\t     * @see R.sequence\n\t     * @deprecated since v0.19.0\n\t     * @example\n\t     *\n\t     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n\t     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n\t     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n\t     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n\t     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     */\n\t    var commute = commuteMap(identity);\n\t\n\t    /**\n\t     * Performs right-to-left function composition. The rightmost function may have\n\t     * any arity; the remaining functions must be unary.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.pipe\n\t     * @example\n\t     *\n\t     *      var f = R.compose(R.inc, R.negate, Math.pow);\n\t     *\n\t     *      f(3, 4); // -(3^4) + 1\n\t     */\n\t    var compose = function compose() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('compose requires at least one argument');\n\t        }\n\t        return pipe.apply(this, reverse(arguments));\n\t    };\n\t\n\t    /**\n\t     * Returns the right-to-left Kleisli composition of the provided functions,\n\t     * each of which must return a value of a type supported by [`chain`](#chain).\n\t     *\n\t     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Function\n\t     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n\t     * @param {...Function}\n\t     * @return {Function}\n\t     * @see R.pipeK\n\t     * @example\n\t     *\n\t     *      //  parseJson :: String -> Maybe *\n\t     *      //  get :: String -> Object -> Maybe *\n\t     *\n\t     *      //  getStateCode :: Maybe String -> Maybe String\n\t     *      var getStateCode = R.composeK(\n\t     *        R.compose(Maybe.of, R.toUpper),\n\t     *        get('state'),\n\t     *        get('address'),\n\t     *        get('user'),\n\t     *        parseJson\n\t     *      );\n\t     *\n\t     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n\t     *      //=> Just('NY')\n\t     *      getStateCode(Maybe.of('[Invalid JSON]'));\n\t     *      //=> Nothing()\n\t     */\n\t    var composeK = function composeK() {\n\t        return compose.apply(this, prepend(identity, map(chain, arguments)));\n\t    };\n\t\n\t    /**\n\t     * Performs right-to-left composition of one or more Promise-returning\n\t     * functions. The rightmost function may have any arity; the remaining\n\t     * functions must be unary.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.pipeP\n\t     * @example\n\t     *\n\t     *      //  followersForUser :: String -> Promise [User]\n\t     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n\t     */\n\t    var composeP = function composeP() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('composeP requires at least one argument');\n\t        }\n\t        return pipeP.apply(this, reverse(arguments));\n\t    };\n\t\n\t    /**\n\t     * Wraps a constructor function inside a curried function that can be called\n\t     * with the same arguments and returns the same type.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (* -> {*}) -> (* -> {*})\n\t     * @param {Function} Fn The constructor function to wrap.\n\t     * @return {Function} A wrapped, curried constructor function.\n\t     * @example\n\t     *\n\t     *      // Constructor function\n\t     *      var Widget = config => {\n\t     *        // ...\n\t     *      };\n\t     *      Widget.prototype = {\n\t     *        // ...\n\t     *      };\n\t     *      var allConfigs = [\n\t     *        // ...\n\t     *      ];\n\t     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n\t     */\n\t    var construct = _curry1(function construct(Fn) {\n\t        return constructN(Fn.length, Fn);\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n\t     * least one element of the given list; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> Boolean\n\t     * @param {Object} a The item to compare against.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n\t     * @see R.any\n\t     * @example\n\t     *\n\t     *      R.contains(3, [1, 2, 3]); //=> true\n\t     *      R.contains(4, [1, 2, 3]); //=> false\n\t     *      R.contains([42], [[42]]); //=> true\n\t     */\n\t    var contains = _curry2(_contains);\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements in the first list not\n\t     * contained in the second list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` that are not in `list2`.\n\t     * @see R.differenceWith\n\t     * @example\n\t     *\n\t     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n\t     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n\t     */\n\t    var difference = _curry2(function difference(first, second) {\n\t        var out = [];\n\t        var idx = 0;\n\t        var firstLen = first.length;\n\t        while (idx < firstLen) {\n\t            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n\t                out[out.length] = first[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list without any consecutively repeating elements. `R.equals`\n\t     * is used to determine equality.\n\t     *\n\t     * Dispatches to the `dropRepeats` method of the first argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} `list` without repeating elements.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n\t     */\n\t    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\t\n\t    /**\n\t     * Transforms the items of the list with the transducer and appends the\n\t     * transformed items to the accumulator using an appropriate iterator function\n\t     * based on the accumulator type.\n\t     *\n\t     * The accumulator can be an array, string, object or a transformer. Iterated\n\t     * items will be appended to arrays and concatenated to strings. Objects will\n\t     * be merged directly or 2-item arrays will be merged as key, value pairs.\n\t     *\n\t     * The accumulator can also be a transformer object that provides a 2-arity\n\t     * reducing iterator function, step, 0-arity initial value function, init, and\n\t     * 1-arity result extraction function result. The step function is used as the\n\t     * iterator function in reduce. The result function is used to convert the\n\t     * final accumulator into the return type and in most cases is R.identity. The\n\t     * init function is used to provide the initial accumulator.\n\t     *\n\t     * The iteration is performed with R.reduce after initializing the transducer.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig a -> (b -> b) -> [c] -> a\n\t     * @param {*} acc The initial accumulator value.\n\t     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3, 4];\n\t     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n\t     *\n\t     *      R.into([], transducer, numbers); //=> [2, 3]\n\t     *\n\t     *      var intoArray = R.into([]);\n\t     *      intoArray(transducer, numbers); //=> [2, 3]\n\t     */\n\t    var into = _curry3(function into(acc, xf, list) {\n\t        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n\t    });\n\t\n\t    /**\n\t     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or other\n\t     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Function\n\t     * @sig (*... -> *) -> ([*]... -> [*])\n\t     * @param {Function} fn The function to lift into higher context\n\t     * @return {Function} The lifted function.\n\t     * @see R.liftN\n\t     * @example\n\t     *\n\t     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n\t     *\n\t     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n\t     *\n\t     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n\t     *\n\t     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n\t     */\n\t    var lift = _curry1(function lift(fn) {\n\t        return liftN(fn.length, fn);\n\t    });\n\t\n\t    /**\n\t     * Returns a partial copy of an object omitting the keys specified.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [String] -> {String: *} -> {String: *}\n\t     * @param {Array} names an array of String property names to omit from the new object\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with properties from `names` not on it.\n\t     * @see R.pick\n\t     * @example\n\t     *\n\t     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n\t     */\n\t    var omit = _curry2(function omit(names, obj) {\n\t        var result = {};\n\t        for (var prop in obj) {\n\t            if (!_contains(prop, names)) {\n\t                result[prop] = obj[prop];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the left-to-right Kleisli composition of the provided functions,\n\t     * each of which must return a value of a type supported by [`chain`](#chain).\n\t     *\n\t     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Function\n\t     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n\t     * @param {...Function}\n\t     * @return {Function}\n\t     * @see R.composeK\n\t     * @example\n\t     *\n\t     *      //  parseJson :: String -> Maybe *\n\t     *      //  get :: String -> Object -> Maybe *\n\t     *\n\t     *      //  getStateCode :: Maybe String -> Maybe String\n\t     *      var getStateCode = R.pipeK(\n\t     *        parseJson,\n\t     *        get('user'),\n\t     *        get('address'),\n\t     *        get('state'),\n\t     *        R.compose(Maybe.of, R.toUpper)\n\t     *      );\n\t     *\n\t     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n\t     *      //=> Just('NY')\n\t     *      getStateCode(Maybe.of('[Invalid JSON]'));\n\t     *      //=> Nothing()\n\t     */\n\t    var pipeK = function pipeK() {\n\t        return composeK.apply(this, reverse(arguments));\n\t    };\n\t\n\t    /**\n\t     * Returns the string representation of the given value. `eval`'ing the output\n\t     * should result in a value equivalent to the input value. Many of the built-in\n\t     * `toString` methods do not satisfy this requirement.\n\t     *\n\t     * If the given value is an `[object Object]` with a `toString` method other\n\t     * than `Object.prototype.toString`, this method is invoked with no arguments\n\t     * to produce the return value. This means user-defined constructor functions\n\t     * can provide a suitable `toString` method. For example:\n\t     *\n\t     *     function Point(x, y) {\n\t     *       this.x = x;\n\t     *       this.y = y;\n\t     *     }\n\t     *\n\t     *     Point.prototype.toString = function() {\n\t     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n\t     *     };\n\t     *\n\t     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category String\n\t     * @sig * -> String\n\t     * @param {*} val\n\t     * @return {String}\n\t     * @example\n\t     *\n\t     *      R.toString(42); //=> '42'\n\t     *      R.toString('abc'); //=> '\"abc\"'\n\t     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n\t     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n\t     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n\t     */\n\t    var toString = _curry1(function toString(val) {\n\t        return _toString(val, []);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing only one copy of each element in the original\n\t     * list, based upon the value returned by applying the supplied function to\n\t     * each list element. Prefers the first item if the supplied function produces\n\t     * the same value on two items. `R.equals` is used for comparison.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig (a -> b) -> [a] -> [a]\n\t     * @param {Function} fn A function used to produce a value to use during comparisons.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of unique items.\n\t     * @example\n\t     *\n\t     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n\t     */\n\t    /* globals Set */\n\t    // distinguishing between +0 and -0 is not supported by Set\n\t    /* falls through */\n\t    // these types can all utilise Set\n\t    // prevent scan for null by tracking as a boolean\n\t    /* falls through */\n\t    // scan through all previously applied items\n\t    var uniqBy = _curry2(/* globals Set */\n\t    typeof Set === 'undefined' ? function uniqBy(fn, list) {\n\t        var idx = 0;\n\t        var applied = [];\n\t        var result = [];\n\t        var appliedItem, item;\n\t        while (idx < list.length) {\n\t            item = list[idx];\n\t            appliedItem = fn(item);\n\t            if (!_contains(appliedItem, applied)) {\n\t                result.push(item);\n\t                applied.push(appliedItem);\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    } : function uniqBySet(fn, list) {\n\t        var set = new Set();\n\t        var applied = [];\n\t        var prevSetSize = 0;\n\t        var result = [];\n\t        var nullExists = false;\n\t        var negZeroExists = false;\n\t        var idx = 0;\n\t        var appliedItem, item, newSetSize;\n\t        while (idx < list.length) {\n\t            item = list[idx];\n\t            appliedItem = fn(item);\n\t            switch (typeof appliedItem) {\n\t            case 'number':\n\t                // distinguishing between +0 and -0 is not supported by Set\n\t                if (appliedItem === 0 && !negZeroExists && 1 / appliedItem === -Infinity) {\n\t                    negZeroExists = true;\n\t                    result.push(item);\n\t                    break;\n\t                }\n\t            /* falls through */\n\t            case 'string':\n\t            case 'boolean':\n\t            case 'function':\n\t            case 'undefined':\n\t                // these types can all utilise Set\n\t                set.add(appliedItem);\n\t                newSetSize = set.size;\n\t                if (newSetSize > prevSetSize) {\n\t                    result.push(item);\n\t                    prevSetSize = newSetSize;\n\t                }\n\t                break;\n\t            case 'object':\n\t                if (appliedItem === null) {\n\t                    if (!nullExists) {\n\t                        // prevent scan for null by tracking as a boolean\n\t                        nullExists = true;\n\t                        result.push(null);\n\t                    }\n\t                    break;\n\t                }\n\t            /* falls through */\n\t            default:\n\t                // scan through all previously applied items\n\t                if (!_contains(appliedItem, applied)) {\n\t                    applied.push(appliedItem);\n\t                    result.push(item);\n\t                }\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list without values in the first argument.\n\t     * `R.equals` is used to determine equality.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig [a] -> [a] -> [a]\n\t     * @param {Array} list1 The values to be removed from `list2`.\n\t     * @param {Array} list2 The array to remove values from.\n\t     * @return {Array} The new array without values in `list1`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n\t     */\n\t    var without = _curry2(function (xs, list) {\n\t        return reject(flip(_contains)(xs), list);\n\t    });\n\t\n\t    /**\n\t     * Takes a function `f` and returns a function `g` such that:\n\t     *\n\t     *   - applying `g` to zero or more arguments will give __true__ if applying\n\t     *     the same arguments to `f` gives a logical __false__ value; and\n\t     *\n\t     *   - applying `g` to zero or more arguments will give __false__ if applying\n\t     *     the same arguments to `f` gives a logical __true__ value.\n\t     *\n\t     * `R.complement` will work on all other functors as well.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category Logic\n\t     * @sig (*... -> *) -> (*... -> Boolean)\n\t     * @param {Function} f\n\t     * @return {Function}\n\t     * @see R.not\n\t     * @example\n\t     *\n\t     *      var isEven = n => n % 2 === 0;\n\t     *      var isOdd = R.complement(isEven);\n\t     *      isOdd(21); //=> true\n\t     *      isOdd(42); //=> false\n\t     */\n\t    var complement = lift(not);\n\t\n\t    /**\n\t     * Turns a named method with a specified arity into a function that can be\n\t     * called directly supplied with arguments and a target object.\n\t     *\n\t     * The returned function is curried and accepts `arity + 1` parameters where\n\t     * the final parameter is the target object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n\t     * @param {Number} arity Number of arguments the returned function should take\n\t     *        before the target object.\n\t     * @param {String} method Name of the method to call.\n\t     * @return {Function} A new curried function.\n\t     * @example\n\t     *\n\t     *      var sliceFrom = R.invoker(1, 'slice');\n\t     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n\t     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n\t     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n\t     */\n\t    var invoker = _curry2(function invoker(arity, method) {\n\t        return curryN(arity + 1, function () {\n\t            var target = arguments[arity];\n\t            if (target != null && is(Function, target[method])) {\n\t                return target[method].apply(target, _slice(arguments, 0, arity));\n\t            }\n\t            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns a string made by inserting the `separator` between each element and\n\t     * concatenating all the elements into a single string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig String -> [a] -> String\n\t     * @param {Number|String} separator The string used to separate the elements.\n\t     * @param {Array} xs The elements to join into a string.\n\t     * @return {String} str The string made by concatenating `xs` with `separator`.\n\t     * @see R.split\n\t     * @example\n\t     *\n\t     *      var spacer = R.join(' ');\n\t     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n\t     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n\t     */\n\t    var join = invoker(1, 'join');\n\t\n\t    /**\n\t     * Creates a new function that, when invoked, caches the result of calling `fn`\n\t     * for a given argument set and returns the result. Subsequent calls to the\n\t     * memoized `fn` with the same argument set will not result in an additional\n\t     * call to `fn`; instead, the cached result for that set of arguments will be\n\t     * returned.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (*... -> a) -> (*... -> a)\n\t     * @param {Function} fn The function to memoize.\n\t     * @return {Function} Memoized version of `fn`.\n\t     * @example\n\t     *\n\t     *      var count = 0;\n\t     *      var factorial = R.memoize(n => {\n\t     *        count += 1;\n\t     *        return R.product(R.range(1, n + 1));\n\t     *      });\n\t     *      factorial(5); //=> 120\n\t     *      factorial(5); //=> 120\n\t     *      factorial(5); //=> 120\n\t     *      count; //=> 1\n\t     */\n\t    var memoize = _curry1(function memoize(fn) {\n\t        var cache = {};\n\t        return _arity(fn.length, function () {\n\t            var key = toString(arguments);\n\t            if (!_has(key, cache)) {\n\t                cache[key] = fn.apply(this, arguments);\n\t            }\n\t            return cache[key];\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Splits a string into an array of strings based on the given\n\t     * separator.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category String\n\t     * @sig (String | RegExp) -> String -> [String]\n\t     * @param {String|RegExp} sep The pattern.\n\t     * @param {String} str The string to separate into an array.\n\t     * @return {Array} The array of strings from `str` separated by `str`.\n\t     * @see R.join\n\t     * @example\n\t     *\n\t     *      var pathComponents = R.split('/');\n\t     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n\t     *\n\t     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n\t     */\n\t    var split = invoker(1, 'split');\n\t\n\t    /**\n\t     * Determines whether a given string matches a given regular expression.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category String\n\t     * @sig RegExp -> String -> Boolean\n\t     * @param {RegExp} pattern\n\t     * @param {String} str\n\t     * @return {Boolean}\n\t     * @see R.match\n\t     * @example\n\t     *\n\t     *      R.test(/^x/, 'xyz'); //=> true\n\t     *      R.test(/^y/, 'xyz'); //=> false\n\t     */\n\t    var test = _curry2(function test(pattern, str) {\n\t        if (!_isRegExp(pattern)) {\n\t            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n\t        }\n\t        return _cloneRegExp(pattern).test(str);\n\t    });\n\t\n\t    /**\n\t     * The lower case version of a string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category String\n\t     * @sig String -> String\n\t     * @param {String} str The string to lower case.\n\t     * @return {String} The lower case version of `str`.\n\t     * @see R.toUpper\n\t     * @example\n\t     *\n\t     *      R.toLower('XYZ'); //=> 'xyz'\n\t     */\n\t    var toLower = invoker(0, 'toLowerCase');\n\t\n\t    /**\n\t     * The upper case version of a string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category String\n\t     * @sig String -> String\n\t     * @param {String} str The string to upper case.\n\t     * @return {String} The upper case version of `str`.\n\t     * @see R.toLower\n\t     * @example\n\t     *\n\t     *      R.toUpper('abc'); //=> 'ABC'\n\t     */\n\t    var toUpper = invoker(0, 'toUpperCase');\n\t\n\t    /**\n\t     * Returns a new list containing only one copy of each element in the original\n\t     * list. `R.equals` is used to determine equality.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of unique items.\n\t     * @example\n\t     *\n\t     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n\t     *      R.uniq([1, '1']);     //=> [1, '1']\n\t     *      R.uniq([[42], [42]]); //=> [[42]]\n\t     */\n\t    var uniq = uniqBy(identity);\n\t\n\t    /**\n\t     * Returns the result of concatenating the given lists or strings.\n\t     *\n\t     * Dispatches to the `concat` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a] -> [a]\n\t     * @sig String -> String -> String\n\t     * @param {Array|String} a\n\t     * @param {Array|String} b\n\t     * @return {Array|String}\n\t     *\n\t     * @example\n\t     *\n\t     *      R.concat([], []); //=> []\n\t     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n\t     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n\t     */\n\t    var concat = flip(invoker(1, 'concat'));\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of those\n\t     * elements common to both lists.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The list of elements found in both `list1` and `list2`.\n\t     * @see R.intersectionWith\n\t     * @example\n\t     *\n\t     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n\t     */\n\t    var intersection = _curry2(function intersection(list1, list2) {\n\t        return uniq(_filter(flip(_contains)(list1), list2));\n\t    });\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n\t     * second list, but not both.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` or `list2`, but not both.\n\t     * @see R.symmetricDifferenceWith\n\t     * @example\n\t     *\n\t     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n\t     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n\t     */\n\t    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n\t        return concat(difference(list1, list2), difference(list2, list1));\n\t    });\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n\t     * second list, but not both. Duplication is determined according to the value\n\t     * returned by applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` or `list2`, but not both.\n\t     * @see R.symmetricDifference\n\t     * @example\n\t     *\n\t     *      var eqA = R.eqBy(R.prop('a'));\n\t     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n\t     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n\t     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n\t     */\n\t    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n\t        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n\t    });\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n\t     * of each list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} as The first list.\n\t     * @param {Array} bs The second list.\n\t     * @return {Array} The first and second lists concatenated, with\n\t     *         duplicates removed.\n\t     * @example\n\t     *\n\t     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n\t     */\n\t    var union = _curry2(compose(uniq, _concat));\n\t\n\t    var R = {\n\t        F: F,\n\t        T: T,\n\t        __: __,\n\t        add: add,\n\t        addIndex: addIndex,\n\t        adjust: adjust,\n\t        all: all,\n\t        allPass: allPass,\n\t        allUniq: allUniq,\n\t        always: always,\n\t        and: and,\n\t        any: any,\n\t        anyPass: anyPass,\n\t        ap: ap,\n\t        aperture: aperture,\n\t        append: append,\n\t        apply: apply,\n\t        assoc: assoc,\n\t        assocPath: assocPath,\n\t        binary: binary,\n\t        bind: bind,\n\t        both: both,\n\t        call: call,\n\t        chain: chain,\n\t        clone: clone,\n\t        commute: commute,\n\t        commuteMap: commuteMap,\n\t        comparator: comparator,\n\t        complement: complement,\n\t        compose: compose,\n\t        composeK: composeK,\n\t        composeP: composeP,\n\t        concat: concat,\n\t        cond: cond,\n\t        construct: construct,\n\t        constructN: constructN,\n\t        contains: contains,\n\t        converge: converge,\n\t        countBy: countBy,\n\t        curry: curry,\n\t        curryN: curryN,\n\t        dec: dec,\n\t        defaultTo: defaultTo,\n\t        difference: difference,\n\t        differenceWith: differenceWith,\n\t        dissoc: dissoc,\n\t        dissocPath: dissocPath,\n\t        divide: divide,\n\t        drop: drop,\n\t        dropLast: dropLast,\n\t        dropLastWhile: dropLastWhile,\n\t        dropRepeats: dropRepeats,\n\t        dropRepeatsWith: dropRepeatsWith,\n\t        dropWhile: dropWhile,\n\t        either: either,\n\t        empty: empty,\n\t        eqBy: eqBy,\n\t        eqProps: eqProps,\n\t        equals: equals,\n\t        evolve: evolve,\n\t        filter: filter,\n\t        find: find,\n\t        findIndex: findIndex,\n\t        findLast: findLast,\n\t        findLastIndex: findLastIndex,\n\t        flatten: flatten,\n\t        flip: flip,\n\t        forEach: forEach,\n\t        fromPairs: fromPairs,\n\t        groupBy: groupBy,\n\t        gt: gt,\n\t        gte: gte,\n\t        has: has,\n\t        hasIn: hasIn,\n\t        head: head,\n\t        identical: identical,\n\t        identity: identity,\n\t        ifElse: ifElse,\n\t        inc: inc,\n\t        indexBy: indexBy,\n\t        indexOf: indexOf,\n\t        init: init,\n\t        insert: insert,\n\t        insertAll: insertAll,\n\t        intersection: intersection,\n\t        intersectionWith: intersectionWith,\n\t        intersperse: intersperse,\n\t        into: into,\n\t        invert: invert,\n\t        invertObj: invertObj,\n\t        invoker: invoker,\n\t        is: is,\n\t        isArrayLike: isArrayLike,\n\t        isEmpty: isEmpty,\n\t        isNil: isNil,\n\t        join: join,\n\t        juxt: juxt,\n\t        keys: keys,\n\t        keysIn: keysIn,\n\t        last: last,\n\t        lastIndexOf: lastIndexOf,\n\t        length: length,\n\t        lens: lens,\n\t        lensIndex: lensIndex,\n\t        lensPath: lensPath,\n\t        lensProp: lensProp,\n\t        lift: lift,\n\t        liftN: liftN,\n\t        lt: lt,\n\t        lte: lte,\n\t        map: map,\n\t        mapAccum: mapAccum,\n\t        mapAccumRight: mapAccumRight,\n\t        mapObjIndexed: mapObjIndexed,\n\t        match: match,\n\t        mathMod: mathMod,\n\t        max: max,\n\t        maxBy: maxBy,\n\t        mean: mean,\n\t        median: median,\n\t        memoize: memoize,\n\t        merge: merge,\n\t        mergeAll: mergeAll,\n\t        mergeWith: mergeWith,\n\t        mergeWithKey: mergeWithKey,\n\t        min: min,\n\t        minBy: minBy,\n\t        modulo: modulo,\n\t        multiply: multiply,\n\t        nAry: nAry,\n\t        negate: negate,\n\t        none: none,\n\t        not: not,\n\t        nth: nth,\n\t        nthArg: nthArg,\n\t        objOf: objOf,\n\t        of: of,\n\t        omit: omit,\n\t        once: once,\n\t        or: or,\n\t        over: over,\n\t        pair: pair,\n\t        partial: partial,\n\t        partialRight: partialRight,\n\t        partition: partition,\n\t        path: path,\n\t        pathEq: pathEq,\n\t        pathOr: pathOr,\n\t        pathSatisfies: pathSatisfies,\n\t        pick: pick,\n\t        pickAll: pickAll,\n\t        pickBy: pickBy,\n\t        pipe: pipe,\n\t        pipeK: pipeK,\n\t        pipeP: pipeP,\n\t        pluck: pluck,\n\t        prepend: prepend,\n\t        product: product,\n\t        project: project,\n\t        prop: prop,\n\t        propEq: propEq,\n\t        propIs: propIs,\n\t        propOr: propOr,\n\t        propSatisfies: propSatisfies,\n\t        props: props,\n\t        range: range,\n\t        reduce: reduce,\n\t        reduceRight: reduceRight,\n\t        reduced: reduced,\n\t        reject: reject,\n\t        remove: remove,\n\t        repeat: repeat,\n\t        replace: replace,\n\t        reverse: reverse,\n\t        scan: scan,\n\t        sequence: sequence,\n\t        set: set,\n\t        slice: slice,\n\t        sort: sort,\n\t        sortBy: sortBy,\n\t        split: split,\n\t        splitAt: splitAt,\n\t        splitEvery: splitEvery,\n\t        splitWhen: splitWhen,\n\t        subtract: subtract,\n\t        sum: sum,\n\t        symmetricDifference: symmetricDifference,\n\t        symmetricDifferenceWith: symmetricDifferenceWith,\n\t        tail: tail,\n\t        take: take,\n\t        takeLast: takeLast,\n\t        takeLastWhile: takeLastWhile,\n\t        takeWhile: takeWhile,\n\t        tap: tap,\n\t        test: test,\n\t        times: times,\n\t        toLower: toLower,\n\t        toPairs: toPairs,\n\t        toPairsIn: toPairsIn,\n\t        toString: toString,\n\t        toUpper: toUpper,\n\t        transduce: transduce,\n\t        transpose: transpose,\n\t        traverse: traverse,\n\t        trim: trim,\n\t        type: type,\n\t        unapply: unapply,\n\t        unary: unary,\n\t        uncurryN: uncurryN,\n\t        unfold: unfold,\n\t        union: union,\n\t        unionWith: unionWith,\n\t        uniq: uniq,\n\t        uniqBy: uniqBy,\n\t        uniqWith: uniqWith,\n\t        unless: unless,\n\t        unnest: unnest,\n\t        update: update,\n\t        useWith: useWith,\n\t        values: values,\n\t        valuesIn: valuesIn,\n\t        view: view,\n\t        when: when,\n\t        where: where,\n\t        whereEq: whereEq,\n\t        without: without,\n\t        wrap: wrap,\n\t        xprod: xprod,\n\t        zip: zip,\n\t        zipObj: zipObj,\n\t        zipWith: zipWith\n\t    };\n\t  /* eslint-env amd */\n\t\n\t  /* TEST_ENTRY_POINT */\n\t\n\t  if (true) {\n\t    module.exports = R;\n\t  } else if (typeof define === 'function' && define.amd) {\n\t    define(function() { return R; });\n\t  } else {\n\t    this.R = R;\n\t  }\n\t\n\t}.call(this));\n\n\n/***/ },\n\n/***/ 148:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*! Kefir.js v3.2.1\n\t *  https://github.com/rpominov/kefir\n\t */\n\t\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.Kefir = global.Kefir || {})));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  function createObj(proto) {\n\t    var F = function () {};\n\t    F.prototype = proto;\n\t    return new F();\n\t  }\n\t\n\t  function extend(target /*, mixin1, mixin2...*/) {\n\t    var length = arguments.length,\n\t        i = undefined,\n\t        prop = undefined;\n\t    for (i = 1; i < length; i++) {\n\t      for (prop in arguments[i]) {\n\t        target[prop] = arguments[i][prop];\n\t      }\n\t    }\n\t    return target;\n\t  }\n\t\n\t  function inherit(Child, Parent /*, mixin1, mixin2...*/) {\n\t    var length = arguments.length,\n\t        i = undefined;\n\t    Child.prototype = createObj(Parent.prototype);\n\t    Child.prototype.constructor = Child;\n\t    for (i = 2; i < length; i++) {\n\t      extend(Child.prototype, arguments[i]);\n\t    }\n\t    return Child;\n\t  }\n\t\n\t  var NOTHING = ['<nothing>'];\n\t  var END = 'end';\n\t  var VALUE = 'value';\n\t  var ERROR = 'error';\n\t  var ANY = 'any';\n\t\n\t  function concat(a, b) {\n\t    var result = undefined,\n\t        length = undefined,\n\t        i = undefined,\n\t        j = undefined;\n\t    if (a.length === 0) {\n\t      return b;\n\t    }\n\t    if (b.length === 0) {\n\t      return a;\n\t    }\n\t    j = 0;\n\t    result = new Array(a.length + b.length);\n\t    length = a.length;\n\t    for (i = 0; i < length; i++, j++) {\n\t      result[j] = a[i];\n\t    }\n\t    length = b.length;\n\t    for (i = 0; i < length; i++, j++) {\n\t      result[j] = b[i];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  function find(arr, value) {\n\t    var length = arr.length,\n\t        i = undefined;\n\t    for (i = 0; i < length; i++) {\n\t      if (arr[i] === value) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  function findByPred(arr, pred) {\n\t    var length = arr.length,\n\t        i = undefined;\n\t    for (i = 0; i < length; i++) {\n\t      if (pred(arr[i])) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  function cloneArray(input) {\n\t    var length = input.length,\n\t        result = new Array(length),\n\t        i = undefined;\n\t    for (i = 0; i < length; i++) {\n\t      result[i] = input[i];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  function remove(input, index) {\n\t    var length = input.length,\n\t        result = undefined,\n\t        i = undefined,\n\t        j = undefined;\n\t    if (index >= 0 && index < length) {\n\t      if (length === 1) {\n\t        return [];\n\t      } else {\n\t        result = new Array(length - 1);\n\t        for (i = 0, j = 0; i < length; i++) {\n\t          if (i !== index) {\n\t            result[j] = input[i];\n\t            j++;\n\t          }\n\t        }\n\t        return result;\n\t      }\n\t    } else {\n\t      return input;\n\t    }\n\t  }\n\t\n\t  function map(input, fn) {\n\t    var length = input.length,\n\t        result = new Array(length),\n\t        i = undefined;\n\t    for (i = 0; i < length; i++) {\n\t      result[i] = fn(input[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  function forEach(arr, fn) {\n\t    var length = arr.length,\n\t        i = undefined;\n\t    for (i = 0; i < length; i++) {\n\t      fn(arr[i]);\n\t    }\n\t  }\n\t\n\t  function fillArray(arr, value) {\n\t    var length = arr.length,\n\t        i = undefined;\n\t    for (i = 0; i < length; i++) {\n\t      arr[i] = value;\n\t    }\n\t  }\n\t\n\t  function contains(arr, value) {\n\t    return find(arr, value) !== -1;\n\t  }\n\t\n\t  function slide(cur, next, max) {\n\t    var length = Math.min(max, cur.length + 1),\n\t        offset = cur.length - length + 1,\n\t        result = new Array(length),\n\t        i = undefined;\n\t    for (i = offset; i < length; i++) {\n\t      result[i - offset] = cur[i];\n\t    }\n\t    result[length - 1] = next;\n\t    return result;\n\t  }\n\t\n\t  function callSubscriber(type, fn, event) {\n\t    if (type === ANY) {\n\t      fn(event);\n\t    } else if (type === event.type) {\n\t      if (type === VALUE || type === ERROR) {\n\t        fn(event.value);\n\t      } else {\n\t        fn();\n\t      }\n\t    }\n\t  }\n\t\n\t  function Dispatcher() {\n\t    this._items = [];\n\t    this._inLoop = 0;\n\t    this._removedItems = null;\n\t  }\n\t\n\t  extend(Dispatcher.prototype, {\n\t    add: function (type, fn) {\n\t      this._items = concat(this._items, [{ type: type, fn: fn }]);\n\t      return this._items.length;\n\t    },\n\t    remove: function (type, fn) {\n\t      var index = findByPred(this._items, function (x) {\n\t        return x.type === type && x.fn === fn;\n\t      });\n\t\n\t      // if we're currently in a notification loop,\n\t      // remember this subscriber was removed\n\t      if (this._inLoop !== 0 && index !== -1) {\n\t        if (this._removedItems === null) {\n\t          this._removedItems = [];\n\t        }\n\t        this._removedItems.push(this._items[index]);\n\t      }\n\t\n\t      this._items = remove(this._items, index);\n\t      return this._items.length;\n\t    },\n\t    dispatch: function (event) {\n\t      this._inLoop++;\n\t      for (var i = 0, items = this._items; i < items.length; i++) {\n\t\n\t        // cleanup was called\n\t        if (this._items === null) {\n\t          break;\n\t        }\n\t\n\t        // this subscriber was removed\n\t        if (this._removedItems !== null && contains(this._removedItems, items[i])) {\n\t          continue;\n\t        }\n\t\n\t        callSubscriber(items[i].type, items[i].fn, event);\n\t      }\n\t      this._inLoop--;\n\t      if (this._inLoop === 0) {\n\t        this._removedItems = null;\n\t      }\n\t    },\n\t    cleanup: function () {\n\t      this._items = null;\n\t    }\n\t  });\n\t\n\t  function Observable() {\n\t    this._dispatcher = new Dispatcher();\n\t    this._active = false;\n\t    this._alive = true;\n\t    this._activating = false;\n\t    this._logHandlers = null;\n\t  }\n\t\n\t  extend(Observable.prototype, {\n\t\n\t    _name: 'observable',\n\t\n\t    _onActivation: function () {},\n\t    _onDeactivation: function () {},\n\t    _setActive: function (active) {\n\t      if (this._active !== active) {\n\t        this._active = active;\n\t        if (active) {\n\t          this._activating = true;\n\t          this._onActivation();\n\t          this._activating = false;\n\t        } else {\n\t          this._onDeactivation();\n\t        }\n\t      }\n\t    },\n\t    _clear: function () {\n\t      this._setActive(false);\n\t      this._dispatcher.cleanup();\n\t      this._dispatcher = null;\n\t      this._logHandlers = null;\n\t    },\n\t    _emit: function (type, x) {\n\t      switch (type) {\n\t        case VALUE:\n\t          return this._emitValue(x);\n\t        case ERROR:\n\t          return this._emitError(x);\n\t        case END:\n\t          return this._emitEnd();\n\t      }\n\t    },\n\t    _emitValue: function (value) {\n\t      if (this._alive) {\n\t        this._dispatcher.dispatch({ type: VALUE, value: value });\n\t      }\n\t    },\n\t    _emitError: function (value) {\n\t      if (this._alive) {\n\t        this._dispatcher.dispatch({ type: ERROR, value: value });\n\t      }\n\t    },\n\t    _emitEnd: function () {\n\t      if (this._alive) {\n\t        this._alive = false;\n\t        this._dispatcher.dispatch({ type: END });\n\t        this._clear();\n\t      }\n\t    },\n\t    _on: function (type, fn) {\n\t      if (this._alive) {\n\t        this._dispatcher.add(type, fn);\n\t        this._setActive(true);\n\t      } else {\n\t        callSubscriber(type, fn, { type: END });\n\t      }\n\t      return this;\n\t    },\n\t    _off: function (type, fn) {\n\t      if (this._alive) {\n\t        var count = this._dispatcher.remove(type, fn);\n\t        if (count === 0) {\n\t          this._setActive(false);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    onValue: function (fn) {\n\t      return this._on(VALUE, fn);\n\t    },\n\t    onError: function (fn) {\n\t      return this._on(ERROR, fn);\n\t    },\n\t    onEnd: function (fn) {\n\t      return this._on(END, fn);\n\t    },\n\t    onAny: function (fn) {\n\t      return this._on(ANY, fn);\n\t    },\n\t    offValue: function (fn) {\n\t      return this._off(VALUE, fn);\n\t    },\n\t    offError: function (fn) {\n\t      return this._off(ERROR, fn);\n\t    },\n\t    offEnd: function (fn) {\n\t      return this._off(END, fn);\n\t    },\n\t    offAny: function (fn) {\n\t      return this._off(ANY, fn);\n\t    },\n\t\n\t\n\t    // A and B must be subclasses of Stream and Property (order doesn't matter)\n\t    _ofSameType: function (A, B) {\n\t      return A.prototype.getType() === this.getType() ? A : B;\n\t    },\n\t    setName: function (sourceObs /* optional */, selfName) {\n\t      this._name = selfName ? sourceObs._name + '.' + selfName : sourceObs;\n\t      return this;\n\t    },\n\t    log: function () {\n\t      var name = arguments.length <= 0 || arguments[0] === undefined ? this.toString() : arguments[0];\n\t\n\t\n\t      var isCurrent = undefined;\n\t      var handler = function (event) {\n\t        var type = '<' + event.type + (isCurrent ? ':current' : '') + '>';\n\t        if (event.type === END) {\n\t          console.log(name, type);\n\t        } else {\n\t          console.log(name, type, event.value);\n\t        }\n\t      };\n\t\n\t      if (this._alive) {\n\t        if (!this._logHandlers) {\n\t          this._logHandlers = [];\n\t        }\n\t        this._logHandlers.push({ name: name, handler: handler });\n\t      }\n\t\n\t      isCurrent = true;\n\t      this.onAny(handler);\n\t      isCurrent = false;\n\t\n\t      return this;\n\t    },\n\t    offLog: function () {\n\t      var name = arguments.length <= 0 || arguments[0] === undefined ? this.toString() : arguments[0];\n\t\n\t\n\t      if (this._logHandlers) {\n\t        var handlerIndex = findByPred(this._logHandlers, function (obj) {\n\t          return obj.name === name;\n\t        });\n\t        if (handlerIndex !== -1) {\n\t          this.offAny(this._logHandlers[handlerIndex].handler);\n\t          this._logHandlers.splice(handlerIndex, 1);\n\t        }\n\t      }\n\t\n\t      return this;\n\t    }\n\t  });\n\t\n\t  // extend() can't handle `toString` in IE8\n\t  Observable.prototype.toString = function () {\n\t    return '[' + this._name + ']';\n\t  };\n\t\n\t  function Stream() {\n\t    Observable.call(this);\n\t  }\n\t\n\t  inherit(Stream, Observable, {\n\t\n\t    _name: 'stream',\n\t\n\t    getType: function () {\n\t      return 'stream';\n\t    }\n\t  });\n\t\n\t  function Property() {\n\t    Observable.call(this);\n\t    this._currentEvent = null;\n\t  }\n\t\n\t  inherit(Property, Observable, {\n\t\n\t    _name: 'property',\n\t\n\t    _emitValue: function (value) {\n\t      if (this._alive) {\n\t        this._currentEvent = { type: VALUE, value: value };\n\t        if (!this._activating) {\n\t          this._dispatcher.dispatch({ type: VALUE, value: value });\n\t        }\n\t      }\n\t    },\n\t    _emitError: function (value) {\n\t      if (this._alive) {\n\t        this._currentEvent = { type: ERROR, value: value };\n\t        if (!this._activating) {\n\t          this._dispatcher.dispatch({ type: ERROR, value: value });\n\t        }\n\t      }\n\t    },\n\t    _emitEnd: function () {\n\t      if (this._alive) {\n\t        this._alive = false;\n\t        if (!this._activating) {\n\t          this._dispatcher.dispatch({ type: END });\n\t        }\n\t        this._clear();\n\t      }\n\t    },\n\t    _on: function (type, fn) {\n\t      if (this._alive) {\n\t        this._dispatcher.add(type, fn);\n\t        this._setActive(true);\n\t      }\n\t      if (this._currentEvent !== null) {\n\t        callSubscriber(type, fn, this._currentEvent);\n\t      }\n\t      if (!this._alive) {\n\t        callSubscriber(type, fn, { type: END });\n\t      }\n\t      return this;\n\t    },\n\t    getType: function () {\n\t      return 'property';\n\t    }\n\t  });\n\t\n\t  var neverS = new Stream();\n\t  neverS._emitEnd();\n\t  neverS._name = 'never';\n\t\n\t  function never() {\n\t    return neverS;\n\t  }\n\t\n\t  function timeBased(mixin) {\n\t\n\t    function AnonymousStream(wait, options) {\n\t      var _this = this;\n\t\n\t      Stream.call(this);\n\t      this._wait = wait;\n\t      this._intervalId = null;\n\t      this._$onTick = function () {\n\t        return _this._onTick();\n\t      };\n\t      this._init(options);\n\t    }\n\t\n\t    inherit(AnonymousStream, Stream, {\n\t      _init: function () {},\n\t      _free: function () {},\n\t      _onTick: function () {},\n\t      _onActivation: function () {\n\t        this._intervalId = setInterval(this._$onTick, this._wait);\n\t      },\n\t      _onDeactivation: function () {\n\t        if (this._intervalId !== null) {\n\t          clearInterval(this._intervalId);\n\t          this._intervalId = null;\n\t        }\n\t      },\n\t      _clear: function () {\n\t        Stream.prototype._clear.call(this);\n\t        this._$onTick = null;\n\t        this._free();\n\t      }\n\t    }, mixin);\n\t\n\t    return AnonymousStream;\n\t  }\n\t\n\t  var S = timeBased({\n\t\n\t    _name: 'later',\n\t\n\t    _init: function (_ref) {\n\t      var x = _ref.x;\n\t\n\t      this._x = x;\n\t    },\n\t    _free: function () {\n\t      this._x = null;\n\t    },\n\t    _onTick: function () {\n\t      this._emitValue(this._x);\n\t      this._emitEnd();\n\t    }\n\t  });\n\t\n\t  function later(wait, x) {\n\t    return new S(wait, { x: x });\n\t  }\n\t\n\t  var S$1 = timeBased({\n\t\n\t    _name: 'interval',\n\t\n\t    _init: function (_ref) {\n\t      var x = _ref.x;\n\t\n\t      this._x = x;\n\t    },\n\t    _free: function () {\n\t      this._x = null;\n\t    },\n\t    _onTick: function () {\n\t      this._emitValue(this._x);\n\t    }\n\t  });\n\t\n\t  function interval(wait, x) {\n\t    return new S$1(wait, { x: x });\n\t  }\n\t\n\t  var S$2 = timeBased({\n\t\n\t    _name: 'sequentially',\n\t\n\t    _init: function (_ref) {\n\t      var xs = _ref.xs;\n\t\n\t      this._xs = cloneArray(xs);\n\t    },\n\t    _free: function () {\n\t      this._xs = null;\n\t    },\n\t    _onTick: function () {\n\t      if (this._xs.length === 1) {\n\t        this._emitValue(this._xs[0]);\n\t        this._emitEnd();\n\t      } else {\n\t        this._emitValue(this._xs.shift());\n\t      }\n\t    }\n\t  });\n\t\n\t  function sequentially(wait, xs) {\n\t    return xs.length === 0 ? never() : new S$2(wait, { xs: xs });\n\t  }\n\t\n\t  var S$3 = timeBased({\n\t\n\t    _name: 'fromPoll',\n\t\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _onTick: function () {\n\t      var fn = this._fn;\n\t      this._emitValue(fn());\n\t    }\n\t  });\n\t\n\t  function fromPoll(wait, fn) {\n\t    return new S$3(wait, { fn: fn });\n\t  }\n\t\n\t  function emitter(obs) {\n\t\n\t    function value(x) {\n\t      obs._emitValue(x);\n\t      return obs._active;\n\t    }\n\t\n\t    function error(x) {\n\t      obs._emitError(x);\n\t      return obs._active;\n\t    }\n\t\n\t    function end() {\n\t      obs._emitEnd();\n\t      return obs._active;\n\t    }\n\t\n\t    function event(e) {\n\t      obs._emit(e.type, e.value);\n\t      return obs._active;\n\t    }\n\t\n\t    return { value: value, error: error, end: end, event: event, emit: value, emitEvent: event };\n\t  }\n\t\n\t  var S$4 = timeBased({\n\t\n\t    _name: 'withInterval',\n\t\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t      this._emitter = emitter(this);\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t      this._emitter = null;\n\t    },\n\t    _onTick: function () {\n\t      var fn = this._fn;\n\t      fn(this._emitter);\n\t    }\n\t  });\n\t\n\t  function withInterval(wait, fn) {\n\t    return new S$4(wait, { fn: fn });\n\t  }\n\t\n\t  function S$5(fn) {\n\t    Stream.call(this);\n\t    this._fn = fn;\n\t    this._unsubscribe = null;\n\t  }\n\t\n\t  inherit(S$5, Stream, {\n\t\n\t    _name: 'stream',\n\t\n\t    _onActivation: function () {\n\t      var fn = this._fn;\n\t      var unsubscribe = fn(emitter(this));\n\t      this._unsubscribe = typeof unsubscribe === 'function' ? unsubscribe : null;\n\t\n\t      // fix https://github.com/rpominov/kefir/issues/35\n\t      if (!this._active) {\n\t        this._callUnsubscribe();\n\t      }\n\t    },\n\t    _callUnsubscribe: function () {\n\t      if (this._unsubscribe !== null) {\n\t        this._unsubscribe();\n\t        this._unsubscribe = null;\n\t      }\n\t    },\n\t    _onDeactivation: function () {\n\t      this._callUnsubscribe();\n\t    },\n\t    _clear: function () {\n\t      Stream.prototype._clear.call(this);\n\t      this._fn = null;\n\t    }\n\t  });\n\t\n\t  function stream(fn) {\n\t    return new S$5(fn);\n\t  }\n\t\n\t  function fromCallback(callbackConsumer) {\n\t\n\t    var called = false;\n\t\n\t    return stream(function (emitter) {\n\t\n\t      if (!called) {\n\t        callbackConsumer(function (x) {\n\t          emitter.emit(x);\n\t          emitter.end();\n\t        });\n\t        called = true;\n\t      }\n\t    }).setName('fromCallback');\n\t  }\n\t\n\t  function fromNodeCallback(callbackConsumer) {\n\t\n\t    var called = false;\n\t\n\t    return stream(function (emitter) {\n\t\n\t      if (!called) {\n\t        callbackConsumer(function (error, x) {\n\t          if (error) {\n\t            emitter.error(error);\n\t          } else {\n\t            emitter.emit(x);\n\t          }\n\t          emitter.end();\n\t        });\n\t        called = true;\n\t      }\n\t    }).setName('fromNodeCallback');\n\t  }\n\t\n\t  function spread(fn, length) {\n\t    switch (length) {\n\t      case 0:\n\t        return function () {\n\t          return fn();\n\t        };\n\t      case 1:\n\t        return function (a) {\n\t          return fn(a[0]);\n\t        };\n\t      case 2:\n\t        return function (a) {\n\t          return fn(a[0], a[1]);\n\t        };\n\t      case 3:\n\t        return function (a) {\n\t          return fn(a[0], a[1], a[2]);\n\t        };\n\t      case 4:\n\t        return function (a) {\n\t          return fn(a[0], a[1], a[2], a[3]);\n\t        };\n\t      default:\n\t        return function (a) {\n\t          return fn.apply(null, a);\n\t        };\n\t    }\n\t  }\n\t\n\t  function apply(fn, c, a) {\n\t    var aLength = a ? a.length : 0;\n\t    if (c == null) {\n\t      switch (aLength) {\n\t        case 0:\n\t          return fn();\n\t        case 1:\n\t          return fn(a[0]);\n\t        case 2:\n\t          return fn(a[0], a[1]);\n\t        case 3:\n\t          return fn(a[0], a[1], a[2]);\n\t        case 4:\n\t          return fn(a[0], a[1], a[2], a[3]);\n\t        default:\n\t          return fn.apply(null, a);\n\t      }\n\t    } else {\n\t      switch (aLength) {\n\t        case 0:\n\t          return fn.call(c);\n\t        default:\n\t          return fn.apply(c, a);\n\t      }\n\t    }\n\t  }\n\t\n\t  function fromSubUnsub(sub, unsub, transformer /* Function | falsey */) {\n\t    return stream(function (emitter) {\n\t\n\t      var handler = transformer ? function () {\n\t        emitter.emit(apply(transformer, this, arguments));\n\t      } : function (x) {\n\t        emitter.emit(x);\n\t      };\n\t\n\t      sub(handler);\n\t      return function () {\n\t        return unsub(handler);\n\t      };\n\t    }).setName('fromSubUnsub');\n\t  }\n\t\n\t  var pairs = [['addEventListener', 'removeEventListener'], ['addListener', 'removeListener'], ['on', 'off']];\n\t\n\t  function fromEvents(target, eventName, transformer) {\n\t    var sub = undefined,\n\t        unsub = undefined;\n\t\n\t    for (var i = 0; i < pairs.length; i++) {\n\t      if (typeof target[pairs[i][0]] === 'function' && typeof target[pairs[i][1]] === 'function') {\n\t        sub = pairs[i][0];\n\t        unsub = pairs[i][1];\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (sub === undefined) {\n\t      throw new Error('target don\\'t support any of ' + 'addEventListener/removeEventListener, addListener/removeListener, on/off method pair');\n\t    }\n\t\n\t    return fromSubUnsub(function (handler) {\n\t      return target[sub](eventName, handler);\n\t    }, function (handler) {\n\t      return target[unsub](eventName, handler);\n\t    }, transformer).setName('fromEvents');\n\t  }\n\t\n\t  // HACK:\n\t  //   We don't call parent Class constructor, but instead putting all necessary\n\t  //   properties into prototype to simulate ended Property\n\t  //   (see Propperty and Observable classes).\n\t\n\t  function P(value) {\n\t    this._currentEvent = { type: 'value', value: value, current: true };\n\t  }\n\t\n\t  inherit(P, Property, {\n\t    _name: 'constant',\n\t    _active: false,\n\t    _activating: false,\n\t    _alive: false,\n\t    _dispatcher: null,\n\t    _logHandlers: null\n\t  });\n\t\n\t  function constant(x) {\n\t    return new P(x);\n\t  }\n\t\n\t  // HACK:\n\t  //   We don't call parent Class constructor, but instead putting all necessary\n\t  //   properties into prototype to simulate ended Property\n\t  //   (see Propperty and Observable classes).\n\t\n\t  function P$1(value) {\n\t    this._currentEvent = { type: 'error', value: value, current: true };\n\t  }\n\t\n\t  inherit(P$1, Property, {\n\t    _name: 'constantError',\n\t    _active: false,\n\t    _activating: false,\n\t    _alive: false,\n\t    _dispatcher: null,\n\t    _logHandlers: null\n\t  });\n\t\n\t  function constantError(x) {\n\t    return new P$1(x);\n\t  }\n\t\n\t  function createConstructor(BaseClass, name) {\n\t    return function AnonymousObservable(source, options) {\n\t      var _this = this;\n\t\n\t      BaseClass.call(this);\n\t      this._source = source;\n\t      this._name = source._name + '.' + name;\n\t      this._init(options);\n\t      this._$handleAny = function (event) {\n\t        return _this._handleAny(event);\n\t      };\n\t    };\n\t  }\n\t\n\t  function createClassMethods(BaseClass) {\n\t    return {\n\t      _init: function () {},\n\t      _free: function () {},\n\t      _handleValue: function (x) {\n\t        this._emitValue(x);\n\t      },\n\t      _handleError: function (x) {\n\t        this._emitError(x);\n\t      },\n\t      _handleEnd: function () {\n\t        this._emitEnd();\n\t      },\n\t      _handleAny: function (event) {\n\t        switch (event.type) {\n\t          case VALUE:\n\t            return this._handleValue(event.value);\n\t          case ERROR:\n\t            return this._handleError(event.value);\n\t          case END:\n\t            return this._handleEnd();\n\t        }\n\t      },\n\t      _onActivation: function () {\n\t        this._source.onAny(this._$handleAny);\n\t      },\n\t      _onDeactivation: function () {\n\t        this._source.offAny(this._$handleAny);\n\t      },\n\t      _clear: function () {\n\t        BaseClass.prototype._clear.call(this);\n\t        this._source = null;\n\t        this._$handleAny = null;\n\t        this._free();\n\t      }\n\t    };\n\t  }\n\t\n\t  function createStream(name, mixin) {\n\t    var S = createConstructor(Stream, name);\n\t    inherit(S, Stream, createClassMethods(Stream), mixin);\n\t    return S;\n\t  }\n\t\n\t  function createProperty(name, mixin) {\n\t    var P = createConstructor(Property, name);\n\t    inherit(P, Property, createClassMethods(Property), mixin);\n\t    return P;\n\t  }\n\t\n\t  var P$2 = createProperty('toProperty', {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._getInitialCurrent = fn;\n\t    },\n\t    _onActivation: function () {\n\t      if (this._getInitialCurrent !== null) {\n\t        var getInitial = this._getInitialCurrent;\n\t        this._emitValue(getInitial());\n\t      }\n\t      this._source.onAny(this._$handleAny); // copied from patterns/one-source\n\t    }\n\t  });\n\t\n\t  function toProperty(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\t\n\t    if (fn !== null && typeof fn !== 'function') {\n\t      throw new Error('You should call toProperty() with a function or no arguments.');\n\t    }\n\t    return new P$2(obs, { fn: fn });\n\t  }\n\t\n\t  var S$6 = createStream('changes', {\n\t    _handleValue: function (x) {\n\t      if (!this._activating) {\n\t        this._emitValue(x);\n\t      }\n\t    },\n\t    _handleError: function (x) {\n\t      if (!this._activating) {\n\t        this._emitError(x);\n\t      }\n\t    }\n\t  });\n\t\n\t  function changes(obs) {\n\t    return new S$6(obs);\n\t  }\n\t\n\t  function fromPromise(promise) {\n\t\n\t    var called = false;\n\t\n\t    var result = stream(function (emitter) {\n\t      if (!called) {\n\t        var onValue = function (x) {\n\t          emitter.emit(x);\n\t          emitter.end();\n\t        };\n\t        var onError = function (x) {\n\t          emitter.error(x);\n\t          emitter.end();\n\t        };\n\t        var _promise = promise.then(onValue, onError);\n\t\n\t        // prevent libraries like 'Q' or 'when' from swallowing exceptions\n\t        if (_promise && typeof _promise.done === 'function') {\n\t          _promise.done();\n\t        }\n\t\n\t        called = true;\n\t      }\n\t    });\n\t\n\t    return toProperty(result, null).setName('fromPromise');\n\t  }\n\t\n\t  function getGlodalPromise() {\n\t    if (typeof Promise === 'function') {\n\t      return Promise;\n\t    } else {\n\t      throw new Error('There isn\\'t default Promise, use shim or parameter');\n\t    }\n\t  }\n\t\n\t  function toPromise (obs) {\n\t    var Promise = arguments.length <= 1 || arguments[1] === undefined ? getGlodalPromise() : arguments[1];\n\t\n\t    var last = null;\n\t    return new Promise(function (resolve, reject) {\n\t      obs.onAny(function (event) {\n\t        if (event.type === END && last !== null) {\n\t          (last.type === VALUE ? resolve : reject)(last.value);\n\t          last = null;\n\t        } else {\n\t          last = event;\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  function symbol_ (key) {\n\t    if (typeof Symbol !== 'undefined' && Symbol[key]) {\n\t      return Symbol[key];\n\t    } else if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n\t      return Symbol.for(key);\n\t    } else {\n\t      return '@@' + key;\n\t    }\n\t  }\n\t\n\t  var symbol = symbol_('observable');\n\t\n\t  function fromESObservable(_observable) {\n\t    var observable = _observable[symbol] ? _observable[symbol]() : _observable;\n\t    return stream(function (emitter) {\n\t      var unsub = observable.subscribe({\n\t        error: function (error) {\n\t          emitter.error(error);\n\t          emitter.end();\n\t        },\n\t        next: function (value) {\n\t          emitter.emit(value);\n\t        },\n\t        complete: function () {\n\t          emitter.end();\n\t        }\n\t      });\n\t\n\t      if (unsub.unsubscribe) {\n\t        return function () {\n\t          unsub.unsubscribe();\n\t        };\n\t      } else {\n\t        return unsub;\n\t      }\n\t    }).setName('fromESObservable');\n\t  }\n\t\n\t  function ESObservable(observable) {\n\t    this._observable = observable.takeErrors(1);\n\t  }\n\t\n\t  extend(ESObservable.prototype, {\n\t    subscribe: function (observer) {\n\t      var _this = this;\n\t\n\t      var fn = function (event) {\n\t        if (event.type === VALUE && observer.next) {\n\t          observer.next(event.value);\n\t        } else if (event.type === ERROR && observer.error) {\n\t          observer.error(event.value);\n\t        } else if (event.type === END && observer.complete) {\n\t          observer.complete(event.value);\n\t        }\n\t      };\n\t\n\t      this._observable.onAny(fn);\n\t      return function () {\n\t        return _this._observable.offAny(fn);\n\t      };\n\t    }\n\t  });\n\t\n\t  function toESObservable() {\n\t    return new ESObservable(this);\n\t  }\n\t\n\t  var mixin = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      this._emitValue(fn(x));\n\t    }\n\t  };\n\t\n\t  var S$7 = createStream('map', mixin);\n\t  var P$3 = createProperty('map', mixin);\n\t\n\t  var id = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function map$1(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? id : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$7, P$3))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$1 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      if (fn(x)) {\n\t        this._emitValue(x);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$8 = createStream('filter', mixin$1);\n\t  var P$4 = createProperty('filter', mixin$1);\n\t\n\t  var id$1 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function filter(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$1 : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$8, P$4))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$2 = {\n\t    _init: function (_ref) {\n\t      var n = _ref.n;\n\t\n\t      this._n = n;\n\t      if (n <= 0) {\n\t        this._emitEnd();\n\t      }\n\t    },\n\t    _handleValue: function (x) {\n\t      this._n--;\n\t      this._emitValue(x);\n\t      if (this._n === 0) {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$9 = createStream('take', mixin$2);\n\t  var P$5 = createProperty('take', mixin$2);\n\t\n\t  function take(obs, n) {\n\t    return new (obs._ofSameType(S$9, P$5))(obs, { n: n });\n\t  }\n\t\n\t  var mixin$3 = {\n\t    _init: function (_ref) {\n\t      var n = _ref.n;\n\t\n\t      this._n = n;\n\t      if (n <= 0) {\n\t        this._emitEnd();\n\t      }\n\t    },\n\t    _handleError: function (x) {\n\t      this._n--;\n\t      this._emitError(x);\n\t      if (this._n === 0) {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$10 = createStream('takeErrors', mixin$3);\n\t  var P$6 = createProperty('takeErrors', mixin$3);\n\t\n\t  function takeErrors(obs, n) {\n\t    return new (obs._ofSameType(S$10, P$6))(obs, { n: n });\n\t  }\n\t\n\t  var mixin$4 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      if (fn(x)) {\n\t        this._emitValue(x);\n\t      } else {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$11 = createStream('takeWhile', mixin$4);\n\t  var P$7 = createProperty('takeWhile', mixin$4);\n\t\n\t  var id$2 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function takeWhile(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$2 : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$11, P$7))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$5 = {\n\t    _init: function () {\n\t      this._lastValue = NOTHING;\n\t    },\n\t    _free: function () {\n\t      this._lastValue = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      this._lastValue = x;\n\t    },\n\t    _handleEnd: function () {\n\t      if (this._lastValue !== NOTHING) {\n\t        this._emitValue(this._lastValue);\n\t      }\n\t      this._emitEnd();\n\t    }\n\t  };\n\t\n\t  var S$12 = createStream('last', mixin$5);\n\t  var P$8 = createProperty('last', mixin$5);\n\t\n\t  function last(obs) {\n\t    return new (obs._ofSameType(S$12, P$8))(obs);\n\t  }\n\t\n\t  var mixin$6 = {\n\t    _init: function (_ref) {\n\t      var n = _ref.n;\n\t\n\t      this._n = Math.max(0, n);\n\t    },\n\t    _handleValue: function (x) {\n\t      if (this._n === 0) {\n\t        this._emitValue(x);\n\t      } else {\n\t        this._n--;\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$13 = createStream('skip', mixin$6);\n\t  var P$9 = createProperty('skip', mixin$6);\n\t\n\t  function skip(obs, n) {\n\t    return new (obs._ofSameType(S$13, P$9))(obs, { n: n });\n\t  }\n\t\n\t  var mixin$7 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      if (this._fn !== null && !fn(x)) {\n\t        this._fn = null;\n\t      }\n\t      if (this._fn === null) {\n\t        this._emitValue(x);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$14 = createStream('skipWhile', mixin$7);\n\t  var P$10 = createProperty('skipWhile', mixin$7);\n\t\n\t  var id$3 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function skipWhile(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$3 : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$14, P$10))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$8 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t      this._prev = NOTHING;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t      this._prev = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      if (this._prev === NOTHING || !fn(this._prev, x)) {\n\t        this._prev = x;\n\t        this._emitValue(x);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$15 = createStream('skipDuplicates', mixin$8);\n\t  var P$11 = createProperty('skipDuplicates', mixin$8);\n\t\n\t  var eq = function (a, b) {\n\t    return a === b;\n\t  };\n\t\n\t  function skipDuplicates(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? eq : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$15, P$11))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$9 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t      var seed = _ref.seed;\n\t\n\t      this._fn = fn;\n\t      this._prev = seed;\n\t    },\n\t    _free: function () {\n\t      this._prev = null;\n\t      this._fn = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      if (this._prev !== NOTHING) {\n\t        var fn = this._fn;\n\t        this._emitValue(fn(this._prev, x));\n\t      }\n\t      this._prev = x;\n\t    }\n\t  };\n\t\n\t  var S$16 = createStream('diff', mixin$9);\n\t  var P$12 = createProperty('diff', mixin$9);\n\t\n\t  function defaultFn(a, b) {\n\t    return [a, b];\n\t  }\n\t\n\t  function diff(obs, fn) {\n\t    var seed = arguments.length <= 2 || arguments[2] === undefined ? NOTHING : arguments[2];\n\t\n\t    return new (obs._ofSameType(S$16, P$12))(obs, { fn: fn || defaultFn, seed: seed });\n\t  }\n\t\n\t  var P$13 = createProperty('scan', {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t      var seed = _ref.seed;\n\t\n\t      this._fn = fn;\n\t      this._seed = seed;\n\t      if (seed !== NOTHING) {\n\t        this._emitValue(seed);\n\t      }\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t      this._seed = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      if (this._currentEvent === null || this._currentEvent.type === ERROR) {\n\t        this._emitValue(this._seed === NOTHING ? x : fn(this._seed, x));\n\t      } else {\n\t        this._emitValue(fn(this._currentEvent.value, x));\n\t      }\n\t    }\n\t  });\n\t\n\t  function scan(obs, fn) {\n\t    var seed = arguments.length <= 2 || arguments[2] === undefined ? NOTHING : arguments[2];\n\t\n\t    return new P$13(obs, { fn: fn, seed: seed });\n\t  }\n\t\n\t  var mixin$10 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      var xs = fn(x);\n\t      for (var i = 0; i < xs.length; i++) {\n\t        this._emitValue(xs[i]);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$17 = createStream('flatten', mixin$10);\n\t\n\t  var id$4 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function flatten(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$4 : arguments[1];\n\t\n\t    return new S$17(obs, { fn: fn });\n\t  }\n\t\n\t  var END_MARKER = {};\n\t\n\t  var mixin$11 = {\n\t    _init: function (_ref) {\n\t      var _this = this;\n\t\n\t      var wait = _ref.wait;\n\t\n\t      this._wait = Math.max(0, wait);\n\t      this._buff = [];\n\t      this._$shiftBuff = function () {\n\t        var value = _this._buff.shift();\n\t        if (value === END_MARKER) {\n\t          _this._emitEnd();\n\t        } else {\n\t          _this._emitValue(value);\n\t        }\n\t      };\n\t    },\n\t    _free: function () {\n\t      this._buff = null;\n\t      this._$shiftBuff = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      if (this._activating) {\n\t        this._emitValue(x);\n\t      } else {\n\t        this._buff.push(x);\n\t        setTimeout(this._$shiftBuff, this._wait);\n\t      }\n\t    },\n\t    _handleEnd: function () {\n\t      if (this._activating) {\n\t        this._emitEnd();\n\t      } else {\n\t        this._buff.push(END_MARKER);\n\t        setTimeout(this._$shiftBuff, this._wait);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$18 = createStream('delay', mixin$11);\n\t  var P$14 = createProperty('delay', mixin$11);\n\t\n\t  function delay(obs, wait) {\n\t    return new (obs._ofSameType(S$18, P$14))(obs, { wait: wait });\n\t  }\n\t\n\t  var now = Date.now ? function () {\n\t    return Date.now();\n\t  } : function () {\n\t    return new Date().getTime();\n\t  };\n\t\n\t  var mixin$12 = {\n\t    _init: function (_ref) {\n\t      var _this = this;\n\t\n\t      var wait = _ref.wait;\n\t      var leading = _ref.leading;\n\t      var trailing = _ref.trailing;\n\t\n\t      this._wait = Math.max(0, wait);\n\t      this._leading = leading;\n\t      this._trailing = trailing;\n\t      this._trailingValue = null;\n\t      this._timeoutId = null;\n\t      this._endLater = false;\n\t      this._lastCallTime = 0;\n\t      this._$trailingCall = function () {\n\t        return _this._trailingCall();\n\t      };\n\t    },\n\t    _free: function () {\n\t      this._trailingValue = null;\n\t      this._$trailingCall = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      if (this._activating) {\n\t        this._emitValue(x);\n\t      } else {\n\t        var curTime = now();\n\t        if (this._lastCallTime === 0 && !this._leading) {\n\t          this._lastCallTime = curTime;\n\t        }\n\t        var remaining = this._wait - (curTime - this._lastCallTime);\n\t        if (remaining <= 0) {\n\t          this._cancelTrailing();\n\t          this._lastCallTime = curTime;\n\t          this._emitValue(x);\n\t        } else if (this._trailing) {\n\t          this._cancelTrailing();\n\t          this._trailingValue = x;\n\t          this._timeoutId = setTimeout(this._$trailingCall, remaining);\n\t        }\n\t      }\n\t    },\n\t    _handleEnd: function () {\n\t      if (this._activating) {\n\t        this._emitEnd();\n\t      } else {\n\t        if (this._timeoutId) {\n\t          this._endLater = true;\n\t        } else {\n\t          this._emitEnd();\n\t        }\n\t      }\n\t    },\n\t    _cancelTrailing: function () {\n\t      if (this._timeoutId !== null) {\n\t        clearTimeout(this._timeoutId);\n\t        this._timeoutId = null;\n\t      }\n\t    },\n\t    _trailingCall: function () {\n\t      this._emitValue(this._trailingValue);\n\t      this._timeoutId = null;\n\t      this._trailingValue = null;\n\t      this._lastCallTime = !this._leading ? 0 : now();\n\t      if (this._endLater) {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$19 = createStream('throttle', mixin$12);\n\t  var P$15 = createProperty('throttle', mixin$12);\n\t\n\t  function throttle(obs, wait) {\n\t    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t    var _ref2$leading = _ref2.leading;\n\t    var leading = _ref2$leading === undefined ? true : _ref2$leading;\n\t    var _ref2$trailing = _ref2.trailing;\n\t    var trailing = _ref2$trailing === undefined ? true : _ref2$trailing;\n\t\n\t    return new (obs._ofSameType(S$19, P$15))(obs, { wait: wait, leading: leading, trailing: trailing });\n\t  }\n\t\n\t  var mixin$13 = {\n\t    _init: function (_ref) {\n\t      var _this = this;\n\t\n\t      var wait = _ref.wait;\n\t      var immediate = _ref.immediate;\n\t\n\t      this._wait = Math.max(0, wait);\n\t      this._immediate = immediate;\n\t      this._lastAttempt = 0;\n\t      this._timeoutId = null;\n\t      this._laterValue = null;\n\t      this._endLater = false;\n\t      this._$later = function () {\n\t        return _this._later();\n\t      };\n\t    },\n\t    _free: function () {\n\t      this._laterValue = null;\n\t      this._$later = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      if (this._activating) {\n\t        this._emitValue(x);\n\t      } else {\n\t        this._lastAttempt = now();\n\t        if (this._immediate && !this._timeoutId) {\n\t          this._emitValue(x);\n\t        }\n\t        if (!this._timeoutId) {\n\t          this._timeoutId = setTimeout(this._$later, this._wait);\n\t        }\n\t        if (!this._immediate) {\n\t          this._laterValue = x;\n\t        }\n\t      }\n\t    },\n\t    _handleEnd: function () {\n\t      if (this._activating) {\n\t        this._emitEnd();\n\t      } else {\n\t        if (this._timeoutId && !this._immediate) {\n\t          this._endLater = true;\n\t        } else {\n\t          this._emitEnd();\n\t        }\n\t      }\n\t    },\n\t    _later: function () {\n\t      var last = now() - this._lastAttempt;\n\t      if (last < this._wait && last >= 0) {\n\t        this._timeoutId = setTimeout(this._$later, this._wait - last);\n\t      } else {\n\t        this._timeoutId = null;\n\t        if (!this._immediate) {\n\t          this._emitValue(this._laterValue);\n\t          this._laterValue = null;\n\t        }\n\t        if (this._endLater) {\n\t          this._emitEnd();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$20 = createStream('debounce', mixin$13);\n\t  var P$16 = createProperty('debounce', mixin$13);\n\t\n\t  function debounce(obs, wait) {\n\t    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t    var _ref2$immediate = _ref2.immediate;\n\t    var immediate = _ref2$immediate === undefined ? false : _ref2$immediate;\n\t\n\t    return new (obs._ofSameType(S$20, P$16))(obs, { wait: wait, immediate: immediate });\n\t  }\n\t\n\t  var mixin$14 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleError: function (x) {\n\t      var fn = this._fn;\n\t      this._emitError(fn(x));\n\t    }\n\t  };\n\t\n\t  var S$21 = createStream('mapErrors', mixin$14);\n\t  var P$17 = createProperty('mapErrors', mixin$14);\n\t\n\t  var id$5 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function mapErrors(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$5 : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$21, P$17))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$15 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleError: function (x) {\n\t      var fn = this._fn;\n\t      if (fn(x)) {\n\t        this._emitError(x);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$22 = createStream('filterErrors', mixin$15);\n\t  var P$18 = createProperty('filterErrors', mixin$15);\n\t\n\t  var id$6 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function filterErrors(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$6 : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$22, P$18))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$16 = {\n\t    _handleValue: function () {}\n\t  };\n\t\n\t  var S$23 = createStream('ignoreValues', mixin$16);\n\t  var P$19 = createProperty('ignoreValues', mixin$16);\n\t\n\t  function ignoreValues(obs) {\n\t    return new (obs._ofSameType(S$23, P$19))(obs);\n\t  }\n\t\n\t  var mixin$17 = {\n\t    _handleError: function () {}\n\t  };\n\t\n\t  var S$24 = createStream('ignoreErrors', mixin$17);\n\t  var P$20 = createProperty('ignoreErrors', mixin$17);\n\t\n\t  function ignoreErrors(obs) {\n\t    return new (obs._ofSameType(S$24, P$20))(obs);\n\t  }\n\t\n\t  var mixin$18 = {\n\t    _handleEnd: function () {}\n\t  };\n\t\n\t  var S$25 = createStream('ignoreEnd', mixin$18);\n\t  var P$21 = createProperty('ignoreEnd', mixin$18);\n\t\n\t  function ignoreEnd(obs) {\n\t    return new (obs._ofSameType(S$25, P$21))(obs);\n\t  }\n\t\n\t  var mixin$19 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleEnd: function () {\n\t      var fn = this._fn;\n\t      this._emitValue(fn());\n\t      this._emitEnd();\n\t    }\n\t  };\n\t\n\t  var S$26 = createStream('beforeEnd', mixin$19);\n\t  var P$22 = createProperty('beforeEnd', mixin$19);\n\t\n\t  function beforeEnd(obs, fn) {\n\t    return new (obs._ofSameType(S$26, P$22))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$20 = {\n\t    _init: function (_ref) {\n\t      var min = _ref.min;\n\t      var max = _ref.max;\n\t\n\t      this._max = max;\n\t      this._min = min;\n\t      this._buff = [];\n\t    },\n\t    _free: function () {\n\t      this._buff = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      this._buff = slide(this._buff, x, this._max);\n\t      if (this._buff.length >= this._min) {\n\t        this._emitValue(this._buff);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$27 = createStream('slidingWindow', mixin$20);\n\t  var P$23 = createProperty('slidingWindow', mixin$20);\n\t\n\t  function slidingWindow(obs, max) {\n\t    var min = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t\n\t    return new (obs._ofSameType(S$27, P$23))(obs, { min: min, max: max });\n\t  }\n\t\n\t  var mixin$21 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t      var flushOnEnd = _ref.flushOnEnd;\n\t\n\t      this._fn = fn;\n\t      this._flushOnEnd = flushOnEnd;\n\t      this._buff = [];\n\t    },\n\t    _free: function () {\n\t      this._buff = null;\n\t    },\n\t    _flush: function () {\n\t      if (this._buff !== null && this._buff.length !== 0) {\n\t        this._emitValue(this._buff);\n\t        this._buff = [];\n\t      }\n\t    },\n\t    _handleValue: function (x) {\n\t      this._buff.push(x);\n\t      var fn = this._fn;\n\t      if (!fn(x)) {\n\t        this._flush();\n\t      }\n\t    },\n\t    _handleEnd: function () {\n\t      if (this._flushOnEnd) {\n\t        this._flush();\n\t      }\n\t      this._emitEnd();\n\t    }\n\t  };\n\t\n\t  var S$28 = createStream('bufferWhile', mixin$21);\n\t  var P$24 = createProperty('bufferWhile', mixin$21);\n\t\n\t  var id$7 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function bufferWhile(obs, fn) {\n\t    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t    var _ref2$flushOnEnd = _ref2.flushOnEnd;\n\t    var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;\n\t\n\t    return new (obs._ofSameType(S$28, P$24))(obs, { fn: fn || id$7, flushOnEnd: flushOnEnd });\n\t  }\n\t\n\t  var mixin$22 = {\n\t    _init: function (_ref) {\n\t      var count = _ref.count;\n\t      var flushOnEnd = _ref.flushOnEnd;\n\t\n\t      this._count = count;\n\t      this._flushOnEnd = flushOnEnd;\n\t      this._buff = [];\n\t    },\n\t    _free: function () {\n\t      this._buff = null;\n\t    },\n\t    _flush: function () {\n\t      if (this._buff !== null && this._buff.length !== 0) {\n\t        this._emitValue(this._buff);\n\t        this._buff = [];\n\t      }\n\t    },\n\t    _handleValue: function (x) {\n\t      this._buff.push(x);\n\t      if (this._buff.length >= this._count) {\n\t        this._flush();\n\t      }\n\t    },\n\t    _handleEnd: function () {\n\t      if (this._flushOnEnd) {\n\t        this._flush();\n\t      }\n\t      this._emitEnd();\n\t    }\n\t  };\n\t\n\t  var S$29 = createStream('bufferWithCount', mixin$22);\n\t  var P$25 = createProperty('bufferWithCount', mixin$22);\n\t\n\t  function bufferWhile$1(obs, count) {\n\t    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t    var _ref2$flushOnEnd = _ref2.flushOnEnd;\n\t    var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;\n\t\n\t    return new (obs._ofSameType(S$29, P$25))(obs, { count: count, flushOnEnd: flushOnEnd });\n\t  }\n\t\n\t  var mixin$23 = {\n\t    _init: function (_ref) {\n\t      var _this = this;\n\t\n\t      var wait = _ref.wait;\n\t      var count = _ref.count;\n\t      var flushOnEnd = _ref.flushOnEnd;\n\t\n\t      this._wait = wait;\n\t      this._count = count;\n\t      this._flushOnEnd = flushOnEnd;\n\t      this._intervalId = null;\n\t      this._$onTick = function () {\n\t        return _this._flush();\n\t      };\n\t      this._buff = [];\n\t    },\n\t    _free: function () {\n\t      this._$onTick = null;\n\t      this._buff = null;\n\t    },\n\t    _flush: function () {\n\t      if (this._buff !== null) {\n\t        this._emitValue(this._buff);\n\t        this._buff = [];\n\t      }\n\t    },\n\t    _handleValue: function (x) {\n\t      this._buff.push(x);\n\t      if (this._buff.length >= this._count) {\n\t        clearInterval(this._intervalId);\n\t        this._flush();\n\t        this._intervalId = setInterval(this._$onTick, this._wait);\n\t      }\n\t    },\n\t    _handleEnd: function () {\n\t      if (this._flushOnEnd && this._buff.length !== 0) {\n\t        this._flush();\n\t      }\n\t      this._emitEnd();\n\t    },\n\t    _onActivation: function () {\n\t      this._source.onAny(this._$handleAny); // copied from patterns/one-source\n\t      this._intervalId = setInterval(this._$onTick, this._wait);\n\t    },\n\t    _onDeactivation: function () {\n\t      if (this._intervalId !== null) {\n\t        clearInterval(this._intervalId);\n\t        this._intervalId = null;\n\t      }\n\t      this._source.offAny(this._$handleAny); // copied from patterns/one-source\n\t    }\n\t  };\n\t\n\t  var S$30 = createStream('bufferWithTimeOrCount', mixin$23);\n\t  var P$26 = createProperty('bufferWithTimeOrCount', mixin$23);\n\t\n\t  function bufferWithTimeOrCount(obs, wait, count) {\n\t    var _ref2 = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t    var _ref2$flushOnEnd = _ref2.flushOnEnd;\n\t    var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;\n\t\n\t    return new (obs._ofSameType(S$30, P$26))(obs, { wait: wait, count: count, flushOnEnd: flushOnEnd });\n\t  }\n\t\n\t  function xformForObs(obs) {\n\t    return {\n\t      '@@transducer/step': function (res, input) {\n\t        obs._emitValue(input);\n\t        return null;\n\t      },\n\t      '@@transducer/result': function () {\n\t        obs._emitEnd();\n\t        return null;\n\t      }\n\t    };\n\t  }\n\t\n\t  var mixin$24 = {\n\t    _init: function (_ref) {\n\t      var transducer = _ref.transducer;\n\t\n\t      this._xform = transducer(xformForObs(this));\n\t    },\n\t    _free: function () {\n\t      this._xform = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      if (this._xform['@@transducer/step'](null, x) !== null) {\n\t        this._xform['@@transducer/result'](null);\n\t      }\n\t    },\n\t    _handleEnd: function () {\n\t      this._xform['@@transducer/result'](null);\n\t    }\n\t  };\n\t\n\t  var S$31 = createStream('transduce', mixin$24);\n\t  var P$27 = createProperty('transduce', mixin$24);\n\t\n\t  function transduce(obs, transducer) {\n\t    return new (obs._ofSameType(S$31, P$27))(obs, { transducer: transducer });\n\t  }\n\t\n\t  var mixin$25 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._handler = fn;\n\t      this._emitter = emitter(this);\n\t    },\n\t    _free: function () {\n\t      this._handler = null;\n\t      this._emitter = null;\n\t    },\n\t    _handleAny: function (event) {\n\t      this._handler(this._emitter, event);\n\t    }\n\t  };\n\t\n\t  var S$32 = createStream('withHandler', mixin$25);\n\t  var P$28 = createProperty('withHandler', mixin$25);\n\t\n\t  function withHandler(obs, fn) {\n\t    return new (obs._ofSameType(S$32, P$28))(obs, { fn: fn });\n\t  }\n\t\n\t  function defaultErrorsCombinator(errors) {\n\t    var latestError = undefined;\n\t    for (var i = 0; i < errors.length; i++) {\n\t      if (errors[i] !== undefined) {\n\t        if (latestError === undefined || latestError.index < errors[i].index) {\n\t          latestError = errors[i];\n\t        }\n\t      }\n\t    }\n\t    return latestError.error;\n\t  }\n\t\n\t  function Combine(active, passive, combinator) {\n\t    var _this = this;\n\t\n\t    Stream.call(this);\n\t    this._activeCount = active.length;\n\t    this._sources = concat(active, passive);\n\t    this._combinator = combinator ? spread(combinator, this._sources.length) : function (x) {\n\t      return x;\n\t    };\n\t    this._aliveCount = 0;\n\t    this._latestValues = new Array(this._sources.length);\n\t    this._latestErrors = new Array(this._sources.length);\n\t    fillArray(this._latestValues, NOTHING);\n\t    this._emitAfterActivation = false;\n\t    this._endAfterActivation = false;\n\t    this._latestErrorIndex = 0;\n\t\n\t    this._$handlers = [];\n\t\n\t    var _loop = function (i) {\n\t      _this._$handlers.push(function (event) {\n\t        return _this._handleAny(i, event);\n\t      });\n\t    };\n\t\n\t    for (var i = 0; i < this._sources.length; i++) {\n\t      _loop(i);\n\t    }\n\t  }\n\t\n\t  inherit(Combine, Stream, {\n\t\n\t    _name: 'combine',\n\t\n\t    _onActivation: function () {\n\t      this._aliveCount = this._activeCount;\n\t\n\t      // we need to suscribe to _passive_ sources before _active_\n\t      // (see https://github.com/rpominov/kefir/issues/98)\n\t      for (var i = this._activeCount; i < this._sources.length; i++) {\n\t        this._sources[i].onAny(this._$handlers[i]);\n\t      }\n\t      for (var i = 0; i < this._activeCount; i++) {\n\t        this._sources[i].onAny(this._$handlers[i]);\n\t      }\n\t\n\t      if (this._emitAfterActivation) {\n\t        this._emitAfterActivation = false;\n\t        this._emitIfFull();\n\t      }\n\t      if (this._endAfterActivation) {\n\t        this._emitEnd();\n\t      }\n\t    },\n\t    _onDeactivation: function () {\n\t      var length = this._sources.length,\n\t          i = undefined;\n\t      for (i = 0; i < length; i++) {\n\t        this._sources[i].offAny(this._$handlers[i]);\n\t      }\n\t    },\n\t    _emitIfFull: function () {\n\t      var hasAllValues = true;\n\t      var hasErrors = false;\n\t      var length = this._latestValues.length;\n\t      var valuesCopy = new Array(length);\n\t      var errorsCopy = new Array(length);\n\t\n\t      for (var i = 0; i < length; i++) {\n\t        valuesCopy[i] = this._latestValues[i];\n\t        errorsCopy[i] = this._latestErrors[i];\n\t\n\t        if (valuesCopy[i] === NOTHING) {\n\t          hasAllValues = false;\n\t        }\n\t\n\t        if (errorsCopy[i] !== undefined) {\n\t          hasErrors = true;\n\t        }\n\t      }\n\t\n\t      if (hasAllValues) {\n\t        var combinator = this._combinator;\n\t        this._emitValue(combinator(valuesCopy));\n\t      }\n\t      if (hasErrors) {\n\t        this._emitError(defaultErrorsCombinator(errorsCopy));\n\t      }\n\t    },\n\t    _handleAny: function (i, event) {\n\t\n\t      if (event.type === VALUE || event.type === ERROR) {\n\t\n\t        if (event.type === VALUE) {\n\t          this._latestValues[i] = event.value;\n\t          this._latestErrors[i] = undefined;\n\t        }\n\t        if (event.type === ERROR) {\n\t          this._latestValues[i] = NOTHING;\n\t          this._latestErrors[i] = {\n\t            index: this._latestErrorIndex++,\n\t            error: event.value\n\t          };\n\t        }\n\t\n\t        if (i < this._activeCount) {\n\t          if (this._activating) {\n\t            this._emitAfterActivation = true;\n\t          } else {\n\t            this._emitIfFull();\n\t          }\n\t        }\n\t      } else {\n\t        // END\n\t\n\t        if (i < this._activeCount) {\n\t          this._aliveCount--;\n\t          if (this._aliveCount === 0) {\n\t            if (this._activating) {\n\t              this._endAfterActivation = true;\n\t            } else {\n\t              this._emitEnd();\n\t            }\n\t          }\n\t        }\n\t      }\n\t    },\n\t    _clear: function () {\n\t      Stream.prototype._clear.call(this);\n\t      this._sources = null;\n\t      this._latestValues = null;\n\t      this._latestErrors = null;\n\t      this._combinator = null;\n\t      this._$handlers = null;\n\t    }\n\t  });\n\t\n\t  function combine(active) {\n\t    var passive = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t    var combinator = arguments[2];\n\t\n\t    if (typeof passive === 'function') {\n\t      combinator = passive;\n\t      passive = [];\n\t    }\n\t    return active.length === 0 ? never() : new Combine(active, passive, combinator);\n\t  }\n\t\n\t  var isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t  };\n\t\n\t  function Zip(sources, combinator) {\n\t    var _this = this;\n\t\n\t    Stream.call(this);\n\t\n\t    this._buffers = map(sources, function (source) {\n\t      return isArray(source) ? cloneArray(source) : [];\n\t    });\n\t    this._sources = map(sources, function (source) {\n\t      return isArray(source) ? never() : source;\n\t    });\n\t\n\t    this._combinator = combinator ? spread(combinator, this._sources.length) : function (x) {\n\t      return x;\n\t    };\n\t    this._aliveCount = 0;\n\t\n\t    this._$handlers = [];\n\t\n\t    var _loop = function (i) {\n\t      _this._$handlers.push(function (event) {\n\t        return _this._handleAny(i, event);\n\t      });\n\t    };\n\t\n\t    for (var i = 0; i < this._sources.length; i++) {\n\t      _loop(i);\n\t    }\n\t  }\n\t\n\t  inherit(Zip, Stream, {\n\t\n\t    _name: 'zip',\n\t\n\t    _onActivation: function () {\n\t\n\t      // if all sources are arrays\n\t      while (this._isFull()) {\n\t        this._emit();\n\t      }\n\t\n\t      var length = this._sources.length;\n\t      this._aliveCount = length;\n\t      for (var i = 0; i < length && this._active; i++) {\n\t        this._sources[i].onAny(this._$handlers[i]);\n\t      }\n\t    },\n\t    _onDeactivation: function () {\n\t      for (var i = 0; i < this._sources.length; i++) {\n\t        this._sources[i].offAny(this._$handlers[i]);\n\t      }\n\t    },\n\t    _emit: function () {\n\t      var values = new Array(this._buffers.length);\n\t      for (var i = 0; i < this._buffers.length; i++) {\n\t        values[i] = this._buffers[i].shift();\n\t      }\n\t      var combinator = this._combinator;\n\t      this._emitValue(combinator(values));\n\t    },\n\t    _isFull: function () {\n\t      for (var i = 0; i < this._buffers.length; i++) {\n\t        if (this._buffers[i].length === 0) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t    _handleAny: function (i, event) {\n\t      if (event.type === VALUE) {\n\t        this._buffers[i].push(event.value);\n\t        if (this._isFull()) {\n\t          this._emit();\n\t        }\n\t      }\n\t      if (event.type === ERROR) {\n\t        this._emitError(event.value);\n\t      }\n\t      if (event.type === END) {\n\t        this._aliveCount--;\n\t        if (this._aliveCount === 0) {\n\t          this._emitEnd();\n\t        }\n\t      }\n\t    },\n\t    _clear: function () {\n\t      Stream.prototype._clear.call(this);\n\t      this._sources = null;\n\t      this._buffers = null;\n\t      this._combinator = null;\n\t      this._$handlers = null;\n\t    }\n\t  });\n\t\n\t  function zip(observables, combinator /* Function | falsey */) {\n\t    return observables.length === 0 ? never() : new Zip(observables, combinator);\n\t  }\n\t\n\t  var id$8 = function (x) {\n\t    return x;\n\t  };\n\t\n\t  function AbstractPool() {\n\t    var _this = this;\n\t\n\t    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    var _ref$queueLim = _ref.queueLim;\n\t    var queueLim = _ref$queueLim === undefined ? 0 : _ref$queueLim;\n\t    var _ref$concurLim = _ref.concurLim;\n\t    var concurLim = _ref$concurLim === undefined ? -1 : _ref$concurLim;\n\t    var _ref$drop = _ref.drop;\n\t    var drop = _ref$drop === undefined ? 'new' : _ref$drop;\n\t\n\t    Stream.call(this);\n\t\n\t    this._queueLim = queueLim < 0 ? -1 : queueLim;\n\t    this._concurLim = concurLim < 0 ? -1 : concurLim;\n\t    this._drop = drop;\n\t    this._queue = [];\n\t    this._curSources = [];\n\t    this._$handleSubAny = function (event) {\n\t      return _this._handleSubAny(event);\n\t    };\n\t    this._$endHandlers = [];\n\t    this._currentlyAdding = null;\n\t\n\t    if (this._concurLim === 0) {\n\t      this._emitEnd();\n\t    }\n\t  }\n\t\n\t  inherit(AbstractPool, Stream, {\n\t\n\t    _name: 'abstractPool',\n\t\n\t    _add: function (obj, toObs /* Function | falsey */) {\n\t      toObs = toObs || id$8;\n\t      if (this._concurLim === -1 || this._curSources.length < this._concurLim) {\n\t        this._addToCur(toObs(obj));\n\t      } else {\n\t        if (this._queueLim === -1 || this._queue.length < this._queueLim) {\n\t          this._addToQueue(toObs(obj));\n\t        } else if (this._drop === 'old') {\n\t          this._removeOldest();\n\t          this._add(obj, toObs);\n\t        }\n\t      }\n\t    },\n\t    _addAll: function (obss) {\n\t      var _this2 = this;\n\t\n\t      forEach(obss, function (obs) {\n\t        return _this2._add(obs);\n\t      });\n\t    },\n\t    _remove: function (obs) {\n\t      if (this._removeCur(obs) === -1) {\n\t        this._removeQueue(obs);\n\t      }\n\t    },\n\t    _addToQueue: function (obs) {\n\t      this._queue = concat(this._queue, [obs]);\n\t    },\n\t    _addToCur: function (obs) {\n\t      if (this._active) {\n\t\n\t        // HACK:\n\t        //\n\t        // We have two optimizations for cases when `obs` is ended. We don't want\n\t        // to add such observable to the list, but only want to emit events\n\t        // from it (if it has some).\n\t        //\n\t        // Instead of this hacks, we could just did following,\n\t        // but it would be 5-8 times slower:\n\t        //\n\t        //     this._curSources = concat(this._curSources, [obs]);\n\t        //     this._subscribe(obs);\n\t        //\n\t\n\t        // #1\n\t        // This one for cases when `obs` already ended\n\t        // e.g., Kefir.constant() or Kefir.never()\n\t        if (!obs._alive) {\n\t          if (obs._currentEvent) {\n\t            this._emit(obs._currentEvent.type, obs._currentEvent.value);\n\t          }\n\t          return;\n\t        }\n\t\n\t        // #2\n\t        // This one is for cases when `obs` going to end synchronously on\n\t        // first subscriber e.g., Kefir.stream(em => {em.emit(1); em.end()})\n\t        this._currentlyAdding = obs;\n\t        obs.onAny(this._$handleSubAny);\n\t        this._currentlyAdding = null;\n\t        if (obs._alive) {\n\t          this._curSources = concat(this._curSources, [obs]);\n\t          if (this._active) {\n\t            this._subToEnd(obs);\n\t          }\n\t        }\n\t      } else {\n\t        this._curSources = concat(this._curSources, [obs]);\n\t      }\n\t    },\n\t    _subToEnd: function (obs) {\n\t      var _this3 = this;\n\t\n\t      var onEnd = function () {\n\t        return _this3._removeCur(obs);\n\t      };\n\t      this._$endHandlers.push({ obs: obs, handler: onEnd });\n\t      obs.onEnd(onEnd);\n\t    },\n\t    _subscribe: function (obs) {\n\t      obs.onAny(this._$handleSubAny);\n\t\n\t      // it can become inactive in responce of subscribing to `obs.onAny` above\n\t      if (this._active) {\n\t        this._subToEnd(obs);\n\t      }\n\t    },\n\t    _unsubscribe: function (obs) {\n\t      obs.offAny(this._$handleSubAny);\n\t\n\t      var onEndI = findByPred(this._$endHandlers, function (obj) {\n\t        return obj.obs === obs;\n\t      });\n\t      if (onEndI !== -1) {\n\t        obs.offEnd(this._$endHandlers[onEndI].handler);\n\t        this._$endHandlers.splice(onEndI, 1);\n\t      }\n\t    },\n\t    _handleSubAny: function (event) {\n\t      if (event.type === VALUE) {\n\t        this._emitValue(event.value);\n\t      } else if (event.type === ERROR) {\n\t        this._emitError(event.value);\n\t      }\n\t    },\n\t    _removeQueue: function (obs) {\n\t      var index = find(this._queue, obs);\n\t      this._queue = remove(this._queue, index);\n\t      return index;\n\t    },\n\t    _removeCur: function (obs) {\n\t      if (this._active) {\n\t        this._unsubscribe(obs);\n\t      }\n\t      var index = find(this._curSources, obs);\n\t      this._curSources = remove(this._curSources, index);\n\t      if (index !== -1) {\n\t        if (this._queue.length !== 0) {\n\t          this._pullQueue();\n\t        } else if (this._curSources.length === 0) {\n\t          this._onEmpty();\n\t        }\n\t      }\n\t      return index;\n\t    },\n\t    _removeOldest: function () {\n\t      this._removeCur(this._curSources[0]);\n\t    },\n\t    _pullQueue: function () {\n\t      if (this._queue.length !== 0) {\n\t        this._queue = cloneArray(this._queue);\n\t        this._addToCur(this._queue.shift());\n\t      }\n\t    },\n\t    _onActivation: function () {\n\t      for (var i = 0, sources = this._curSources; i < sources.length && this._active; i++) {\n\t        this._subscribe(sources[i]);\n\t      }\n\t    },\n\t    _onDeactivation: function () {\n\t      for (var i = 0, sources = this._curSources; i < sources.length; i++) {\n\t        this._unsubscribe(sources[i]);\n\t      }\n\t      if (this._currentlyAdding !== null) {\n\t        this._unsubscribe(this._currentlyAdding);\n\t      }\n\t    },\n\t    _isEmpty: function () {\n\t      return this._curSources.length === 0;\n\t    },\n\t    _onEmpty: function () {},\n\t    _clear: function () {\n\t      Stream.prototype._clear.call(this);\n\t      this._queue = null;\n\t      this._curSources = null;\n\t      this._$handleSubAny = null;\n\t      this._$endHandlers = null;\n\t    }\n\t  });\n\t\n\t  function Merge(sources) {\n\t    AbstractPool.call(this);\n\t    this._addAll(sources);\n\t    this._initialised = true;\n\t  }\n\t\n\t  inherit(Merge, AbstractPool, {\n\t\n\t    _name: 'merge',\n\t\n\t    _onEmpty: function () {\n\t      if (this._initialised) {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  });\n\t\n\t  function merge(observables) {\n\t    return observables.length === 0 ? never() : new Merge(observables);\n\t  }\n\t\n\t  function S$33(generator) {\n\t    var _this = this;\n\t\n\t    Stream.call(this);\n\t    this._generator = generator;\n\t    this._source = null;\n\t    this._inLoop = false;\n\t    this._iteration = 0;\n\t    this._$handleAny = function (event) {\n\t      return _this._handleAny(event);\n\t    };\n\t  }\n\t\n\t  inherit(S$33, Stream, {\n\t\n\t    _name: 'repeat',\n\t\n\t    _handleAny: function (event) {\n\t      if (event.type === END) {\n\t        this._source = null;\n\t        this._getSource();\n\t      } else {\n\t        this._emit(event.type, event.value);\n\t      }\n\t    },\n\t    _getSource: function () {\n\t      if (!this._inLoop) {\n\t        this._inLoop = true;\n\t        var generator = this._generator;\n\t        while (this._source === null && this._alive && this._active) {\n\t          this._source = generator(this._iteration++);\n\t          if (this._source) {\n\t            this._source.onAny(this._$handleAny);\n\t          } else {\n\t            this._emitEnd();\n\t          }\n\t        }\n\t        this._inLoop = false;\n\t      }\n\t    },\n\t    _onActivation: function () {\n\t      if (this._source) {\n\t        this._source.onAny(this._$handleAny);\n\t      } else {\n\t        this._getSource();\n\t      }\n\t    },\n\t    _onDeactivation: function () {\n\t      if (this._source) {\n\t        this._source.offAny(this._$handleAny);\n\t      }\n\t    },\n\t    _clear: function () {\n\t      Stream.prototype._clear.call(this);\n\t      this._generator = null;\n\t      this._source = null;\n\t      this._$handleAny = null;\n\t    }\n\t  });\n\t\n\t  function repeat (generator) {\n\t    return new S$33(generator);\n\t  }\n\t\n\t  function concat$1(observables) {\n\t    return repeat(function (index) {\n\t      return observables.length > index ? observables[index] : false;\n\t    }).setName('concat');\n\t  }\n\t\n\t  function Pool() {\n\t    AbstractPool.call(this);\n\t  }\n\t\n\t  inherit(Pool, AbstractPool, {\n\t\n\t    _name: 'pool',\n\t\n\t    plug: function (obs) {\n\t      this._add(obs);\n\t      return this;\n\t    },\n\t    unplug: function (obs) {\n\t      this._remove(obs);\n\t      return this;\n\t    }\n\t  });\n\t\n\t  function FlatMap(source, fn, options) {\n\t    var _this = this;\n\t\n\t    AbstractPool.call(this, options);\n\t    this._source = source;\n\t    this._fn = fn;\n\t    this._mainEnded = false;\n\t    this._lastCurrent = null;\n\t    this._$handleMain = function (event) {\n\t      return _this._handleMain(event);\n\t    };\n\t  }\n\t\n\t  inherit(FlatMap, AbstractPool, {\n\t    _onActivation: function () {\n\t      AbstractPool.prototype._onActivation.call(this);\n\t      if (this._active) {\n\t        this._source.onAny(this._$handleMain);\n\t      }\n\t    },\n\t    _onDeactivation: function () {\n\t      AbstractPool.prototype._onDeactivation.call(this);\n\t      this._source.offAny(this._$handleMain);\n\t      this._hadNoEvSinceDeact = true;\n\t    },\n\t    _handleMain: function (event) {\n\t\n\t      if (event.type === VALUE) {\n\t        // Is latest value before deactivation survived, and now is 'current' on this activation?\n\t        // We don't want to handle such values, to prevent to constantly add\n\t        // same observale on each activation/deactivation when our main source\n\t        // is a `Kefir.conatant()` for example.\n\t        var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n\t        if (!sameCurr) {\n\t          this._add(event.value, this._fn);\n\t        }\n\t        this._lastCurrent = event.value;\n\t        this._hadNoEvSinceDeact = false;\n\t      }\n\t\n\t      if (event.type === ERROR) {\n\t        this._emitError(event.value);\n\t      }\n\t\n\t      if (event.type === END) {\n\t        if (this._isEmpty()) {\n\t          this._emitEnd();\n\t        } else {\n\t          this._mainEnded = true;\n\t        }\n\t      }\n\t    },\n\t    _onEmpty: function () {\n\t      if (this._mainEnded) {\n\t        this._emitEnd();\n\t      }\n\t    },\n\t    _clear: function () {\n\t      AbstractPool.prototype._clear.call(this);\n\t      this._source = null;\n\t      this._lastCurrent = null;\n\t      this._$handleMain = null;\n\t    }\n\t  });\n\t\n\t  function FlatMapErrors(source, fn) {\n\t    FlatMap.call(this, source, fn);\n\t  }\n\t\n\t  inherit(FlatMapErrors, FlatMap, {\n\t\n\t    // Same as in FlatMap, only VALUE/ERROR flipped\n\t\n\t    _handleMain: function (event) {\n\t\n\t      if (event.type === ERROR) {\n\t        var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n\t        if (!sameCurr) {\n\t          this._add(event.value, this._fn);\n\t        }\n\t        this._lastCurrent = event.value;\n\t        this._hadNoEvSinceDeact = false;\n\t      }\n\t\n\t      if (event.type === VALUE) {\n\t        this._emitValue(event.value);\n\t      }\n\t\n\t      if (event.type === END) {\n\t        if (this._isEmpty()) {\n\t          this._emitEnd();\n\t        } else {\n\t          this._mainEnded = true;\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  function createConstructor$1(BaseClass, name) {\n\t    return function AnonymousObservable(primary, secondary, options) {\n\t      var _this = this;\n\t\n\t      BaseClass.call(this);\n\t      this._primary = primary;\n\t      this._secondary = secondary;\n\t      this._name = primary._name + '.' + name;\n\t      this._lastSecondary = NOTHING;\n\t      this._$handleSecondaryAny = function (event) {\n\t        return _this._handleSecondaryAny(event);\n\t      };\n\t      this._$handlePrimaryAny = function (event) {\n\t        return _this._handlePrimaryAny(event);\n\t      };\n\t      this._init(options);\n\t    };\n\t  }\n\t\n\t  function createClassMethods$1(BaseClass) {\n\t    return {\n\t      _init: function () {},\n\t      _free: function () {},\n\t      _handlePrimaryValue: function (x) {\n\t        this._emitValue(x);\n\t      },\n\t      _handlePrimaryError: function (x) {\n\t        this._emitError(x);\n\t      },\n\t      _handlePrimaryEnd: function () {\n\t        this._emitEnd();\n\t      },\n\t      _handleSecondaryValue: function (x) {\n\t        this._lastSecondary = x;\n\t      },\n\t      _handleSecondaryError: function (x) {\n\t        this._emitError(x);\n\t      },\n\t      _handleSecondaryEnd: function () {},\n\t      _handlePrimaryAny: function (event) {\n\t        switch (event.type) {\n\t          case VALUE:\n\t            return this._handlePrimaryValue(event.value);\n\t          case ERROR:\n\t            return this._handlePrimaryError(event.value);\n\t          case END:\n\t            return this._handlePrimaryEnd(event.value);\n\t        }\n\t      },\n\t      _handleSecondaryAny: function (event) {\n\t        switch (event.type) {\n\t          case VALUE:\n\t            return this._handleSecondaryValue(event.value);\n\t          case ERROR:\n\t            return this._handleSecondaryError(event.value);\n\t          case END:\n\t            this._handleSecondaryEnd(event.value);\n\t            this._removeSecondary();\n\t        }\n\t      },\n\t      _removeSecondary: function () {\n\t        if (this._secondary !== null) {\n\t          this._secondary.offAny(this._$handleSecondaryAny);\n\t          this._$handleSecondaryAny = null;\n\t          this._secondary = null;\n\t        }\n\t      },\n\t      _onActivation: function () {\n\t        if (this._secondary !== null) {\n\t          this._secondary.onAny(this._$handleSecondaryAny);\n\t        }\n\t        if (this._active) {\n\t          this._primary.onAny(this._$handlePrimaryAny);\n\t        }\n\t      },\n\t      _onDeactivation: function () {\n\t        if (this._secondary !== null) {\n\t          this._secondary.offAny(this._$handleSecondaryAny);\n\t        }\n\t        this._primary.offAny(this._$handlePrimaryAny);\n\t      },\n\t      _clear: function () {\n\t        BaseClass.prototype._clear.call(this);\n\t        this._primary = null;\n\t        this._secondary = null;\n\t        this._lastSecondary = null;\n\t        this._$handleSecondaryAny = null;\n\t        this._$handlePrimaryAny = null;\n\t        this._free();\n\t      }\n\t    };\n\t  }\n\t\n\t  function createStream$1(name, mixin) {\n\t    var S = createConstructor$1(Stream, name);\n\t    inherit(S, Stream, createClassMethods$1(Stream), mixin);\n\t    return S;\n\t  }\n\t\n\t  function createProperty$1(name, mixin) {\n\t    var P = createConstructor$1(Property, name);\n\t    inherit(P, Property, createClassMethods$1(Property), mixin);\n\t    return P;\n\t  }\n\t\n\t  var mixin$26 = {\n\t    _handlePrimaryValue: function (x) {\n\t      if (this._lastSecondary !== NOTHING && this._lastSecondary) {\n\t        this._emitValue(x);\n\t      }\n\t    },\n\t    _handleSecondaryEnd: function () {\n\t      if (this._lastSecondary === NOTHING || !this._lastSecondary) {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$34 = createStream$1('filterBy', mixin$26);\n\t  var P$29 = createProperty$1('filterBy', mixin$26);\n\t\n\t  function filterBy(primary, secondary) {\n\t    return new (primary._ofSameType(S$34, P$29))(primary, secondary);\n\t  }\n\t\n\t  var id2 = function (_, x) {\n\t    return x;\n\t  };\n\t\n\t  function sampledBy(passive, active, combinator) {\n\t    var _combinator = combinator ? function (a, b) {\n\t      return combinator(b, a);\n\t    } : id2;\n\t    return combine([active], [passive], _combinator).setName(passive, 'sampledBy');\n\t  }\n\t\n\t  var mixin$27 = {\n\t    _handlePrimaryValue: function (x) {\n\t      if (this._lastSecondary !== NOTHING) {\n\t        this._emitValue(x);\n\t      }\n\t    },\n\t    _handleSecondaryEnd: function () {\n\t      if (this._lastSecondary === NOTHING) {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$35 = createStream$1('skipUntilBy', mixin$27);\n\t  var P$30 = createProperty$1('skipUntilBy', mixin$27);\n\t\n\t  function skipUntilBy(primary, secondary) {\n\t    return new (primary._ofSameType(S$35, P$30))(primary, secondary);\n\t  }\n\t\n\t  var mixin$28 = {\n\t    _handleSecondaryValue: function () {\n\t      this._emitEnd();\n\t    }\n\t  };\n\t\n\t  var S$36 = createStream$1('takeUntilBy', mixin$28);\n\t  var P$31 = createProperty$1('takeUntilBy', mixin$28);\n\t\n\t  function takeUntilBy(primary, secondary) {\n\t    return new (primary._ofSameType(S$36, P$31))(primary, secondary);\n\t  }\n\t\n\t  var mixin$29 = {\n\t    _init: function () {\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$flushOnEnd = _ref.flushOnEnd;\n\t      var flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd;\n\t\n\t      this._buff = [];\n\t      this._flushOnEnd = flushOnEnd;\n\t    },\n\t    _free: function () {\n\t      this._buff = null;\n\t    },\n\t    _flush: function () {\n\t      if (this._buff !== null) {\n\t        this._emitValue(this._buff);\n\t        this._buff = [];\n\t      }\n\t    },\n\t    _handlePrimaryEnd: function () {\n\t      if (this._flushOnEnd) {\n\t        this._flush();\n\t      }\n\t      this._emitEnd();\n\t    },\n\t    _onActivation: function () {\n\t      this._primary.onAny(this._$handlePrimaryAny);\n\t      if (this._alive && this._secondary !== null) {\n\t        this._secondary.onAny(this._$handleSecondaryAny);\n\t      }\n\t    },\n\t    _handlePrimaryValue: function (x) {\n\t      this._buff.push(x);\n\t    },\n\t    _handleSecondaryValue: function () {\n\t      this._flush();\n\t    },\n\t    _handleSecondaryEnd: function () {\n\t      if (!this._flushOnEnd) {\n\t        this._emitEnd();\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$37 = createStream$1('bufferBy', mixin$29);\n\t  var P$32 = createProperty$1('bufferBy', mixin$29);\n\t\n\t  function bufferBy(primary, secondary, options /* optional */) {\n\t    return new (primary._ofSameType(S$37, P$32))(primary, secondary, options);\n\t  }\n\t\n\t  var mixin$30 = {\n\t    _init: function () {\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$flushOnEnd = _ref.flushOnEnd;\n\t      var flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd;\n\t      var _ref$flushOnChange = _ref.flushOnChange;\n\t      var flushOnChange = _ref$flushOnChange === undefined ? false : _ref$flushOnChange;\n\t\n\t      this._buff = [];\n\t      this._flushOnEnd = flushOnEnd;\n\t      this._flushOnChange = flushOnChange;\n\t    },\n\t    _free: function () {\n\t      this._buff = null;\n\t    },\n\t    _flush: function () {\n\t      if (this._buff !== null) {\n\t        this._emitValue(this._buff);\n\t        this._buff = [];\n\t      }\n\t    },\n\t    _handlePrimaryEnd: function () {\n\t      if (this._flushOnEnd) {\n\t        this._flush();\n\t      }\n\t      this._emitEnd();\n\t    },\n\t    _handlePrimaryValue: function (x) {\n\t      this._buff.push(x);\n\t      if (this._lastSecondary !== NOTHING && !this._lastSecondary) {\n\t        this._flush();\n\t      }\n\t    },\n\t    _handleSecondaryEnd: function () {\n\t      if (!this._flushOnEnd && (this._lastSecondary === NOTHING || this._lastSecondary)) {\n\t        this._emitEnd();\n\t      }\n\t    },\n\t    _handleSecondaryValue: function (x) {\n\t      if (this._flushOnChange && !x) {\n\t        this._flush();\n\t      }\n\t\n\t      // from default _handleSecondaryValue\n\t      this._lastSecondary = x;\n\t    }\n\t  };\n\t\n\t  var S$38 = createStream$1('bufferWhileBy', mixin$30);\n\t  var P$33 = createProperty$1('bufferWhileBy', mixin$30);\n\t\n\t  function bufferWhileBy(primary, secondary, options /* optional */) {\n\t    return new (primary._ofSameType(S$38, P$33))(primary, secondary, options);\n\t  }\n\t\n\t  var f = function () {\n\t    return false;\n\t  };\n\t  var t = function () {\n\t    return true;\n\t  };\n\t\n\t  function awaiting(a, b) {\n\t    var result = merge([map$1(a, t), map$1(b, f)]);\n\t    result = skipDuplicates(result);\n\t    result = toProperty(result, f);\n\t    return result.setName(a, 'awaiting');\n\t  }\n\t\n\t  var mixin$31 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleValue: function (x) {\n\t      var fn = this._fn;\n\t      var result = fn(x);\n\t      if (result.convert) {\n\t        this._emitError(result.error);\n\t      } else {\n\t        this._emitValue(x);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$39 = createStream('valuesToErrors', mixin$31);\n\t  var P$34 = createProperty('valuesToErrors', mixin$31);\n\t\n\t  var defFn = function (x) {\n\t    return { convert: true, error: x };\n\t  };\n\t\n\t  function valuesToErrors(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? defFn : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$39, P$34))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$32 = {\n\t    _init: function (_ref) {\n\t      var fn = _ref.fn;\n\t\n\t      this._fn = fn;\n\t    },\n\t    _free: function () {\n\t      this._fn = null;\n\t    },\n\t    _handleError: function (x) {\n\t      var fn = this._fn;\n\t      var result = fn(x);\n\t      if (result.convert) {\n\t        this._emitValue(result.value);\n\t      } else {\n\t        this._emitError(x);\n\t      }\n\t    }\n\t  };\n\t\n\t  var S$40 = createStream('errorsToValues', mixin$32);\n\t  var P$35 = createProperty('errorsToValues', mixin$32);\n\t\n\t  var defFn$1 = function (x) {\n\t    return { convert: true, value: x };\n\t  };\n\t\n\t  function errorsToValues(obs) {\n\t    var fn = arguments.length <= 1 || arguments[1] === undefined ? defFn$1 : arguments[1];\n\t\n\t    return new (obs._ofSameType(S$40, P$35))(obs, { fn: fn });\n\t  }\n\t\n\t  var mixin$33 = {\n\t    _handleError: function (x) {\n\t      this._emitError(x);\n\t      this._emitEnd();\n\t    }\n\t  };\n\t\n\t  var S$41 = createStream('endOnError', mixin$33);\n\t  var P$36 = createProperty('endOnError', mixin$33);\n\t\n\t  function endOnError(obs) {\n\t    return new (obs._ofSameType(S$41, P$36))(obs);\n\t  }\n\t\n\t  Observable.prototype.toProperty = function (fn) {\n\t    return toProperty(this, fn);\n\t  };\n\t\n\t  Observable.prototype.changes = function () {\n\t    return changes(this);\n\t  };\n\t\n\t  Observable.prototype.toPromise = function (Promise) {\n\t    return toPromise(this, Promise);\n\t  };\n\t\n\t  Observable.prototype.toESObservable = toESObservable;\n\t  Observable.prototype[symbol_('observable')] = toESObservable;\n\t\n\t  Observable.prototype.map = function (fn) {\n\t    return map$1(this, fn);\n\t  };\n\t\n\t  Observable.prototype.filter = function (fn) {\n\t    return filter(this, fn);\n\t  };\n\t\n\t  Observable.prototype.take = function (n) {\n\t    return take(this, n);\n\t  };\n\t\n\t  Observable.prototype.takeErrors = function (n) {\n\t    return takeErrors(this, n);\n\t  };\n\t\n\t  Observable.prototype.takeWhile = function (fn) {\n\t    return takeWhile(this, fn);\n\t  };\n\t\n\t  Observable.prototype.last = function () {\n\t    return last(this);\n\t  };\n\t\n\t  Observable.prototype.skip = function (n) {\n\t    return skip(this, n);\n\t  };\n\t\n\t  Observable.prototype.skipWhile = function (fn) {\n\t    return skipWhile(this, fn);\n\t  };\n\t\n\t  Observable.prototype.skipDuplicates = function (fn) {\n\t    return skipDuplicates(this, fn);\n\t  };\n\t\n\t  Observable.prototype.diff = function (fn, seed) {\n\t    return diff(this, fn, seed);\n\t  };\n\t\n\t  Observable.prototype.scan = function (fn, seed) {\n\t    return scan(this, fn, seed);\n\t  };\n\t\n\t  Observable.prototype.flatten = function (fn) {\n\t    return flatten(this, fn);\n\t  };\n\t\n\t  Observable.prototype.delay = function (wait) {\n\t    return delay(this, wait);\n\t  };\n\t\n\t  Observable.prototype.throttle = function (wait, options) {\n\t    return throttle(this, wait, options);\n\t  };\n\t\n\t  Observable.prototype.debounce = function (wait, options) {\n\t    return debounce(this, wait, options);\n\t  };\n\t\n\t  Observable.prototype.mapErrors = function (fn) {\n\t    return mapErrors(this, fn);\n\t  };\n\t\n\t  Observable.prototype.filterErrors = function (fn) {\n\t    return filterErrors(this, fn);\n\t  };\n\t\n\t  Observable.prototype.ignoreValues = function () {\n\t    return ignoreValues(this);\n\t  };\n\t\n\t  Observable.prototype.ignoreErrors = function () {\n\t    return ignoreErrors(this);\n\t  };\n\t\n\t  Observable.prototype.ignoreEnd = function () {\n\t    return ignoreEnd(this);\n\t  };\n\t\n\t  Observable.prototype.beforeEnd = function (fn) {\n\t    return beforeEnd(this, fn);\n\t  };\n\t\n\t  Observable.prototype.slidingWindow = function (max, min) {\n\t    return slidingWindow(this, max, min);\n\t  };\n\t\n\t  Observable.prototype.bufferWhile = function (fn, options) {\n\t    return bufferWhile(this, fn, options);\n\t  };\n\t\n\t  Observable.prototype.bufferWithCount = function (count, options) {\n\t    return bufferWhile$1(this, count, options);\n\t  };\n\t\n\t  Observable.prototype.bufferWithTimeOrCount = function (wait, count, options) {\n\t    return bufferWithTimeOrCount(this, wait, count, options);\n\t  };\n\t\n\t  Observable.prototype.transduce = function (transducer) {\n\t    return transduce(this, transducer);\n\t  };\n\t\n\t  Observable.prototype.withHandler = function (fn) {\n\t    return withHandler(this, fn);\n\t  };\n\t\n\t  Observable.prototype.combine = function (other, combinator) {\n\t    return combine([this, other], combinator);\n\t  };\n\t\n\t  Observable.prototype.zip = function (other, combinator) {\n\t    return zip([this, other], combinator);\n\t  };\n\t\n\t  Observable.prototype.merge = function (other) {\n\t    return merge([this, other]);\n\t  };\n\t\n\t  Observable.prototype.concat = function (other) {\n\t    return concat$1([this, other]);\n\t  };\n\t\n\t  var pool = function () {\n\t    return new Pool();\n\t  };\n\t\n\t  Observable.prototype.flatMap = function (fn) {\n\t    return new FlatMap(this, fn).setName(this, 'flatMap');\n\t  };\n\t  Observable.prototype.flatMapLatest = function (fn) {\n\t    return new FlatMap(this, fn, { concurLim: 1, drop: 'old' }).setName(this, 'flatMapLatest');\n\t  };\n\t  Observable.prototype.flatMapFirst = function (fn) {\n\t    return new FlatMap(this, fn, { concurLim: 1 }).setName(this, 'flatMapFirst');\n\t  };\n\t  Observable.prototype.flatMapConcat = function (fn) {\n\t    return new FlatMap(this, fn, { queueLim: -1, concurLim: 1 }).setName(this, 'flatMapConcat');\n\t  };\n\t  Observable.prototype.flatMapConcurLimit = function (fn, limit) {\n\t    return new FlatMap(this, fn, { queueLim: -1, concurLim: limit }).setName(this, 'flatMapConcurLimit');\n\t  };\n\t\n\t  Observable.prototype.flatMapErrors = function (fn) {\n\t    return new FlatMapErrors(this, fn).setName(this, 'flatMapErrors');\n\t  };\n\t\n\t  Observable.prototype.filterBy = function (other) {\n\t    return filterBy(this, other);\n\t  };\n\t\n\t  Observable.prototype.sampledBy = function (other, combinator) {\n\t    return sampledBy(this, other, combinator);\n\t  };\n\t\n\t  Observable.prototype.skipUntilBy = function (other) {\n\t    return skipUntilBy(this, other);\n\t  };\n\t\n\t  Observable.prototype.takeUntilBy = function (other) {\n\t    return takeUntilBy(this, other);\n\t  };\n\t\n\t  Observable.prototype.bufferBy = function (other, options) {\n\t    return bufferBy(this, other, options);\n\t  };\n\t\n\t  Observable.prototype.bufferWhileBy = function (other, options) {\n\t    return bufferWhileBy(this, other, options);\n\t  };\n\t\n\t  // Deprecated\n\t  // -----------------------------------------------------------------------------\n\t\n\t  function warn(msg) {\n\t    if (Kefir.DEPRECATION_WARNINGS !== false && console && typeof console.warn === 'function') {\n\t      var msg2 = '\\nHere is an Error object for you containing the call stack:';\n\t      console.warn(msg, msg2, new Error());\n\t    }\n\t  }\n\t\n\t  Observable.prototype.awaiting = function (other) {\n\t    warn('You are using deprecated .awaiting() method, see https://github.com/rpominov/kefir/issues/145');\n\t    return awaiting(this, other);\n\t  };\n\t\n\t  Observable.prototype.valuesToErrors = function (fn) {\n\t    warn('You are using deprecated .valuesToErrors() method, see https://github.com/rpominov/kefir/issues/149');\n\t    return valuesToErrors(this, fn);\n\t  };\n\t\n\t  Observable.prototype.errorsToValues = function (fn) {\n\t    warn('You are using deprecated .errorsToValues() method, see https://github.com/rpominov/kefir/issues/149');\n\t    return errorsToValues(this, fn);\n\t  };\n\t\n\t  Observable.prototype.endOnError = function () {\n\t    warn('You are using deprecated .endOnError() method, see https://github.com/rpominov/kefir/issues/150');\n\t    return endOnError(this);\n\t  };\n\t\n\t  // Exports\n\t  // --------------------------------------------------------------------------\n\t\n\t  var Kefir = { Observable: Observable, Stream: Stream, Property: Property, never: never, later: later, interval: interval, sequentially: sequentially,\n\t    fromPoll: fromPoll, withInterval: withInterval, fromCallback: fromCallback, fromNodeCallback: fromNodeCallback, fromEvents: fromEvents, stream: stream,\n\t    constant: constant, constantError: constantError, fromPromise: fromPromise, fromESObservable: fromESObservable, combine: combine, zip: zip, merge: merge,\n\t    concat: concat$1, Pool: Pool, pool: pool, repeat: repeat };\n\t\n\t  Kefir.Kefir = Kefir;\n\t\n\t  exports.Kefir = Kefir;\n\t  exports.Observable = Observable;\n\t  exports.Stream = Stream;\n\t  exports.Property = Property;\n\t  exports.never = never;\n\t  exports.later = later;\n\t  exports.interval = interval;\n\t  exports.sequentially = sequentially;\n\t  exports.fromPoll = fromPoll;\n\t  exports.withInterval = withInterval;\n\t  exports.fromCallback = fromCallback;\n\t  exports.fromNodeCallback = fromNodeCallback;\n\t  exports.fromEvents = fromEvents;\n\t  exports.stream = stream;\n\t  exports.constant = constant;\n\t  exports.constantError = constantError;\n\t  exports.fromPromise = fromPromise;\n\t  exports.fromESObservable = fromESObservable;\n\t  exports.combine = combine;\n\t  exports.zip = zip;\n\t  exports.merge = merge;\n\t  exports.concat = concat$1;\n\t  exports.Pool = Pool;\n\t  exports.pool = pool;\n\t  exports.repeat = repeat;\n\t  exports['default'] = Kefir;\n\t\n\t}));\n\n/***/ },\n\n/***/ 165:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n\t * http://paperjs.org/\n\t *\n\t * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n\t * http://scratchdisk.com/ & http://jonathanpuckey.com/\n\t *\n\t * Distributed under the MIT license. See LICENSE file for details.\n\t *\n\t * All rights reserved.\n\t *\n\t * Date: Sun Oct 25 11:23:38 2015 +0100\n\t *\n\t ***\n\t *\n\t * Straps.js - Class inheritance library with support for bean-style accessors\n\t *\n\t * Copyright (c) 2006 - 2013 Juerg Lehni\n\t * http://scratchdisk.com/\n\t *\n\t * Distributed under the MIT license.\n\t *\n\t ***\n\t *\n\t * Acorn.js\n\t * http://marijnhaverbeke.nl/acorn/\n\t *\n\t * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n\t * created by Marijn Haverbeke and released under an MIT license.\n\t *\n\t */\n\t\n\tvar paper = new function(undefined) {\n\t\n\tvar Base = new function() {\n\t\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\t\n\t\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t},\n\t\n\t\t\tforIn = function(iter, bind) {\n\t\t\t\tfor (var i in this)\n\t\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t},\n\t\n\t\t\tcreate = Object.create || function(proto) {\n\t\t\t\treturn { __proto__: proto };\n\t\t\t},\n\t\n\t\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\t\treturn get\n\t\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t\t: null;\n\t\t\t},\n\t\n\t\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\t\tif (desc.get)\n\t\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\t\tif (desc.set)\n\t\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t\t} else {\n\t\t\t\t\tobj[name] = desc.value;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\n\t\t\tdefine = function(obj, name, desc) {\n\t\t\t\tdelete obj[name];\n\t\t\t\treturn _define(obj, name, desc);\n\t\t\t};\n\t\n\t\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\t\tvar beansNames = {};\n\t\n\t\t\tfunction field(name, val) {\n\t\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\t\tres = val,\n\t\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\tbean;\n\t\t\t\tif (!preserve || !prev) {\n\t\t\t\t\tif (isFunc && prev)\n\t\t\t\t\t\tval.base = prev;\n\t\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\t\tres.configurable = true;\n\t\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t\t}\n\t\t\t\t\tdefine(dest, name, res);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (src) {\n\t\t\t\tfor (var name in src) {\n\t\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\t\tfield(name);\n\t\t\t\t}\n\t\t\t\tfor (var name in beansNames) {\n\t\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dest;\n\t\t}\n\t\n\t\tfunction each(obj, iter, bind) {\n\t\t\tif (obj)\n\t\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t\t? forEach\n\t\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\t\treturn bind;\n\t\t}\n\t\n\t\tfunction set(obj, props, exclude) {\n\t\t\tfor (var key in props)\n\t\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\t\tobj[key] = props[key];\n\t\t\treturn obj;\n\t\t}\n\t\n\t\treturn inject(function Base() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tset(this, arguments[i]);\n\t\t}, {\n\t\t\tinject: function(src) {\n\t\t\t\tif (src) {\n\t\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\t\tif (statics !== src)\n\t\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t\t}\n\t\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\t\tthis.inject(arguments[i]);\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\textend: function() {\n\t\t\t\tvar base = this,\n\t\t\t\t\tctor,\n\t\t\t\t\tproto;\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\t\tbreak;\n\t\t\t\tctor = ctor || function() {\n\t\t\t\t\tbase.apply(this, arguments);\n\t\t\t\t};\n\t\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\t\tinject(ctor, this, true);\n\t\t\t\tif (arguments.length)\n\t\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\t\tctor.base = base;\n\t\t\t\treturn ctor;\n\t\t\t}\n\t\t}, true).inject({\n\t\t\tinject: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\t\tvar src = arguments[i];\n\t\t\t\t\tif (src)\n\t\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\textend: function() {\n\t\t\t\tvar res = create(this);\n\t\t\t\treturn res.inject.apply(res, arguments);\n\t\t\t},\n\t\n\t\t\teach: function(iter, bind) {\n\t\t\t\treturn each(this, iter, bind);\n\t\t\t},\n\t\n\t\t\tset: function(props) {\n\t\t\t\treturn set(this, props);\n\t\t\t},\n\t\n\t\t\tclone: function() {\n\t\t\t\treturn new this.constructor(this);\n\t\t\t},\n\t\n\t\t\tstatics: {\n\t\t\t\teach: each,\n\t\t\t\tcreate: create,\n\t\t\t\tdefine: define,\n\t\t\t\tdescribe: describe,\n\t\t\t\tset: set,\n\t\n\t\t\t\tclone: function(obj) {\n\t\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t\t},\n\t\n\t\t\t\tisPlainObject: function(obj) {\n\t\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t\t},\n\t\n\t\t\t\tpick: function(a, b) {\n\t\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\t\n\tif (true)\n\t\tmodule.exports = Base;\n\t\n\tBase.inject({\n\t\ttoString: function() {\n\t\t\treturn this._id != null\n\t\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t\t: ' @' + this._id)\n\t\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t\t}\n\t\t\t\t}, []).join(', ') + ' }';\n\t\t},\n\t\n\t\tgetClassName: function() {\n\t\t\treturn this._class || '';\n\t\t},\n\t\n\t\texportJSON: function(options) {\n\t\t\treturn Base.exportJSON(this, options);\n\t\t},\n\t\n\t\ttoJSON: function() {\n\t\t\treturn Base.serialize(this);\n\t\t},\n\t\n\t\t_set: function(props, exclude, dontCheck) {\n\t\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\t\tvar value = props[key];\n\t\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\n\t\tstatics: {\n\t\n\t\t\texports: {\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\n\t\t\textend: function extend() {\n\t\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\t\tname = res.prototype._class;\n\t\t\t\tif (name && !Base.exports[name])\n\t\t\t\t\tBase.exports[name] = res;\n\t\t\t\treturn res;\n\t\t\t},\n\t\n\t\t\tequals: function(obj1, obj2) {\n\t\t\t\tif (obj1 === obj2)\n\t\t\t\t\treturn true;\n\t\t\t\tif (obj1 && obj1.equals)\n\t\t\t\t\treturn obj1.equals(obj2);\n\t\t\t\tif (obj2 && obj2.equals)\n\t\t\t\t\treturn obj2.equals(obj1);\n\t\t\t\tif (obj1 && obj2\n\t\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\n\t\t\tread: function(list, start, options, length) {\n\t\t\t\tif (this === Base) {\n\t\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\t\tlist.__index++;\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tvar proto = this.prototype,\n\t\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\t\tif (!length)\n\t\t\t\t\tlength = list.length - index;\n\t\t\t\tvar obj = list[index];\n\t\t\t\tif (obj instanceof this\n\t\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\t\tif (readIndex)\n\t\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t\t}\n\t\t\t\tobj = Base.create(this.prototype);\n\t\t\t\tif (readIndex)\n\t\t\t\t\tobj.__read = true;\n\t\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t\t: list) || obj;\n\t\t\t\tif (readIndex) {\n\t\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\t\tobj.__read = undefined;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\n\t\t\tpeek: function(list, start) {\n\t\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t\t},\n\t\n\t\t\tremain: function(list) {\n\t\t\t\treturn list.length - (list.__index || 0);\n\t\t\t},\n\t\n\t\t\treadAll: function(list, start, options) {\n\t\t\t\tvar res = [],\n\t\t\t\t\tentry;\n\t\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\n\t\t\treadNamed: function(list, name, start, options, length) {\n\t\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\t\thasObject = value !== undefined;\n\t\t\t\tif (hasObject) {\n\t\t\t\t\tvar filtered = list._filtered;\n\t\t\t\t\tif (!filtered) {\n\t\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t\t}\n\t\t\t\t\tfiltered[name] = undefined;\n\t\t\t\t}\n\t\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t\t},\n\t\n\t\t\tgetNamed: function(list, name) {\n\t\t\t\tvar arg = list[0];\n\t\t\t\tif (list._hasObject === undefined)\n\t\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\t\tif (list._hasObject)\n\t\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t\t},\n\t\n\t\t\thasNamed: function(list, name) {\n\t\t\t\treturn !!this.getNamed(list, name);\n\t\t\t},\n\t\n\t\t\tisPlainValue: function(obj, asString) {\n\t\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t\t},\n\t\n\t\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\t\toptions = options || {};\n\t\n\t\t\t\tvar root = !dictionary,\n\t\t\t\t\tres;\n\t\t\t\tif (root) {\n\t\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\t\tdictionary = {\n\t\t\t\t\t\tlength: 0,\n\t\t\t\t\t\tdefinitions: {},\n\t\t\t\t\t\treferences: {},\n\t\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ref;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (obj && obj._serialize) {\n\t\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\t\tvar name = obj._class;\n\t\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\t\tres = [];\n\t\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t\t\tif (compact)\n\t\t\t\t\t\tres._compact = true;\n\t\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\t\tres = {};\n\t\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t\t} else {\n\t\t\t\t\tres = obj;\n\t\t\t\t}\n\t\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t\t: res;\n\t\t\t},\n\t\n\t\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\t\tvar res = json,\n\t\t\t\t\tisRoot = !_data;\n\t\t\t\t_data = _data || {};\n\t\t\t\tif (Array.isArray(json)) {\n\t\t\t\t\tvar type = json[0],\n\t\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t\tres = [];\n\t\t\t\t\tif (_isDictionary)\n\t\t\t\t\t\t_data.dictionary = res;\n\t\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\t\tisDictionary));\n\t\t\t\t\tif (type) {\n\t\t\t\t\t\tvar args = res;\n\t\t\t\t\t\tif (create) {\n\t\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\t\tres = {};\n\t\t\t\t\tif (_isDictionary)\n\t\t\t\t\t\t_data.dictionary = res;\n\t\t\t\t\tfor (var key in json)\n\t\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t\t}\n\t\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t\t? res[1]\n\t\t\t\t\t\t: res;\n\t\t\t},\n\t\n\t\t\texportJSON: function(obj, options) {\n\t\t\t\tvar json = Base.serialize(obj, options);\n\t\t\t\treturn options && options.asString === false\n\t\t\t\t\t\t? json\n\t\t\t\t\t\t: JSON.stringify(json);\n\t\t\t},\n\t\n\t\t\timportJSON: function(json, target) {\n\t\t\t\treturn Base.deserialize(\n\t\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tsplice: function(list, items, index, remove) {\n\t\t\t\tvar amount = items && items.length,\n\t\t\t\t\tappend = index === undefined;\n\t\t\t\tindex = append ? list.length : index;\n\t\t\t\tif (index > list.length)\n\t\t\t\t\tindex = list.length;\n\t\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\t\titems[i]._index = index + i;\n\t\t\t\tif (append) {\n\t\t\t\t\tlist.push.apply(list, items);\n\t\t\t\t\treturn [];\n\t\t\t\t} else {\n\t\t\t\t\tvar args = [index, remove];\n\t\t\t\t\tif (items)\n\t\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\t\tlist[i]._index = i;\n\t\t\t\t\treturn removed;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tcapitalize: function(str) {\n\t\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\t\treturn match.toUpperCase();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tcamelize: function(str) {\n\t\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\t\treturn chr.toUpperCase();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\thyphenate: function(str) {\n\t\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Emitter = {\n\t\ton: function(type, func) {\n\t\t\tif (typeof type !== 'string') {\n\t\t\t\tBase.each(type, function(value, key) {\n\t\t\t\t\tthis.on(key, value);\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\toff: function(type, func) {\n\t\t\tif (typeof type !== 'string') {\n\t\t\t\tBase.each(type, function(value, key) {\n\t\t\t\t\tthis.off(key, value);\n\t\t\t\t}, this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\t\tindex;\n\t\t\tif (handlers) {\n\t\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\t\tdelete this._callbacks[type];\n\t\t\t\t} else if (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\tonce: function(type, func) {\n\t\t\treturn this.on(type, function() {\n\t\t\t\tfunc.apply(this, arguments);\n\t\t\t\tthis.off(type, func);\n\t\t\t});\n\t\t},\n\t\n\t\temit: function(type, event) {\n\t\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\t\tif (!handlers)\n\t\t\t\treturn false;\n\t\t\tvar args = [].slice.call(arguments, 1);\n\t\t\thandlers = handlers.slice();\n\t\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\t\tif (event && event.stop)\n\t\t\t\t\t\tevent.stop();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\tresponds: function(type) {\n\t\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t\t},\n\t\n\t\tattach: '#on',\n\t\tdetach: '#off',\n\t\tfire: '#emit',\n\t\n\t\t_installEvents: function(install) {\n\t\t\tvar handlers = this._callbacks,\n\t\t\t\tkey = install ? 'install' : 'uninstall';\n\t\t\tfor (var type in handlers) {\n\t\t\t\tif (handlers[type].length > 0) {\n\t\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\t\tif (func)\n\t\t\t\t\t\tfunc.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tinject: function inject(src) {\n\t\t\t\tvar events = src._events;\n\t\t\t\tif (events) {\n\t\t\t\t\tvar types = {};\n\t\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\t\tname = '_' + name;\n\t\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\tsrc._eventTypes = types;\n\t\t\t\t}\n\t\t\t\treturn inject.base.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar PaperScope = Base.extend({\n\t\t_class: 'PaperScope',\n\t\n\t\tinitialize: function PaperScope() {\n\t\t\tpaper = this;\n\t\t\tthis.settings = new Base({\n\t\t\t\tapplyMatrix: true,\n\t\t\t\thandleSize: 4,\n\t\t\t\thitTolerance: 0\n\t\t\t});\n\t\t\tthis.project = null;\n\t\t\tthis.projects = [];\n\t\t\tthis.tools = [];\n\t\t\tthis.palettes = [];\n\t\t\tthis._id = PaperScope._id++;\n\t\t\tPaperScope._scopes[this._id] = this;\n\t\t\tvar proto = PaperScope.prototype;\n\t\t\tif (!this.support) {\n\t\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\t\tproto.support = {\n\t\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t\t};\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\n\t\t\tif (!this.browser) {\n\t\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t\t|| [])[0],\n\t\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\t\tif (platform)\n\t\t\t\t\tbrowser[platform] = true;\n\t\t\t\tagent.replace(\n\t\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (browser.chrome)\n\t\t\t\t\tdelete browser.webkit;\n\t\t\t\tif (browser.atom)\n\t\t\t\t\tdelete browser.chrome;\n\t\t\t}\n\t\t},\n\t\n\t\tversion: \"0.9.25\",\n\t\n\t\tgetView: function() {\n\t\t\treturn this.project && this.project.getView();\n\t\t},\n\t\n\t\tgetPaper: function() {\n\t\t\treturn this;\n\t\t},\n\t\n\t\texecute: function(code, url, options) {\n\t\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\t\tView.updateFocus();\n\t\t},\n\t\n\t\tinstall: function(scope) {\n\t\t\tvar that = this;\n\t\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\t\tBase.define(scope, key, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that[key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tfor (var key in this)\n\t\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\t\tscope[key] = this[key];\n\t\t},\n\t\n\t\tsetup: function(element) {\n\t\t\tpaper = this;\n\t\t\tthis.project = new Project(element);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tactivate: function() {\n\t\t\tpaper = this;\n\t\t},\n\t\n\t\tclear: function() {\n\t\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\t\tthis.projects[i].remove();\n\t\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\t\tthis.tools[i].remove();\n\t\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\t\tthis.palettes[i].remove();\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tthis.clear();\n\t\t\tdelete PaperScope._scopes[this._id];\n\t\t},\n\t\n\t\tstatics: new function() {\n\t\t\tfunction handleAttribute(name) {\n\t\t\t\tname += 'Attribute';\n\t\t\t\treturn function(el, attr) {\n\t\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\t_scopes: {},\n\t\t\t\t_id: 0,\n\t\n\t\t\t\tget: function(id) {\n\t\t\t\t\treturn this._scopes[id] || null;\n\t\t\t\t},\n\t\n\t\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\t\thasAttribute: handleAttribute('has')\n\t\t\t};\n\t\t}\n\t});\n\t\n\tvar PaperScopeItem = Base.extend(Emitter, {\n\t\n\t\tinitialize: function(activate) {\n\t\t\tthis._scope = paper;\n\t\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\t\tif (activate || !this._scope[this._reference])\n\t\t\t\tthis.activate();\n\t\t},\n\t\n\t\tactivate: function() {\n\t\t\tif (!this._scope)\n\t\t\t\treturn false;\n\t\t\tvar prev = this._scope[this._reference];\n\t\t\tif (prev && prev !== this)\n\t\t\t\tprev.emit('deactivate');\n\t\t\tthis._scope[this._reference] = this;\n\t\t\tthis.emit('activate', prev);\n\t\t\treturn true;\n\t\t},\n\t\n\t\tisActive: function() {\n\t\t\treturn this._scope[this._reference] === this;\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tif (this._index == null)\n\t\t\t\treturn false;\n\t\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\t\tif (this._scope[this._reference] == this)\n\t\t\t\tthis._scope[this._reference] = null;\n\t\t\tthis._scope = null;\n\t\t\treturn true;\n\t\t}\n\t});\n\t\n\tvar Formatter = Base.extend({\n\t\tinitialize: function(precision) {\n\t\t\tthis.precision = precision || 5;\n\t\t\tthis.multiplier = Math.pow(10, this.precision);\n\t\t},\n\t\n\t\tnumber: function(val) {\n\t\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t\t},\n\t\n\t\tpair: function(val1, val2, separator) {\n\t\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t\t},\n\t\n\t\tpoint: function(val, separator) {\n\t\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t\t},\n\t\n\t\tsize: function(val, separator) {\n\t\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t\t+ this.number(val.height);\n\t\t},\n\t\n\t\trectangle: function(val, separator) {\n\t\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t\t+ this.size(val, separator);\n\t\t}\n\t});\n\t\n\tFormatter.instance = new Formatter();\n\t\n\tvar Numerical = new function() {\n\t\n\t\tvar abscissas = [\n\t\t\t[  0.5773502691896257645091488],\n\t\t\t[0,0.7745966692414833770358531],\n\t\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t\t];\n\t\n\t\tvar weights = [\n\t\t\t[1],\n\t\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t\t];\n\t\n\t\tvar abs = Math.abs,\n\t\t\tsqrt = Math.sqrt,\n\t\t\tpow = Math.pow,\n\t\t\tEPSILON = 1e-12,\n\t\t\tMACHINE_EPSILON = 1.12e-16;\n\t\n\t\tfunction clip(value, min, max) {\n\t\t\treturn value < min ? min : value > max ? max : value;\n\t\t}\n\t\n\t\treturn {\n\t\t\tTOLERANCE: 1e-6,\n\t\t\tEPSILON: EPSILON,\n\t\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\t\tCURVETIME_EPSILON: 4e-7,\n\t\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\t\tWINDING_EPSILON: 2e-7,\n\t\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\t\tCLIPPING_EPSILON: 1e-7,\n\t\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\t\n\t\t\tisZero: function(val) {\n\t\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t\t},\n\t\n\t\t\tintegrate: function(f, a, b, n) {\n\t\t\t\tvar x = abscissas[n - 2],\n\t\t\t\t\tw = weights[n - 2],\n\t\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\t\tB = A + a,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\t\twhile (i < m) {\n\t\t\t\t\tvar Ax = A * x[i];\n\t\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t\t}\n\t\t\t\treturn A * sum;\n\t\t\t},\n\t\n\t\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\t\tvar fx = f(x),\n\t\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\t\tnx = x - dx;\n\t\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\t\treturn nx;\n\t\t\t\t\tif (fx > 0) {\n\t\t\t\t\t\tb = x;\n\t\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = x;\n\t\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn x;\n\t\t\t},\n\t\n\t\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\t\tvar count = 0,\n\t\t\t\t\teMin = min - EPSILON,\n\t\t\t\t\teMax = max + EPSILON,\n\t\t\t\t\tx1, x2 = Infinity,\n\t\t\t\t\tB = b,\n\t\t\t\t\tD;\n\t\t\t\tb /= -2;\n\t\t\t\tD = b * b - a * c;\n\t\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\t\tmult = 0;\n\t\t\t\t\t\ta *= mult;\n\t\t\t\t\t\tb *= mult;\n\t\t\t\t\t\tc *= mult;\n\t\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\t\tx1 = -c / B;\n\t\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\t\tif (R === 0) {\n\t\t\t\t\t\tx1 = c / a;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = R / a;\n\t\t\t\t\t\tx2 = c / R;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\t\tif (x2 !== x1\n\t\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\t\treturn count;\n\t\t\t},\n\t\n\t\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\t\tvar count = 0,\n\t\t\t\t\tx, b1, c2;\n\t\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\t\ta = b;\n\t\t\t\t\tb1 = c;\n\t\t\t\t\tc2 = d;\n\t\t\t\t\tx = Infinity;\n\t\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\t\tb1 = b;\n\t\t\t\t\tc2 = c;\n\t\t\t\t\tx = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\t\tx = -(b / a) / 3;\n\t\t\t\t\ttmp = a * x,\n\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\tt = q /a;\n\t\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\t\tt = -qd / a;\n\t\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\t\tx0 = x - s * r;\n\t\t\t\t\tif (x0 !== x) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\t\treturn count;\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar UID = {\n\t\t_id: 1,\n\t\t_pools: {},\n\t\n\t\tget: function(ctor) {\n\t\t\tif (ctor) {\n\t\t\t\tvar name = ctor._class,\n\t\t\t\t\tpool = this._pools[name];\n\t\t\t\tif (!pool)\n\t\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\t\treturn pool._id++;\n\t\t\t} else {\n\t\t\t\treturn this._id++;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar Point = Base.extend({\n\t\t_class: 'Point',\n\t\t_readIndex: true,\n\t\n\t\tinitialize: function Point(arg0, arg1) {\n\t\t\tvar type = typeof arg0;\n\t\t\tif (type === 'number') {\n\t\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\t\tthis.x = arg0;\n\t\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\t\tthis.x = arg0[0];\n\t\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t\t} else if (arg0.x != null) {\n\t\t\t\t\tthis.x = arg0.x;\n\t\t\t\t\tthis.y = arg0.y;\n\t\t\t\t} else if (arg0.width != null) {\n\t\t\t\t\tthis.x = arg0.width;\n\t\t\t\t\tthis.y = arg0.height;\n\t\t\t\t} else if (arg0.angle != null) {\n\t\t\t\t\tthis.x = arg0.length;\n\t\t\t\t\tthis.y = 0;\n\t\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t\t} else {\n\t\t\t\t\tthis.x = this.y = 0;\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tthis.__read = 0;\n\t\t\t\t}\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 1;\n\t\t\t}\n\t\t},\n\t\n\t\tset: function(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t},\n\t\n\t\tequals: function(point) {\n\t\t\treturn this === point || point\n\t\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Point(this.x, this.y);\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter;\n\t\t\treturn [f.number(this.x), f.number(this.y)];\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t},\n\t\n\t\tsetLength: function(length) {\n\t\t\tif (this.isZero()) {\n\t\t\t\tvar angle = this._angle || 0;\n\t\t\t\tthis.set(\n\t\t\t\t\tMath.cos(angle) * length,\n\t\t\t\t\tMath.sin(angle) * length\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvar scale = length / this.getLength();\n\t\t\t\tif (Numerical.isZero(scale))\n\t\t\t\t\tthis.getAngle();\n\t\t\t\tthis.set(\n\t\t\t\t\tthis.x * scale,\n\t\t\t\t\tthis.y * scale\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tgetAngle: function() {\n\t\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t\t},\n\t\n\t\tsetAngle: function(angle) {\n\t\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t\t},\n\t\n\t\tgetAngleInDegrees: '#getAngle',\n\t\tsetAngleInDegrees: '#setAngle',\n\t\n\t\tgetAngleInRadians: function() {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this.isZero()\n\t\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t\t} else {\n\t\t\t\tvar point = Point.read(arguments),\n\t\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t} else {\n\t\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tsetAngleInRadians: function(angle) {\n\t\t\tthis._angle = angle;\n\t\t\tif (!this.isZero()) {\n\t\t\t\tvar length = this.getLength();\n\t\t\t\tthis.set(\n\t\t\t\t\tMath.cos(angle) * length,\n\t\t\t\t\tMath.sin(angle) * length\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\n\t\tgetQuadrant: function() {\n\t\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t\t}\n\t}, {\n\t\tbeans: false,\n\t\n\t\tgetDirectedAngle: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t\t},\n\t\n\t\tgetDistance: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tx = point.x - this.x,\n\t\t\t\ty = point.y - this.y,\n\t\t\t\td = x * x + y * y,\n\t\t\t\tsquared = Base.read(arguments);\n\t\t\treturn squared ? d : Math.sqrt(d);\n\t\t},\n\t\n\t\tnormalize: function(length) {\n\t\t\tif (length === undefined)\n\t\t\t\tlength = 1;\n\t\t\tvar current = this.getLength(),\n\t\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\t\tif (scale >= 0)\n\t\t\t\tpoint._angle = this._angle;\n\t\t\treturn point;\n\t\t},\n\t\n\t\trotate: function(angle, center) {\n\t\t\tif (angle === 0)\n\t\t\t\treturn this.clone();\n\t\t\tangle = angle * Math.PI / 180;\n\t\t\tvar point = center ? this.subtract(center) : this,\n\t\t\t\tsin = Math.sin(angle),\n\t\t\t\tcos = Math.cos(angle);\n\t\t\tpoint = new Point(\n\t\t\t\tpoint.x * cos - point.y * sin,\n\t\t\t\tpoint.x * sin + point.y * cos\n\t\t\t);\n\t\t\treturn center ? point.add(center) : point;\n\t\t},\n\t\n\t\ttransform: function(matrix) {\n\t\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t\t},\n\t\n\t\tadd: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t\t},\n\t\n\t\tsubtract: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t\t},\n\t\n\t\tmultiply: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t\t},\n\t\n\t\tdivide: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t\t},\n\t\n\t\tmodulo: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t\t},\n\t\n\t\tnegate: function() {\n\t\t\treturn new Point(-this.x, -this.y);\n\t\t},\n\t\n\t\tisInside: function() {\n\t\t\treturn Rectangle.read(arguments).contains(this);\n\t\t},\n\t\n\t\tisClose: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\ttolerance = Base.read(arguments);\n\t\t\treturn this.getDistance(point) < tolerance;\n\t\t},\n\t\n\t\tisCollinear: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t\t},\n\t\n\t\tisColinear: '#isCollinear',\n\t\n\t\tisOrthogonal: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t\t},\n\t\n\t\tisZero: function() {\n\t\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t\t},\n\t\n\t\tisNaN: function() {\n\t\t\treturn isNaN(this.x) || isNaN(this.y);\n\t\t},\n\t\n\t\tdot: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn this.x * point.x + this.y * point.y;\n\t\t},\n\t\n\t\tcross: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn this.x * point.y - this.y * point.x;\n\t\t},\n\t\n\t\tproject: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tmin: function() {\n\t\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\t\treturn new Point(\n\t\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tmax: function() {\n\t\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\t\treturn new Point(\n\t\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\trandom: function() {\n\t\t\t\treturn new Point(Math.random(), Math.random());\n\t\t\t},\n\t\n\t\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t\t* 1e-7;\n\t\t\t},\n\t\n\t\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t\t* 1e-7;\n\t\t\t}\n\t\t}\n\t}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\t\tvar op = Math[name];\n\t\tthis[name] = function() {\n\t\t\treturn new Point(op(this.x), op(this.y));\n\t\t};\n\t}, {}));\n\t\n\tvar LinkedPoint = Point.extend({\n\t\tinitialize: function Point(x, y, owner, setter) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._owner = owner;\n\t\t\tthis._setter = setter;\n\t\t},\n\t\n\t\tset: function(x, y, _dontNotify) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetX: function() {\n\t\t\treturn this._x;\n\t\t},\n\t\n\t\tsetX: function(x) {\n\t\t\tthis._x = x;\n\t\t\tthis._owner[this._setter](this);\n\t\t},\n\t\n\t\tgetY: function() {\n\t\t\treturn this._y;\n\t\t},\n\t\n\t\tsetY: function(y) {\n\t\t\tthis._y = y;\n\t\t\tthis._owner[this._setter](this);\n\t\t}\n\t});\n\t\n\tvar Size = Base.extend({\n\t\t_class: 'Size',\n\t\t_readIndex: true,\n\t\n\t\tinitialize: function Size(arg0, arg1) {\n\t\t\tvar type = typeof arg0;\n\t\t\tif (type === 'number') {\n\t\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\t\tthis.width = arg0;\n\t\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\t\tthis.width = arg0[0];\n\t\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t\t} else if (arg0.width != null) {\n\t\t\t\t\tthis.width = arg0.width;\n\t\t\t\t\tthis.height = arg0.height;\n\t\t\t\t} else if (arg0.x != null) {\n\t\t\t\t\tthis.width = arg0.x;\n\t\t\t\t\tthis.height = arg0.y;\n\t\t\t\t} else {\n\t\t\t\t\tthis.width = this.height = 0;\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tthis.__read = 0;\n\t\t\t\t}\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 1;\n\t\t\t}\n\t\t},\n\t\n\t\tset: function(width, height) {\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn this;\n\t\t},\n\t\n\t\tequals: function(size) {\n\t\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t\t&& this.height === size.height\n\t\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t\t&& this.height === size[1]) || false;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Size(this.width, this.height);\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter;\n\t\t\treturn [f.number(this.width),\n\t\t\t\t\tf.number(this.height)];\n\t\t},\n\t\n\t\tadd: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t\t},\n\t\n\t\tsubtract: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t\t},\n\t\n\t\tmultiply: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t\t},\n\t\n\t\tdivide: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t\t},\n\t\n\t\tmodulo: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t\t},\n\t\n\t\tnegate: function() {\n\t\t\treturn new Size(-this.width, -this.height);\n\t\t},\n\t\n\t\tisZero: function() {\n\t\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t\t},\n\t\n\t\tisNaN: function() {\n\t\t\treturn isNaN(this.width) || isNaN(this.height);\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tmin: function(size1, size2) {\n\t\t\t\treturn new Size(\n\t\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\t\tMath.min(size1.height, size2.height));\n\t\t\t},\n\t\n\t\t\tmax: function(size1, size2) {\n\t\t\t\treturn new Size(\n\t\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\t\tMath.max(size1.height, size2.height));\n\t\t\t},\n\t\n\t\t\trandom: function() {\n\t\t\t\treturn new Size(Math.random(), Math.random());\n\t\t\t}\n\t\t}\n\t}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\t\tvar op = Math[name];\n\t\tthis[name] = function() {\n\t\t\treturn new Size(op(this.width), op(this.height));\n\t\t};\n\t}, {}));\n\t\n\tvar LinkedSize = Size.extend({\n\t\tinitialize: function Size(width, height, owner, setter) {\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tthis._owner = owner;\n\t\t\tthis._setter = setter;\n\t\t},\n\t\n\t\tset: function(width, height, _dontNotify) {\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetWidth: function() {\n\t\t\treturn this._width;\n\t\t},\n\t\n\t\tsetWidth: function(width) {\n\t\t\tthis._width = width;\n\t\t\tthis._owner[this._setter](this);\n\t\t},\n\t\n\t\tgetHeight: function() {\n\t\t\treturn this._height;\n\t\t},\n\t\n\t\tsetHeight: function(height) {\n\t\t\tthis._height = height;\n\t\t\tthis._owner[this._setter](this);\n\t\t}\n\t});\n\t\n\tvar Rectangle = Base.extend({\n\t\t_class: 'Rectangle',\n\t\t_readIndex: true,\n\t\tbeans: true,\n\t\n\t\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\t\tvar type = typeof arg0,\n\t\t\t\tread = 0;\n\t\t\tif (type === 'number') {\n\t\t\t\tthis.x = arg0;\n\t\t\t\tthis.y = arg1;\n\t\t\t\tthis.width = arg2;\n\t\t\t\tthis.height = arg3;\n\t\t\t\tread = 4;\n\t\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t\t} else if (arguments.length === 1) {\n\t\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\t\tthis.x = arg0[0];\n\t\t\t\t\tthis.y = arg0[1];\n\t\t\t\t\tthis.width = arg0[2];\n\t\t\t\t\tthis.height = arg0[3];\n\t\t\t\t\tread = 1;\n\t\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\t\tread = 1;\n\t\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\t\tthis._set(arg0);\n\t\t\t\t\tread = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!read) {\n\t\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\t\tnext = Base.peek(arguments);\n\t\t\t\tthis.x = point.x;\n\t\t\t\tthis.y = point.y;\n\t\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\t\tif (this.width < 0) {\n\t\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.height < 0) {\n\t\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\t\tthis.width = size.width;\n\t\t\t\t\tthis.height = size.height;\n\t\t\t\t}\n\t\t\t\tread = arguments.__index;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\t\n\t\tset: function(x, y, width, height) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn this;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t},\n\t\n\t\tequals: function(rect) {\n\t\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t\t: rect;\n\t\t\treturn rt === this\n\t\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t\t+ ' }';\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter;\n\t\t\treturn [f.number(this.x),\n\t\t\t\t\tf.number(this.y),\n\t\t\t\t\tf.number(this.width),\n\t\t\t\t\tf.number(this.height)];\n\t\t},\n\t\n\t\tgetPoint: function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t\t},\n\t\n\t\tsetPoint: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t},\n\t\n\t\tgetSize: function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t\t},\n\t\n\t\tsetSize: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\tif (this._fixX)\n\t\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\t\tif (this._fixY)\n\t\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\t\tthis.width = size.width;\n\t\t\tthis.height = size.height;\n\t\t\tthis._fixW = 1;\n\t\t\tthis._fixH = 1;\n\t\t},\n\t\n\t\tgetLeft: function() {\n\t\t\treturn this.x;\n\t\t},\n\t\n\t\tsetLeft: function(left) {\n\t\t\tif (!this._fixW)\n\t\t\t\tthis.width -= left - this.x;\n\t\t\tthis.x = left;\n\t\t\tthis._fixX = 0;\n\t\t},\n\t\n\t\tgetTop: function() {\n\t\t\treturn this.y;\n\t\t},\n\t\n\t\tsetTop: function(top) {\n\t\t\tif (!this._fixH)\n\t\t\t\tthis.height -= top - this.y;\n\t\t\tthis.y = top;\n\t\t\tthis._fixY = 0;\n\t\t},\n\t\n\t\tgetRight: function() {\n\t\t\treturn this.x + this.width;\n\t\t},\n\t\n\t\tsetRight: function(right) {\n\t\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\t\tthis._fixW = 0;\n\t\t\tif (this._fixW)\n\t\t\t\tthis.x = right - this.width;\n\t\t\telse\n\t\t\t\tthis.width = right - this.x;\n\t\t\tthis._fixX = 1;\n\t\t},\n\t\n\t\tgetBottom: function() {\n\t\t\treturn this.y + this.height;\n\t\t},\n\t\n\t\tsetBottom: function(bottom) {\n\t\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\t\tthis._fixH = 0;\n\t\t\tif (this._fixH)\n\t\t\t\tthis.y = bottom - this.height;\n\t\t\telse\n\t\t\t\tthis.height = bottom - this.y;\n\t\t\tthis._fixY = 1;\n\t\t},\n\t\n\t\tgetCenterX: function() {\n\t\t\treturn this.x + this.width * 0.5;\n\t\t},\n\t\n\t\tsetCenterX: function(x) {\n\t\t\tthis.x = x - this.width * 0.5;\n\t\t\tthis._fixX = 0.5;\n\t\t},\n\t\n\t\tgetCenterY: function() {\n\t\t\treturn this.y + this.height * 0.5;\n\t\t},\n\t\n\t\tsetCenterY: function(y) {\n\t\t\tthis.y = y - this.height * 0.5;\n\t\t\tthis._fixY = 0.5;\n\t\t},\n\t\n\t\tgetCenter: function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t\t},\n\t\n\t\tsetCenter: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis.setCenterX(point.x);\n\t\t\tthis.setCenterY(point.y);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\treturn this.width * this.height;\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this.width === 0 || this.height === 0;\n\t\t},\n\t\n\t\tcontains: function(arg) {\n\t\t\treturn arg && arg.width !== undefined\n\t\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t\t},\n\t\n\t\t_containsPoint: function(point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\treturn x >= this.x && y >= this.y\n\t\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t\t&& y <= this.y + this.height;\n\t\t},\n\t\n\t\t_containsRectangle: function(rect) {\n\t\t\tvar x = rect.x,\n\t\t\t\ty = rect.y;\n\t\t\treturn x >= this.x && y >= this.y\n\t\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t\t},\n\t\n\t\tintersects: function() {\n\t\t\tvar rect = Rectangle.read(arguments);\n\t\t\treturn rect.x + rect.width > this.x\n\t\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t\t&& rect.y < this.y + this.height;\n\t\t},\n\t\n\t\ttouches: function() {\n\t\t\tvar rect = Rectangle.read(arguments);\n\t\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t\t&& rect.y <= this.y + this.height;\n\t\t},\n\t\n\t\tintersect: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\tunite: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\tinclude: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\texpand: function() {\n\t\t\tvar amount = Size.read(arguments),\n\t\t\t\thor = amount.width,\n\t\t\t\tver = amount.height;\n\t\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\t\tthis.width + hor, this.height + ver);\n\t\t},\n\t\n\t\tscale: function(hor, ver) {\n\t\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t\t}\n\t}, Base.each([\n\t\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t\t],\n\t\tfunction(parts, index) {\n\t\t\tvar part = parts.join('');\n\t\t\tvar xFirst = /^[RL]/.test(part);\n\t\t\tif (index >= 4)\n\t\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\t\tgetX = 'get' + x,\n\t\t\t\tgetY = 'get' + y,\n\t\t\t\tsetX = 'set' + x,\n\t\t\t\tsetY = 'set' + y,\n\t\t\t\tget = 'get' + part,\n\t\t\t\tset = 'set' + part;\n\t\t\tthis[get] = function(_dontLink) {\n\t\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t\t};\n\t\t\tthis[set] = function() {\n\t\t\t\tvar point = Point.read(arguments);\n\t\t\t\tthis[setX](point.x);\n\t\t\t\tthis[setY](point.y);\n\t\t\t};\n\t\t}, {\n\t\t\tbeans: true\n\t\t}\n\t));\n\t\n\tvar LinkedRectangle = Rectangle.extend({\n\t\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\t\tthis.set(x, y, width, height, true);\n\t\t\tthis._owner = owner;\n\t\t\tthis._setter = setter;\n\t\t},\n\t\n\t\tset: function(x, y, width, height, _dontNotify) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\treturn this;\n\t\t}\n\t},\n\tnew function() {\n\t\tvar proto = Rectangle.prototype;\n\t\n\t\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\t\tvar part = Base.capitalize(key);\n\t\t\tvar internal = '_' + key;\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this[internal];\n\t\t\t};\n\t\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tthis[internal] = value;\n\t\t\t\tif (!this._dontNotify)\n\t\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\t\tfunction(key) {\n\t\t\t\tvar name = 'set' + key;\n\t\t\t\tthis[name] = function() {\n\t\t\t\t\tthis._dontNotify = true;\n\t\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\t\tthis._dontNotify = false;\n\t\t\t\t\tthis._owner[this._setter](this);\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tisSelected: function() {\n\t\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t\t},\n\t\n\t\t\t\tsetSelected: function(selected) {\n\t\t\t\t\tvar owner = this._owner;\n\t\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t});\n\t\n\tvar Matrix = Base.extend({\n\t\t_class: 'Matrix',\n\t\n\t\tinitialize: function Matrix(arg) {\n\t\t\tvar count = arguments.length,\n\t\t\t\tok = true;\n\t\t\tif (count === 6) {\n\t\t\t\tthis.set.apply(this, arguments);\n\t\t\t} else if (count === 1) {\n\t\t\t\tif (arg instanceof Matrix) {\n\t\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tthis.set.apply(this, arg);\n\t\t\t\t} else {\n\t\t\t\t\tok = false;\n\t\t\t\t}\n\t\t\t} else if (count === 0) {\n\t\t\t\tthis.reset();\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t\tif (!ok)\n\t\t\t\tthrow new Error('Unsupported matrix parameters');\n\t\t},\n\t\n\t\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\t\tthis._a = a;\n\t\t\tthis._c = c;\n\t\t\tthis._b = b;\n\t\t\tthis._d = d;\n\t\t\tthis._tx = tx;\n\t\t\tthis._ty = ty;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\treturn Base.serialize(this.getValues(), options);\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tvar owner = this._owner;\n\t\t\tif (owner) {\n\t\t\t\tif (owner._applyMatrix) {\n\t\t\t\t\towner.transform(null, true);\n\t\t\t\t} else {\n\t\t\t\t\towner._changed(9);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\t\tthis._tx, this._ty);\n\t\t},\n\t\n\t\tequals: function(mx) {\n\t\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t\t},\n\t\n\t\treset: function(_dontNotify) {\n\t\t\tthis._a = this._d = 1;\n\t\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tapply: function(recursively, _setApplyMatrix) {\n\t\t\tvar owner = this._owner;\n\t\t\tif (owner) {\n\t\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t\t_setApplyMatrix);\n\t\t\t\treturn this.isIdentity();\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\ttranslate: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tx = point.x,\n\t\t\t\ty = point.y;\n\t\t\tthis._tx += x * this._a + y * this._b;\n\t\t\tthis._ty += x * this._c + y * this._d;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tscale: function() {\n\t\t\tvar scale = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\t\tif (center)\n\t\t\t\tthis.translate(center);\n\t\t\tthis._a *= scale.x;\n\t\t\tthis._c *= scale.x;\n\t\t\tthis._b *= scale.y;\n\t\t\tthis._d *= scale.y;\n\t\t\tif (center)\n\t\t\t\tthis.translate(center.negate());\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\trotate: function(angle ) {\n\t\t\tangle *= Math.PI / 180;\n\t\t\tvar center = Point.read(arguments, 1),\n\t\t\t\tx = center.x,\n\t\t\t\ty = center.y,\n\t\t\t\tcos = Math.cos(angle),\n\t\t\t\tsin = Math.sin(angle),\n\t\t\t\ttx = x - x * cos + y * sin,\n\t\t\t\tty = y - x * sin - y * cos,\n\t\t\t\ta = this._a,\n\t\t\t\tb = this._b,\n\t\t\t\tc = this._c,\n\t\t\t\td = this._d;\n\t\t\tthis._a = cos * a + sin * b;\n\t\t\tthis._b = -sin * a + cos * b;\n\t\t\tthis._c = cos * c + sin * d;\n\t\t\tthis._d = -sin * c + cos * d;\n\t\t\tthis._tx += tx * a + ty * b;\n\t\t\tthis._ty += tx * c + ty * d;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tshear: function() {\n\t\t\tvar shear = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\t\tif (center)\n\t\t\t\tthis.translate(center);\n\t\t\tvar a = this._a,\n\t\t\t\tc = this._c;\n\t\t\tthis._a += shear.y * this._b;\n\t\t\tthis._c += shear.y * this._d;\n\t\t\tthis._b += shear.x * a;\n\t\t\tthis._d += shear.x * c;\n\t\t\tif (center)\n\t\t\t\tthis.translate(center.negate());\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tskew: function() {\n\t\t\tvar skew = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\t\ttoRadians = Math.PI / 180,\n\t\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\t\tMath.tan(skew.y * toRadians));\n\t\t\treturn this.shear(shear, center);\n\t\t},\n\t\n\t\tconcatenate: function(mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._b,\n\t\t\t\tc2 = mx._c,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + c2 * b1;\n\t\t\tthis._b = b2 * a1 + d2 * b1;\n\t\t\tthis._c = a2 * c1 + c2 * d1;\n\t\t\tthis._d = b2 * c1 + d2 * d1;\n\t\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tpreConcatenate: function(mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._b,\n\t\t\t\tc2 = mx._c,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + b2 * c1;\n\t\t\tthis._b = a2 * b1 + b2 * d1;\n\t\t\tthis._c = c2 * a1 + d2 * c1;\n\t\t\tthis._d = c2 * b1 + d2 * d1;\n\t\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tchain: function(mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._b,\n\t\t\t\tc2 = mx._c,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\treturn new Matrix(\n\t\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t\t},\n\t\n\t\tisIdentity: function() {\n\t\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t\t},\n\t\n\t\torNullIfIdentity: function() {\n\t\t\treturn this.isIdentity() ? null : this;\n\t\t},\n\t\n\t\tisInvertible: function() {\n\t\t\treturn !!this._getDeterminant();\n\t\t},\n\t\n\t\tisSingular: function() {\n\t\t\treturn !this._getDeterminant();\n\t\t},\n\t\n\t\ttransform: function( src, dst, count) {\n\t\t\treturn arguments.length < 3\n\t\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t\t: this._transformCoordinates(src, dst, count);\n\t\t},\n\t\n\t\t_transformPoint: function(point, dest, _dontNotify) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\treturn dest.set(\n\t\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t\t_dontNotify\n\t\t\t);\n\t\t},\n\t\n\t\t_transformCoordinates: function(src, dst, count) {\n\t\t\tvar i = 0,\n\t\t\t\tj = 0,\n\t\t\t\tmax = 2 * count;\n\t\t\twhile (i < max) {\n\t\t\t\tvar x = src[i++],\n\t\t\t\t\ty = src[i++];\n\t\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t\t}\n\t\t\treturn dst;\n\t\t},\n\t\n\t\t_transformCorners: function(rect) {\n\t\t\tvar x1 = rect.x,\n\t\t\t\ty1 = rect.y,\n\t\t\t\tx2 = x1 + rect.width,\n\t\t\t\ty2 = y1 + rect.height,\n\t\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\t\treturn this._transformCoordinates(coords, coords, 4);\n\t\t},\n\t\n\t\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\t\tvar coords = this._transformCorners(bounds),\n\t\t\t\tmin = coords.slice(0, 2),\n\t\t\t\tmax = min.slice();\n\t\t\tfor (var i = 2; i < 8; i++) {\n\t\t\t\tvar val = coords[i],\n\t\t\t\t\tj = i & 1;\n\t\t\t\tif (val < min[j])\n\t\t\t\t\tmin[j] = val;\n\t\t\t\telse if (val > max[j])\n\t\t\t\t\tmax[j] = val;\n\t\t\t}\n\t\t\tif (!dest)\n\t\t\t\tdest = new Rectangle();\n\t\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t\t_dontNotify);\n\t\t},\n\t\n\t\tinverseTransform: function() {\n\t\t\treturn this._inverseTransform(Point.read(arguments));\n\t\t},\n\t\n\t\t_getDeterminant: function() {\n\t\t\tvar det = this._a * this._d - this._b * this._c;\n\t\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t\t? det : null;\n\t\t},\n\t\n\t\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\t\tvar det = this._getDeterminant();\n\t\t\tif (!det)\n\t\t\t\treturn null;\n\t\t\tvar x = point.x - this._tx,\n\t\t\t\ty = point.y - this._ty;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\treturn dest.set(\n\t\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t\t_dontNotify\n\t\t\t);\n\t\t},\n\t\n\t\tdecompose: function() {\n\t\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\t\treturn null;\n\t\n\t\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\t\ta /= scaleX;\n\t\t\tb /= scaleX;\n\t\n\t\t\tvar shear = a * c + b * d;\n\t\t\tc -= a * shear;\n\t\t\td -= b * shear;\n\t\n\t\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\t\tc /= scaleY;\n\t\t\td /= scaleY;\n\t\t\tshear /= scaleY;\n\t\n\t\t\tif (a * d < b * c) {\n\t\t\t\ta = -a;\n\t\t\t\tb = -b;\n\t\t\t\tshear = -shear;\n\t\t\t\tscaleX = -scaleX;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\t\tshearing: shear\n\t\t\t};\n\t\t},\n\t\n\t\tgetValues: function() {\n\t\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t\t},\n\t\n\t\tgetTranslation: function() {\n\t\t\treturn new Point(this._tx, this._ty);\n\t\t},\n\t\n\t\tgetScaling: function() {\n\t\t\treturn (this.decompose() || {}).scaling;\n\t\t},\n\t\n\t\tgetRotation: function() {\n\t\t\treturn (this.decompose() || {}).rotation;\n\t\t},\n\t\n\t\tinverted: function() {\n\t\t\tvar det = this._getDeterminant();\n\t\t\treturn det && new Matrix(\n\t\t\t\t\tthis._d / det,\n\t\t\t\t\t-this._c / det,\n\t\t\t\t\t-this._b / det,\n\t\t\t\t\tthis._a / det,\n\t\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t\t},\n\t\n\t\tshiftless: function() {\n\t\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t\t},\n\t\n\t\tapplyToContext: function(ctx) {\n\t\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t\t}\n\t}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tprop = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[prop];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[prop] = value;\n\t\t\tthis._changed();\n\t\t};\n\t}, {}));\n\t\n\tvar Line = Base.extend({\n\t\t_class: 'Line',\n\t\n\t\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\t\tvar asVector = false;\n\t\t\tif (arguments.length >= 4) {\n\t\t\t\tthis._px = arg0;\n\t\t\t\tthis._py = arg1;\n\t\t\t\tthis._vx = arg2;\n\t\t\t\tthis._vy = arg3;\n\t\t\t\tasVector = arg4;\n\t\t\t} else {\n\t\t\t\tthis._px = arg0.x;\n\t\t\t\tthis._py = arg0.y;\n\t\t\t\tthis._vx = arg1.x;\n\t\t\t\tthis._vy = arg1.y;\n\t\t\t\tasVector = arg2;\n\t\t\t}\n\t\t\tif (!asVector) {\n\t\t\t\tthis._vx -= this._px;\n\t\t\t\tthis._vy -= this._py;\n\t\t\t}\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn new Point(this._px, this._py);\n\t\t},\n\t\n\t\tgetVector: function() {\n\t\t\treturn new Point(this._vx, this._vy);\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\treturn this.getVector().getLength();\n\t\t},\n\t\n\t\tintersect: function(line, isInfinite) {\n\t\t\treturn Line.intersect(\n\t\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\t\ttrue, isInfinite);\n\t\t},\n\t\n\t\tgetSide: function(point, isInfinite) {\n\t\t\treturn Line.getSide(\n\t\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t\t},\n\t\n\t\tgetDistance: function(point) {\n\t\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\t\tpoint.x, point.y, true));\n\t\t},\n\t\n\t\tisCollinear: function(line) {\n\t\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t\t},\n\t\n\t\tisOrthogonal: function(line) {\n\t\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\t\tisInfinite) {\n\t\t\t\tif (!asVector) {\n\t\t\t\t\tv1x -= p1x;\n\t\t\t\t\tv1y -= p1y;\n\t\t\t\t\tv2x -= p2x;\n\t\t\t\t\tv2y -= p2y;\n\t\t\t\t}\n\t\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\t\tif (isInfinite\n\t\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\t\tif (!asVector) {\n\t\t\t\t\tvx -= px;\n\t\t\t\t\tvy -= py;\n\t\t\t\t}\n\t\t\t\tvar v2x = x - px,\n\t\t\t\t\tv2y = y - py,\n\t\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t\t},\n\t\n\t\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\t\tif (!asVector) {\n\t\t\t\t\tvx -= px;\n\t\t\t\t\tvy -= py;\n\t\t\t\t}\n\t\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Project = PaperScopeItem.extend({\n\t\t_class: 'Project',\n\t\t_list: 'projects',\n\t\t_reference: 'project',\n\t\n\t\tinitialize: function Project(element) {\n\t\t\tPaperScopeItem.call(this, true);\n\t\t\tthis.layers = [];\n\t\t\tthis._activeLayer = null;\n\t\t\tthis.symbols = [];\n\t\t\tthis._currentStyle = new Style(null, null, this);\n\t\t\tthis._view = View.create(this,\n\t\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\t\tthis._selectedItems = {};\n\t\t\tthis._selectedItemCount = 0;\n\t\t\tthis._updateVersion = 0;\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t\t},\n\t\n\t\tclear: function() {\n\t\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\t\tthis.layers[i].remove();\n\t\t\tthis.symbols = [];\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this.layers.length === 0;\n\t\t},\n\t\n\t\tremove: function remove() {\n\t\t\tif (!remove.base.call(this))\n\t\t\t\treturn false;\n\t\t\tif (this._view)\n\t\t\t\tthis._view.remove();\n\t\t\treturn true;\n\t\t},\n\t\n\t\tgetView: function() {\n\t\t\treturn this._view;\n\t\t},\n\t\n\t\tgetCurrentStyle: function() {\n\t\t\treturn this._currentStyle;\n\t\t},\n\t\n\t\tsetCurrentStyle: function(style) {\n\t\t\tthis._currentStyle.initialize(style);\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._index;\n\t\t},\n\t\n\t\tgetOptions: function() {\n\t\t\treturn this._scope.settings;\n\t\t},\n\t\n\t\tgetActiveLayer: function() {\n\t\t\treturn this._activeLayer || new Layer({ project: this });\n\t\t},\n\t\n\t\tgetSelectedItems: function() {\n\t\t\tvar items = [];\n\t\t\tfor (var id in this._selectedItems) {\n\t\t\t\tvar item = this._selectedItems[id];\n\t\t\t\tif (item.isInserted())\n\t\t\t\t\titems.push(item);\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\tinsertChild: function(index, item, _preserve) {\n\t\t\tif (item instanceof Layer) {\n\t\t\t\titem._remove(false, true);\n\t\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\t\titem._setProject(this, true);\n\t\t\t\tif (this._changes)\n\t\t\t\t\titem._changed(5);\n\t\t\t\tif (!this._activeLayer)\n\t\t\t\t\tthis._activeLayer = item;\n\t\t\t} else if (item instanceof Item) {\n\t\t\t\t(this._activeLayer\n\t\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t\t} else {\n\t\t\t\titem = null;\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\t\n\t\taddChild: function(item, _preserve) {\n\t\t\treturn this.insertChild(undefined, item, _preserve);\n\t\t},\n\t\n\t\t_updateSelection: function(item) {\n\t\t\tvar id = item._id,\n\t\t\t\tselectedItems = this._selectedItems;\n\t\t\tif (item._selected) {\n\t\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\t\tthis._selectedItemCount++;\n\t\t\t\t\tselectedItems[id] = item;\n\t\t\t\t}\n\t\t\t} else if (selectedItems[id] === item) {\n\t\t\t\tthis._selectedItemCount--;\n\t\t\t\tdelete selectedItems[id];\n\t\t\t}\n\t\t},\n\t\n\t\tselectAll: function() {\n\t\t\tvar layers = this.layers;\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tlayers[i].setFullySelected(true);\n\t\t},\n\t\n\t\tdeselectAll: function() {\n\t\t\tvar selectedItems = this._selectedItems;\n\t\t\tfor (var i in selectedItems)\n\t\t\t\tselectedItems[i].setFullySelected(false);\n\t\t},\n\t\n\t\thitTest: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\t\tif (res) return res;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetItems: function(match) {\n\t\t\treturn Item._getItems(this.layers, match);\n\t\t},\n\t\n\t\tgetItem: function(match) {\n\t\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t\t},\n\t\n\t\timportJSON: function(json) {\n\t\t\tthis.activate();\n\t\t\tvar layer = this._activeLayer;\n\t\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t\t},\n\t\n\t\tdraw: function(ctx, matrix, pixelRatio) {\n\t\t\tthis._updateVersion++;\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tvar param = new Base({\n\t\t\t\toffset: new Point(0, 0),\n\t\t\t\tpixelRatio: pixelRatio,\n\t\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\t\tmatrices: [new Matrix()],\n\t\t\t\tupdateMatrix: true\n\t\t\t});\n\t\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\t\tlayers[i].draw(ctx, param);\n\t\t\tctx.restore();\n\t\n\t\t\tif (this._selectedItemCount > 0) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.strokeWidth = 1;\n\t\t\t\tvar items = this._selectedItems,\n\t\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\t\tversion = this._updateVersion;\n\t\t\t\tfor (var id in items)\n\t\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Symbol = Base.extend({\n\t\t_class: 'Symbol',\n\t\n\t\tinitialize: function Symbol(item, dontCenter) {\n\t\t\tthis._id = UID.get();\n\t\t\tthis.project = paper.project;\n\t\t\tthis.project.symbols.push(this);\n\t\t\tif (item)\n\t\t\t\tthis.setDefinition(item, dontCenter);\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn dictionary.add(this, function() {\n\t\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\t\toptions, false, dictionary);\n\t\t\t});\n\t\t},\n\t\n\t\t_changed: function(flags) {\n\t\t\tif (flags & 8) {\n\t\t\t\tItem._clearBoundsCache(this);\n\t\t\t}\n\t\t\tif (flags & 1) {\n\t\t\t\tthis.project._needsUpdate = true;\n\t\t\t}\n\t\t},\n\t\n\t\tgetDefinition: function() {\n\t\t\treturn this._definition;\n\t\t},\n\t\n\t\tsetDefinition: function(item, _dontCenter) {\n\t\t\tif (item._parentSymbol)\n\t\t\t\titem = item.clone();\n\t\t\tif (this._definition)\n\t\t\t\tthis._definition._parentSymbol = null;\n\t\t\tthis._definition = item;\n\t\t\titem.remove();\n\t\t\titem.setSelected(false);\n\t\t\tif (!_dontCenter)\n\t\t\t\titem.setPosition(new Point());\n\t\t\titem._parentSymbol = this;\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tplace: function(position) {\n\t\t\treturn new PlacedSymbol(this, position);\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Symbol(this._definition.clone(false));\n\t\t},\n\t\n\t\tequals: function(symbol) {\n\t\t\treturn symbol === this\n\t\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t\t|| false;\n\t\t}\n\t});\n\t\n\tvar Item = Base.extend(Emitter, {\n\t\tstatics: {\n\t\t\textend: function extend(src) {\n\t\t\t\tif (src._serializeFields)\n\t\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\t\treturn extend.base.apply(this, arguments);\n\t\t\t},\n\t\n\t\t\tNO_INSERT: { insert: false }\n\t\t},\n\t\n\t\t_class: 'Item',\n\t\t_applyMatrix: true,\n\t\t_canApplyMatrix: true,\n\t\t_boundsSelected: false,\n\t\t_selectChildren: false,\n\t\t_serializeFields: {\n\t\t\tname: null,\n\t\t\tapplyMatrix: null,\n\t\t\tmatrix: new Matrix(),\n\t\t\tpivot: null,\n\t\t\tlocked: false,\n\t\t\tvisible: true,\n\t\t\tblendMode: 'normal',\n\t\t\topacity: 1,\n\t\t\tguide: false,\n\t\t\tselected: false,\n\t\t\tclipMask: false,\n\t\t\tdata: {}\n\t\t},\n\t\n\t\tinitialize: function Item() {\n\t\t},\n\t\n\t\t_initialize: function(props, point) {\n\t\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\t\tinternal = hasProps && props.internal === true,\n\t\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\t\tproject = hasProps && props.project || paper.project;\n\t\t\tif (!internal)\n\t\t\t\tthis._id = UID.get();\n\t\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\t\tif (point)\n\t\t\t\tmatrix.translate(point);\n\t\t\tmatrix._owner = this;\n\t\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\t\tif (!this._project) {\n\t\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\t\tthis._setProject(project);\n\t\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\t\tthis.setParent(props.parent);\n\t\t\t\t} else {\n\t\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\t\ttrue);\n\t\t\treturn hasProps;\n\t\t},\n\t\n\t\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = {\n\t\t\t\t\tinstall: function(type) {\n\t\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function(type) {\n\t\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t),\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar props = {},\n\t\t\t\tthat = this;\n\t\n\t\t\tfunction serialize(fields) {\n\t\t\t\tfor (var key in fields) {\n\t\t\t\t\tvar value = that[key];\n\t\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tserialize(this._serializeFields);\n\t\t\tif (!(this instanceof Group))\n\t\t\t\tserialize(this._style._defaults);\n\t\t\treturn [ this._class, props ];\n\t\t},\n\t\n\t\t_changed: function(flags) {\n\t\t\tvar symbol = this._parentSymbol,\n\t\t\t\tcacheParent = this._parent || symbol,\n\t\t\t\tproject = this._project;\n\t\t\tif (flags & 8) {\n\t\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t\t}\n\t\t\tif (cacheParent\n\t\t\t\t\t&& (flags & 40)) {\n\t\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t\t}\n\t\t\tif (flags & 2) {\n\t\t\t\tItem._clearBoundsCache(this);\n\t\t\t}\n\t\t\tif (project) {\n\t\t\t\tif (flags & 1) {\n\t\t\t\t\tproject._needsUpdate = true;\n\t\t\t\t}\n\t\t\t\tif (project._changes) {\n\t\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\t\tif (entry) {\n\t\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (symbol)\n\t\t\t\tsymbol._changed(flags);\n\t\t},\n\t\n\t\tset: function(props) {\n\t\t\tif (props)\n\t\t\t\tthis._set(props);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetId: function() {\n\t\t\treturn this._id;\n\t\t},\n\t\n\t\tgetName: function() {\n\t\t\treturn this._name;\n\t\t},\n\t\n\t\tsetName: function(name, unique) {\n\t\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (name === (+name) + '')\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\t\tvar parent = this._parent;\n\t\t\tif (name && parent) {\n\t\t\t\tvar children = parent._children,\n\t\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\t\torig = name,\n\t\t\t\t\ti = 1;\n\t\t\t\twhile (unique && children[name])\n\t\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\t\tchildren[name] = this;\n\t\t\t}\n\t\t\tthis._name = name || undefined;\n\t\t\tthis._changed(128);\n\t\t},\n\t\n\t\tgetStyle: function() {\n\t\t\treturn this._style;\n\t\t},\n\t\n\t\tsetStyle: function(style) {\n\t\t\tthis.getStyle().set(style);\n\t\t}\n\t}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\t\tfunction(name) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\tname = '_' + name;\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this[name];\n\t\t\t};\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (value != this[name]) {\n\t\t\t\t\tthis[name] = value;\n\t\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t\t? 128 : 129);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t{}), {\n\t\tbeans: true,\n\t\n\t\t_locked: false,\n\t\n\t\t_visible: true,\n\t\n\t\t_blendMode: 'normal',\n\t\n\t\t_opacity: 1,\n\t\n\t\t_guide: false,\n\t\n\t\tisSelected: function() {\n\t\t\tif (this._selectChildren) {\n\t\t\t\tvar children = this._children;\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this._selected;\n\t\t},\n\t\n\t\tsetSelected: function(selected, noChildren) {\n\t\t\tif (!noChildren && this._selectChildren) {\n\t\t\t\tvar children = this._children;\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].setSelected(selected);\n\t\t\t}\n\t\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\t\tthis._selected = selected;\n\t\t\t\tthis._project._updateSelection(this);\n\t\t\t\tthis._changed(129);\n\t\t\t}\n\t\t},\n\t\n\t\t_selected: false,\n\t\n\t\tisFullySelected: function() {\n\t\t\tvar children = this._children;\n\t\t\tif (children && this._selected) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this._selected;\n\t\t},\n\t\n\t\tsetFullySelected: function(selected) {\n\t\t\tvar children = this._children;\n\t\t\tif (children) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t\t}\n\t\t\tthis.setSelected(selected, true);\n\t\t},\n\t\n\t\tisClipMask: function() {\n\t\t\treturn this._clipMask;\n\t\t},\n\t\n\t\tsetClipMask: function(clipMask) {\n\t\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\t\tthis._clipMask = clipMask;\n\t\t\t\tif (clipMask) {\n\t\t\t\t\tthis.setFillColor(null);\n\t\t\t\t\tthis.setStrokeColor(null);\n\t\t\t\t}\n\t\t\t\tthis._changed(129);\n\t\t\t\tif (this._parent)\n\t\t\t\t\tthis._parent._changed(1024);\n\t\t\t}\n\t\t},\n\t\n\t\t_clipMask: false,\n\t\n\t\tgetData: function() {\n\t\t\tif (!this._data)\n\t\t\t\tthis._data = {};\n\t\t\treturn this._data;\n\t\t},\n\t\n\t\tsetData: function(data) {\n\t\t\tthis._data = data;\n\t\t},\n\t\n\t\tgetPosition: function(_dontLink) {\n\t\t\tvar position = this._position,\n\t\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\t\tif (!position) {\n\t\t\t\tvar pivot = this._pivot;\n\t\t\t\tposition = this._position = pivot\n\t\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t\t}\n\t\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t\t},\n\t\n\t\tsetPosition: function() {\n\t\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t\t},\n\t\n\t\tgetPivot: function(_dontLink) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tif (pivot) {\n\t\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t\t}\n\t\t\treturn pivot;\n\t\t},\n\t\n\t\tsetPivot: function() {\n\t\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\t\tthis._position = undefined;\n\t\t},\n\t\n\t\t_pivot: null,\n\t}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t\t'internalBounds', 'internalRoughBounds'],\n\t\tfunction(key) {\n\t\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\t\tthis[getter] = function(_matrix) {\n\t\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t\t|| getter,\n\t\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\t\tinternalGetter);\n\t\t\t\treturn key === 'bounds'\n\t\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t\t: bounds;\n\t\t\t};\n\t\t},\n\t{\n\t\tbeans: true,\n\t\n\t\t_getBounds: function(getter, matrix, cacheItem) {\n\t\t\tvar children = this._children;\n\t\t\tif (!children || children.length == 0)\n\t\t\t\treturn new Rectangle();\n\t\t\tItem._updateBoundsCache(this, cacheItem);\n\t\t\tvar x1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isFinite(x1)\n\t\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t\t: new Rectangle();\n\t\t},\n\t\n\t\tsetBounds: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tbounds = this.getBounds(),\n\t\t\t\tmatrix = new Matrix(),\n\t\t\t\tcenter = rect.getCenter();\n\t\t\tmatrix.translate(center);\n\t\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\t\tmatrix.scale(\n\t\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t\t}\n\t\t\tcenter = bounds.getCenter();\n\t\t\tmatrix.translate(-center.x, -center.y);\n\t\t\tthis.transform(matrix);\n\t\t},\n\t\n\t\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\t\treturn this._bounds[cache].clone();\n\t\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\t\tmatrix || _matrix, cacheItem);\n\t\t\tif (cache) {\n\t\t\t\tif (!this._bounds)\n\t\t\t\t\tthis._bounds = {};\n\t\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\t\tcached._internal = !!internalGetter;\n\t\t\t}\n\t\t\treturn bounds;\n\t\t},\n\t\n\t\tstatics: {\n\t\t\t_updateBoundsCache: function(parent, item) {\n\t\t\t\tif (parent) {\n\t\t\t\t\tvar id = item._id,\n\t\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\t\tids: {},\n\t\t\t\t\t\t\tlist: []\n\t\t\t\t\t\t};\n\t\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\t\tref.list.push(item);\n\t\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_clearBoundsCache: function(item) {\n\t\t\t\tvar cache = item._boundsCache;\n\t\t\t\tif (cache) {\n\t\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\t\tvar other = list[i];\n\t\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t}), {\n\t\tbeans: true,\n\t\n\t\t_decompose: function() {\n\t\t\treturn this._decomposed = this._matrix.decompose();\n\t\t},\n\t\n\t\tgetRotation: function() {\n\t\t\tvar decomposed = this._decomposed || this._decompose();\n\t\t\treturn decomposed && decomposed.rotation;\n\t\t},\n\t\n\t\tsetRotation: function(rotation) {\n\t\t\tvar current = this.getRotation();\n\t\t\tif (current != null && rotation != null) {\n\t\t\t\tvar decomposed = this._decomposed;\n\t\t\t\tthis.rotate(rotation - current);\n\t\t\t\tdecomposed.rotation = rotation;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t},\n\t\n\t\tgetScaling: function(_dontLink) {\n\t\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t\t},\n\t\n\t\tsetScaling: function() {\n\t\t\tvar current = this.getScaling();\n\t\t\tif (current) {\n\t\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\t\tdecomposed = this._decomposed;\n\t\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\t\tdecomposed.scaling = scaling;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t},\n\t\n\t\tgetMatrix: function() {\n\t\t\treturn this._matrix;\n\t\t},\n\t\n\t\tsetMatrix: function() {\n\t\t\tvar matrix = this._matrix;\n\t\t\tmatrix.initialize.apply(matrix, arguments);\n\t\t\tif (this._applyMatrix) {\n\t\t\t\tthis.transform(null, true);\n\t\t\t} else {\n\t\t\t\tthis._changed(9);\n\t\t\t}\n\t\t},\n\t\n\t\tgetGlobalMatrix: function(_dontClone) {\n\t\t\tvar matrix = this._globalMatrix,\n\t\t\t\tupdateVersion = this._project._updateVersion;\n\t\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\t\tmatrix = null;\n\t\t\tif (!matrix) {\n\t\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\t\tvar parent = this._parent;\n\t\t\t\tif (parent)\n\t\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\t\tmatrix._updateVersion = updateVersion;\n\t\t\t}\n\t\t\treturn _dontClone ? matrix : matrix.clone();\n\t\t},\n\t\n\t\tgetApplyMatrix: function() {\n\t\t\treturn this._applyMatrix;\n\t\t},\n\t\n\t\tsetApplyMatrix: function(apply) {\n\t\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\t\tthis.transform(null, true);\n\t\t},\n\t\n\t\tgetTransformContent: '#getApplyMatrix',\n\t\tsetTransformContent: '#setApplyMatrix',\n\t}, {\n\t\tgetProject: function() {\n\t\t\treturn this._project;\n\t\t},\n\t\n\t\t_setProject: function(project, installEvents) {\n\t\t\tif (this._project !== project) {\n\t\t\t\tif (this._project)\n\t\t\t\t\tthis._installEvents(false);\n\t\t\t\tthis._project = project;\n\t\t\t\tvar children = this._children;\n\t\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._setProject(project);\n\t\t\t\tinstallEvents = true;\n\t\t\t}\n\t\t\tif (installEvents)\n\t\t\t\tthis._installEvents(true);\n\t\t},\n\t\n\t\tgetView: function() {\n\t\t\treturn this._project.getView();\n\t\t},\n\t\n\t\t_installEvents: function _installEvents(install) {\n\t\t\t_installEvents.base.call(this, install);\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._installEvents(install);\n\t\t},\n\t\n\t\tgetLayer: function() {\n\t\t\tvar parent = this;\n\t\t\twhile (parent = parent._parent) {\n\t\t\t\tif (parent instanceof Layer)\n\t\t\t\t\treturn parent;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetParent: function() {\n\t\t\treturn this._parent;\n\t\t},\n\t\n\t\tsetParent: function(item) {\n\t\t\treturn item.addChild(this);\n\t\t},\n\t\n\t\tgetChildren: function() {\n\t\t\treturn this._children;\n\t\t},\n\t\n\t\tsetChildren: function(items) {\n\t\t\tthis.removeChildren();\n\t\t\tthis.addChildren(items);\n\t\t},\n\t\n\t\tgetFirstChild: function() {\n\t\t\treturn this._children && this._children[0] || null;\n\t\t},\n\t\n\t\tgetLastChild: function() {\n\t\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t\t|| null;\n\t\t},\n\t\n\t\tgetNextSibling: function() {\n\t\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t\t},\n\t\n\t\tgetPreviousSibling: function() {\n\t\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._index;\n\t\t},\n\t\n\t\tequals: function(item) {\n\t\t\treturn item === this || item && this._class === item._class\n\t\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t\t&& this._locked === item._locked\n\t\t\t\t\t&& this._visible === item._visible\n\t\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t\t&& this._guide === item._guide\n\t\t\t\t\t&& this._equals(item)\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn Base.equals(this._children, item._children);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t\t},\n\t\n\t\t_clone: function(copy, insert, includeMatrix) {\n\t\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t\t'_clipMask', '_guide'],\n\t\t\t\tchildren = this._children;\n\t\t\tcopy.setStyle(this._style);\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t\t}\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\t\tcopy[key] = this[key];\n\t\t\t}\n\t\t\tif (includeMatrix !== false)\n\t\t\t\tcopy._matrix.initialize(this._matrix);\n\t\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\t\tcopy.setPivot(this._pivot);\n\t\t\tcopy.setSelected(this._selected);\n\t\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tcopy.insertAbove(this);\n\t\t\tif (this._name)\n\t\t\t\tcopy.setName(this._name, true);\n\t\t\treturn copy;\n\t\t},\n\t\n\t\tcopyTo: function(itemOrProject) {\n\t\t\treturn itemOrProject.addChild(this.clone(false));\n\t\t},\n\t\n\t\trasterize: function(resolution) {\n\t\t\tvar bounds = this.getStrokeBounds(),\n\t\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\t\traster.setCanvas(canvas);\n\t\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t\t.scale(1 / scale));\n\t\t\traster.insertAbove(this);\n\t\t\treturn raster;\n\t\t},\n\t\n\t\tcontains: function() {\n\t\t\treturn !!this._contains(\n\t\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t\t},\n\t\n\t\t_contains: function(point) {\n\t\t\tif (this._children) {\n\t\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn point.isInside(this.getInternalBounds());\n\t\t},\n\t\n\t\tisInside: function() {\n\t\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t\t},\n\t\n\t\t_asPathItem: function() {\n\t\t\treturn new Path.Rectangle({\n\t\t\t\trectangle: this.getInternalBounds(),\n\t\t\t\tmatrix: this._matrix,\n\t\t\t\tinsert: false,\n\t\t\t});\n\t\t},\n\t\n\t\tintersects: function(item, _matrix) {\n\t\t\tif (!(item instanceof Item))\n\t\t\t\treturn false;\n\t\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t\t},\n\t\n\t\thitTest: function() {\n\t\t\treturn this._hitTest(\n\t\t\t\t\tPoint.read(arguments),\n\t\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t\t},\n\t\n\t\t_hitTest: function(point, options) {\n\t\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t\t|| this.isEmpty())\n\t\t\t\treturn null;\n\t\n\t\t\tvar matrix = this._matrix,\n\t\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\t\tview = this.getView(),\n\t\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t\t).multiply(\n\t\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t\t);\n\t\t\tpoint = matrix._inverseTransform(point);\n\t\n\t\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\t\treturn null;\n\t\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\t\tthat = this,\n\t\t\t\tres;\n\t\n\t\t\tfunction checkBounds(type, part) {\n\t\t\t\tvar pt = bounds['get' + part]();\n\t\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t\t}\n\t\n\t\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\t\tvar bounds = this.getInternalBounds();\n\t\t\t\tif (options.center)\n\t\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\t\tif (!res && options.bounds) {\n\t\t\t\t\tvar points = [\n\t\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t\t];\n\t\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar children = !res && this._children;\n\t\t\tif (children) {\n\t\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t\t}\n\t\t\tif (!res && checkSelf)\n\t\t\t\tres = this._hitTestSelf(point, options);\n\t\t\tif (res && res.point)\n\t\t\t\tres.point = matrix.transform(res.point);\n\t\t\toptions._totalMatrix = parentTotalMatrix;\n\t\t\treturn res;\n\t\t},\n\t\n\t\t_getChildHitTestOptions: function(options) {\n\t\t\treturn options;\n\t\t},\n\t\n\t\t_hitTestSelf: function(point, options) {\n\t\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\t\treturn new HitResult('fill', this);\n\t\t},\n\t\n\t\tmatches: function(name, compare) {\n\t\t\tfunction matchObject(obj1, obj2) {\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar type = typeof name;\n\t\t\tif (type === 'object') {\n\t\t\t\tfor (var key in name) {\n\t\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (type === 'function') {\n\t\t\t\treturn name(this);\n\t\t\t} else {\n\t\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t\t: this[name];\n\t\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\t\tif (!compare.test(value))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\t\tif (!compare(value))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\tgetItems: function(match) {\n\t\t\treturn Item._getItems(this._children, match, this._matrix);\n\t\t},\n\t\n\t\tgetItem: function(match) {\n\t\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t\t[0] || null;\n\t\t},\n\t\n\t\tstatics: {\n\t\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\t\tfirstOnly) {\n\t\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\t\tinside = match.inside,\n\t\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\t\tparam = {\n\t\t\t\t\t\titems: [],\n\t\t\t\t\t\tinside: !!inside,\n\t\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\t\trect: rect,\n\t\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\t\tinsert: false\n\t\t\t\t\t\t})\n\t\t\t\t\t};\n\t\t\t\t\tif (bounds)\n\t\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t\t}\n\t\t\t\tvar items = param && param.items,\n\t\t\t\t\trect = param && param.rect;\n\t\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\t\tvar child = children[i],\n\t\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\t\tadd = true;\n\t\t\t\t\tif (rect) {\n\t\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\t\tadd = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\t\titems.push(child);\n\t\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\t\tfirstOnly);\n\t\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t}\n\t\t}\n\t}, {\n\t\n\t\timportJSON: function(json) {\n\t\t\tvar res = Base.importJSON(json, this);\n\t\t\treturn res !== this\n\t\t\t\t\t? this.addChild(res)\n\t\t\t\t\t: res;\n\t\t},\n\t\n\t\taddChild: function(item, _preserve) {\n\t\t\treturn this.insertChild(undefined, item, _preserve);\n\t\t},\n\t\n\t\tinsertChild: function(index, item, _preserve) {\n\t\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\t\treturn res && res[0];\n\t\t},\n\t\n\t\taddChildren: function(items, _preserve) {\n\t\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t\t},\n\t\n\t\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\t\tvar children = this._children;\n\t\t\tif (children && items && items.length > 0) {\n\t\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar item = items[i];\n\t\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tBase.splice(children, items, index, 0);\n\t\t\t\tvar project = this._project,\n\t\t\t\t\tnotifySelf = project && project._changes;\n\t\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\t\tvar item = items[i];\n\t\t\t\t\titem._parent = this;\n\t\t\t\t\titem._setProject(this._project, true);\n\t\t\t\t\tif (item._name)\n\t\t\t\t\t\titem.setName(item._name);\n\t\t\t\t\tif (notifySelf)\n\t\t\t\t\t\tthis._changed(5);\n\t\t\t\t}\n\t\t\t\tthis._changed(11);\n\t\t\t} else {\n\t\t\t\titems = null;\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\t_insertSibling: function(index, item, _preserve) {\n\t\t\treturn this._parent\n\t\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t\t: null;\n\t\t},\n\t\n\t\tinsertAbove: function(item, _preserve) {\n\t\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t\t},\n\t\n\t\tinsertBelow: function(item, _preserve) {\n\t\t\treturn item._insertSibling(item._index, this, _preserve);\n\t\t},\n\t\n\t\tsendToBack: function() {\n\t\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t\t.insertChild(0, this);\n\t\t},\n\t\n\t\tbringToFront: function() {\n\t\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t\t.addChild(this);\n\t\t},\n\t\n\t\tappendTop: '#addChild',\n\t\n\t\tappendBottom: function(item) {\n\t\t\treturn this.insertChild(0, item);\n\t\t},\n\t\n\t\tmoveAbove: '#insertAbove',\n\t\n\t\tmoveBelow: '#insertBelow',\n\t\n\t\treduce: function() {\n\t\t\tif (this._children && this._children.length === 1) {\n\t\t\t\tvar child = this._children[0].reduce();\n\t\t\t\tchild.insertAbove(this);\n\t\t\t\tchild.setStyle(this._style);\n\t\t\t\tthis.remove();\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_removeNamed: function() {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent) {\n\t\t\t\tvar children = parent._children,\n\t\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\t\tname = this._name,\n\t\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tif (children[name] == this)\n\t\t\t\t\t\tdelete children[name];\n\t\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\t\tif (namedArray.length) {\n\t\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t_remove: function(notifySelf, notifyParent) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent) {\n\t\t\t\tif (this._name)\n\t\t\t\t\tthis._removeNamed();\n\t\t\t\tif (this._index != null)\n\t\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\t\tthis._installEvents(false);\n\t\t\t\tif (notifySelf) {\n\t\t\t\t\tvar project = this._project;\n\t\t\t\t\tif (project && project._changes)\n\t\t\t\t\t\tthis._changed(5);\n\t\t\t\t}\n\t\t\t\tif (notifyParent)\n\t\t\t\t\tparent._changed(11);\n\t\t\t\tthis._parent = null;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\treturn this._remove(true, true);\n\t\t},\n\t\n\t\treplaceWith: function(item) {\n\t\t\tvar ok = item && item.insertBelow(this);\n\t\t\tif (ok)\n\t\t\t\tthis.remove();\n\t\t\treturn ok;\n\t\t},\n\t\n\t\tremoveChildren: function(from, to) {\n\t\t\tif (!this._children)\n\t\t\t\treturn null;\n\t\t\tfrom = from || 0;\n\t\t\tto = Base.pick(to, this._children.length);\n\t\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\t\tremoved[i]._remove(true, false);\n\t\t\t}\n\t\t\tif (removed.length > 0)\n\t\t\t\tthis._changed(11);\n\t\t\treturn removed;\n\t\t},\n\t\n\t\tclear: '#removeChildren',\n\t\n\t\treverseChildren: function() {\n\t\t\tif (this._children) {\n\t\t\t\tthis._children.reverse();\n\t\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\t\tthis._children[i]._index = i;\n\t\t\t\tthis._changed(11);\n\t\t\t}\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn !this._children || this._children.length === 0;\n\t\t},\n\t\n\t\tisEditable: function() {\n\t\t\tvar item = this;\n\t\t\twhile (item) {\n\t\t\t\tif (!item._visible || item._locked)\n\t\t\t\t\treturn false;\n\t\t\t\titem = item._parent;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\thasFill: function() {\n\t\t\treturn this.getStyle().hasFill();\n\t\t},\n\t\n\t\thasStroke: function() {\n\t\t\treturn this.getStyle().hasStroke();\n\t\t},\n\t\n\t\thasShadow: function() {\n\t\t\treturn this.getStyle().hasShadow();\n\t\t},\n\t\n\t\t_getOrder: function(item) {\n\t\t\tfunction getList(item) {\n\t\t\t\tvar list = [];\n\t\t\t\tdo {\n\t\t\t\t\tlist.unshift(item);\n\t\t\t\t} while (item = item._parent);\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar list1 = getList(this),\n\t\t\t\tlist2 = getList(item);\n\t\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\t\n\t\thasChildren: function() {\n\t\t\treturn this._children && this._children.length > 0;\n\t\t},\n\t\n\t\tisInserted: function() {\n\t\t\treturn this._parent ? this._parent.isInserted() : false;\n\t\t},\n\t\n\t\tisAbove: function(item) {\n\t\t\treturn this._getOrder(item) === -1;\n\t\t},\n\t\n\t\tisBelow: function(item) {\n\t\t\treturn this._getOrder(item) === 1;\n\t\t},\n\t\n\t\tisParent: function(item) {\n\t\t\treturn this._parent === item;\n\t\t},\n\t\n\t\tisChild: function(item) {\n\t\t\treturn item && item._parent === this;\n\t\t},\n\t\n\t\tisDescendant: function(item) {\n\t\t\tvar parent = this;\n\t\t\twhile (parent = parent._parent) {\n\t\t\t\tif (parent == item)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tisAncestor: function(item) {\n\t\t\treturn item ? item.isDescendant(this) : false;\n\t\t},\n\t\n\t\tisSibling: function(item) {\n\t\t\treturn this._parent === item._parent;\n\t\t},\n\t\n\t\tisGroupedWith: function(item) {\n\t\t\tvar parent = this._parent;\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._parent\n\t\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\t\treturn true;\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\ttranslate: function() {\n\t\t\tvar mx = new Matrix();\n\t\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t\t},\n\t\n\t\trotate: function(angle ) {\n\t\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t\t|| this.getPosition(true)));\n\t\t}\n\t}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\t\tthis[name] = function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\t\tcenter || this.getPosition(true)));\n\t\t};\n\t}, {\n\t\n\t}), {\n\t\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t\t_setApplyMatrix) {\n\t\t\tif (matrix && matrix.isIdentity())\n\t\t\t\tmatrix = null;\n\t\t\tvar _matrix = this._matrix,\n\t\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\t\tif (!matrix && !applyMatrix)\n\t\t\t\treturn this;\n\t\t\tif (matrix)\n\t\t\t\t_matrix.preConcatenate(matrix);\n\t\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\t\tvar pivot = this._pivot,\n\t\t\t\t\tstyle = this._style,\n\t\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\t\tif (pivot)\n\t\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\t\tif (fillColor)\n\t\t\t\t\tfillColor.transform(_matrix);\n\t\t\t\tif (strokeColor)\n\t\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t\t_matrix.reset(true);\n\t\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\t\tthis._applyMatrix = true;\n\t\t\t}\n\t\t\tvar bounds = this._bounds,\n\t\t\t\tposition = this._position;\n\t\t\tthis._changed(9);\n\t\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\t\tfor (var key in bounds) {\n\t\t\t\t\tvar rect = bounds[key];\n\t\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t\t}\n\t\t\t\tvar getter = this._boundsGetter,\n\t\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\t\tif (rect)\n\t\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\t\tthis._bounds = bounds;\n\t\t\t} else if (matrix && position) {\n\t\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\t\tvar children = this._children;\n\t\t\tif (children) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\t\tsetApplyMatrix);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\n\t\tglobalToLocal: function() {\n\t\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\t\tPoint.read(arguments));\n\t\t},\n\t\n\t\tlocalToGlobal: function() {\n\t\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\t\tPoint.read(arguments));\n\t\t},\n\t\n\t\tparentToLocal: function() {\n\t\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t\t},\n\t\n\t\tlocalToParent: function() {\n\t\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t\t},\n\t\n\t\tfitBounds: function(rectangle, fill) {\n\t\t\trectangle = Rectangle.read(arguments);\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\t\tthis.setBounds(newBounds);\n\t\t},\n\t\n\t\t_setStyles: function(ctx) {\n\t\t\tvar style = this._style,\n\t\t\t\tfillColor = style.getFillColor(),\n\t\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\t\tshadowColor = style.getShadowColor();\n\t\t\tif (fillColor)\n\t\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\t\tif (strokeColor) {\n\t\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\t\tif (strokeWidth > 0) {\n\t\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\t\tif (strokeJoin)\n\t\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\t\tif (strokeCap)\n\t\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\t\tif (miterLimit)\n\t\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (shadowColor) {\n\t\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\t\tif (shadowBlur > 0) {\n\t\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\t\tif (!this._visible || this._opacity === 0)\n\t\t\t\treturn;\n\t\t\tvar matrices = param.matrices,\n\t\t\t\tviewMatrix = param.viewMatrix,\n\t\t\t\tmatrix = this._matrix,\n\t\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\t\tif (!globalMatrix.isInvertible())\n\t\t\t\treturn;\n\t\n\t\t\tfunction getViewMatrix(matrix) {\n\t\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t\t}\n\t\n\t\t\tmatrices.push(globalMatrix);\n\t\t\tif (param.updateMatrix) {\n\t\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\t\tthis._globalMatrix = globalMatrix;\n\t\t\t}\n\t\n\t\t\tvar blendMode = this._blendMode,\n\t\t\t\topacity = this._opacity,\n\t\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t\t|| param.clip\n\t\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t\t&& this._canComposite(),\n\t\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\t\tmainCtx, itemOffset, prevOffset;\n\t\t\tif (!direct) {\n\t\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\t\treturn;\n\t\t\t\tprevOffset = param.offset;\n\t\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\t\tmainCtx = ctx;\n\t\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t\t.multiply(pixelRatio));\n\t\t\t\tif (pixelRatio !== 1)\n\t\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t\t}\n\t\t\tctx.save();\n\t\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\t\tclip = !direct && param.clipItem,\n\t\t\t\ttransform = !strokeMatrix || clip;\n\t\t\tif (direct) {\n\t\t\t\tctx.globalAlpha = opacity;\n\t\t\t\tif (nativeBlend)\n\t\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t\t} else if (transform) {\n\t\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t\t}\n\t\t\tif (transform)\n\t\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\t\tif (clip)\n\t\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\t\tif (strokeMatrix) {\n\t\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\t\tvar offset = param.offset;\n\t\t\t\tif (offset)\n\t\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t\t}\n\t\t\tthis._draw(ctx, param, strokeMatrix);\n\t\t\tctx.restore();\n\t\t\tmatrices.pop();\n\t\t\tif (param.clip && !param.dontFinish)\n\t\t\t\tctx.clip();\n\t\t\tif (!direct) {\n\t\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t\tparam.offset = prevOffset;\n\t\t\t}\n\t\t},\n\t\n\t\t_isUpdated: function(updateVersion) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\treturn parent._isUpdated(updateVersion);\n\t\t\tvar updated = this._updateVersion === updateVersion;\n\t\t\tif (!updated && parent && parent._visible\n\t\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\t\tthis._updateVersion = updateVersion;\n\t\t\t\tupdated = true;\n\t\t\t}\n\t\t\treturn updated;\n\t\t},\n\t\n\t\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\t\tif (this._drawSelected)\n\t\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\t\tif (this._boundsSelected) {\n\t\t\t\t\tvar half = size / 2,\n\t\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\t\tsize, size);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn false;\n\t\t}\n\t}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\t\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\t\tvar hash = {};\n\t\t\thash[name] = true;\n\t\t\treturn this.removeOn(hash);\n\t\t};\n\t}, {\n\t\n\t\tremoveOn: function(obj) {\n\t\t\tfor (var name in obj) {\n\t\t\t\tif (obj[name]) {\n\t\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\t\tproject = this._project,\n\t\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\t\tsets[key][this._id] = this;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t}));\n\t\n\tvar Group = Item.extend({\n\t\t_class: 'Group',\n\t\t_selectChildren: true,\n\t\t_serializeFields: {\n\t\t\tchildren: []\n\t\t},\n\t\n\t\tinitialize: function Group(arg) {\n\t\t\tthis._children = [];\n\t\t\tthis._namedChildren = {};\n\t\t\tif (!this._initialize(arg))\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t},\n\t\n\t\t_changed: function _changed(flags) {\n\t\t\t_changed.base.call(this, flags);\n\t\t\tif (flags & 1026) {\n\t\t\t\tthis._clipItem = undefined;\n\t\t\t}\n\t\t},\n\t\n\t\t_getClipItem: function() {\n\t\t\tvar clipItem = this._clipItem;\n\t\t\tif (clipItem === undefined) {\n\t\t\t\tclipItem = null;\n\t\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\t\tvar child = this._children[i];\n\t\t\t\t\tif (child._clipMask) {\n\t\t\t\t\t\tclipItem = child;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._clipItem = clipItem;\n\t\t\t}\n\t\t\treturn clipItem;\n\t\t},\n\t\n\t\tisClipped: function() {\n\t\t\treturn !!this._getClipItem();\n\t\t},\n\t\n\t\tsetClipped: function(clipped) {\n\t\t\tvar child = this.getFirstChild();\n\t\t\tif (child)\n\t\t\t\tchild.setClipMask(clipped);\n\t\t},\n\t\n\t\t_draw: function(ctx, param) {\n\t\t\tvar clip = param.clip,\n\t\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\t\tdraw = true;\n\t\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\t\tif (clip) {\n\t\t\t\tif (this._currentPath) {\n\t\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\t\tdraw = false;\n\t\t\t\t} else {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t\t}\n\t\t\t} else if (clipItem) {\n\t\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t\t}\n\t\t\tif (draw) {\n\t\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\t\tvar item = this._children[i];\n\t\t\t\t\tif (item !== clipItem)\n\t\t\t\t\t\titem.draw(ctx, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (clip) {\n\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Layer = Group.extend({\n\t\t_class: 'Layer',\n\t\n\t\tinitialize: function Layer(arg) {\n\t\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t\t? new Base(arg)\n\t\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\t\tinsert = props.insert;\n\t\t\tprops.insert = false;\n\t\t\tGroup.call(this, props);\n\t\t\tif (insert || insert === undefined) {\n\t\t\t\tthis._project.addChild(this);\n\t\t\t\tthis.activate();\n\t\t\t}\n\t\t},\n\t\n\t\t_remove: function _remove(notifySelf, notifyParent) {\n\t\t\tif (this._parent)\n\t\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\t\tif (this._index != null) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project._activeLayer === this)\n\t\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\t\tthis._installEvents(false);\n\t\t\t\tif (notifySelf && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t\tif (notifyParent) {\n\t\t\t\t\tproject._needsUpdate = true;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tgetNextSibling: function getNextSibling() {\n\t\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t\t},\n\t\n\t\tgetPreviousSibling: function getPreviousSibling() {\n\t\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t\t},\n\t\n\t\tisInserted: function isInserted() {\n\t\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t\t},\n\t\n\t\tactivate: function() {\n\t\t\tthis._project._activeLayer = this;\n\t\t},\n\t\n\t\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\t\treturn !this._parent\n\t\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t\t}\n\t});\n\t\n\tvar Shape = Item.extend({\n\t\t_class: 'Shape',\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_boundsSelected: true,\n\t\t_serializeFields: {\n\t\t\ttype: null,\n\t\t\tsize: null,\n\t\t\tradius: null\n\t\t},\n\t\n\t\tinitialize: function Shape(props) {\n\t\t\tthis._initialize(props);\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._type === item._type\n\t\t\t\t&& this._size.equals(item._size)\n\t\t\t\t&& Base.equals(this._radius, item._radius);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\t\tcopy.setType(this._type);\n\t\t\tcopy.setSize(this._size);\n\t\t\tcopy.setRadius(this._radius);\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\t\n\t\tsetType: function(type) {\n\t\t\tthis._type = type;\n\t\t},\n\t\n\t\tgetShape: '#getType',\n\t\tsetShape: '#setType',\n\t\n\t\tgetSize: function() {\n\t\t\tvar size = this._size;\n\t\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t\t},\n\t\n\t\tsetSize: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\tif (!this._size) {\n\t\t\t\tthis._size = size.clone();\n\t\t\t} else if (!this._size.equals(size)) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\t} else if (type === 'circle') {\n\t\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\t\tthis._radius = width / 2;\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t\t}\n\t\t\t\tthis._size.set(width, height);\n\t\t\t\tthis._changed(9);\n\t\t\t}\n\t\t},\n\t\n\t\tgetRadius: function() {\n\t\t\tvar rad = this._radius;\n\t\t\treturn this._type === 'circle'\n\t\t\t\t\t? rad\n\t\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t\t},\n\t\n\t\tsetRadius: function(radius) {\n\t\t\tvar type = this._type;\n\t\t\tif (type === 'circle') {\n\t\t\t\tif (radius === this._radius)\n\t\t\t\t\treturn;\n\t\t\t\tvar size = radius * 2;\n\t\t\t\tthis._radius = radius;\n\t\t\t\tthis._size.set(size, size);\n\t\t\t} else {\n\t\t\t\tradius = Size.read(arguments);\n\t\t\t\tif (!this._radius) {\n\t\t\t\t\tthis._radius = radius.clone();\n\t\t\t\t} else {\n\t\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\t\treturn;\n\t\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn false;\n\t\t},\n\t\n\t\ttoPath: function(insert) {\n\t\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\t\tcenter: new Point(),\n\t\t\t\tsize: this._size,\n\t\t\t\tradius: this._radius,\n\t\t\t\tinsert: false\n\t\t\t}), insert);\n\t\t\tif (paper.settings.applyMatrix)\n\t\t\t\tpath.setApplyMatrix(true);\n\t\t\treturn path;\n\t\t},\n\t\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar style = this._style,\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tuntransformed = !strokeMatrix;\n\t\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tisCircle = type === 'circle';\n\t\t\t\tif (!param.dontStart)\n\t\t\t\t\tctx.beginPath();\n\t\t\t\tif (untransformed && isCircle) {\n\t\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t\t} else {\n\t\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\t\tsize = this._size,\n\t\t\t\t\t\twidth = size.width,\n\t\t\t\t\t\theight = size.height;\n\t\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke)\n\t\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn !(this.hasFill() && this.hasStroke());\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t\t}\n\t},\n\tnew function() {\n\t\tfunction getCornerCenter(that, point, expand) {\n\t\t\tvar radius = that._radius;\n\t\t\tif (!radius.isZero()) {\n\t\t\t\tvar halfSize = that._size.divide(2);\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\t\treturn center;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getEllipseRadius(point, radius) {\n\t\t\tvar angle = point.getAngleInRadians(),\n\t\t\t\twidth = radius.width * 2,\n\t\t\t\theight = radius.height * 2,\n\t\t\t\tx = width * Math.sin(angle),\n\t\t\t\ty = height * Math.cos(angle);\n\t\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t\t}\n\t\n\t\treturn {\n\t\t\t_contains: function _contains(point) {\n\t\t\t\tif (this._type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\t\treturn center\n\t\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t\t} else {\n\t\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\t\tvar hit = false;\n\t\t\t\tif (this.hasStroke()) {\n\t\t\t\t\tvar type = this._type,\n\t\t\t\t\t\tradius = this._radius,\n\t\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\t\tif (center) {\n\t\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn hit\n\t\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}, {\n\t\n\tstatics: new function() {\n\t\tfunction createShape(type, point, size, radius, args) {\n\t\t\tvar item = new Shape(Base.getNamed(args));\n\t\t\titem._type = type;\n\t\t\titem._size = size;\n\t\t\titem._radius = radius;\n\t\t\treturn item.translate(point);\n\t\t}\n\t\n\t\treturn {\n\t\t\tCircle: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\t\targuments);\n\t\t\t},\n\t\n\t\t\tRectangle: function() {\n\t\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t\t},\n\t\n\t\t\tEllipse: function() {\n\t\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\t\tradius = ellipse.radius;\n\t\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\t\tradius, arguments);\n\t\t\t},\n\t\n\t\t\t_readEllipse: function(args) {\n\t\t\t\tvar center,\n\t\t\t\t\tradius;\n\t\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t\t} else {\n\t\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t\t}\n\t\t\t\treturn { center: center, radius: radius };\n\t\t\t}\n\t\t};\n\t}});\n\t\n\tvar Raster = Item.extend({\n\t\t_class: 'Raster',\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_boundsGetter: 'getBounds',\n\t\t_boundsSelected: true,\n\t\t_serializeFields: {\n\t\t\tcrossOrigin: null,\n\t\t\tsource: null\n\t\t},\n\t\n\t\tinitialize: function Raster(object, position) {\n\t\t\tif (!this._initialize(object,\n\t\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\t\tif (typeof object === 'string') {\n\t\t\t\t\tthis.setSource(object);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setImage(object);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this._size) {\n\t\t\t\tthis._size = new Size();\n\t\t\t\tthis._loaded = false;\n\t\t\t}\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this.getSource() === item.getSource();\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\t\timage = this._image,\n\t\t\t\tcanvas = this._canvas;\n\t\t\tif (image) {\n\t\t\t\tcopy.setImage(image);\n\t\t\t} else if (canvas) {\n\t\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\t\tcopy.setImage(copyCanvas);\n\t\t\t}\n\t\t\tcopy._crossOrigin = this._crossOrigin;\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\tgetSize: function() {\n\t\t\tvar size = this._size;\n\t\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\t\tthis, 'setSize');\n\t\t},\n\t\n\t\tsetSize: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\tif (!size.equals(this._size)) {\n\t\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\t\tvar element = this.getElement();\n\t\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\t\tif (element)\n\t\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t\t} else {\n\t\t\t\t\tif (this._canvas)\n\t\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\t\tthis._size = size.clone();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tgetWidth: function() {\n\t\t\treturn this._size ? this._size.width : 0;\n\t\t},\n\t\n\t\tsetWidth: function(width) {\n\t\t\tthis.setSize(width, this.getHeight());\n\t\t},\n\t\n\t\tgetHeight: function() {\n\t\t\treturn this._size ? this._size.height : 0;\n\t\t},\n\t\n\t\tsetHeight: function(height) {\n\t\t\tthis.setSize(this.getWidth(), height);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\tvar size = this._size;\n\t\t\treturn !size || size.width === 0 && size.height === 0;\n\t\t},\n\t\n\t\tgetResolution: function() {\n\t\t\tvar matrix = this._matrix,\n\t\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\t\treturn new Size(\n\t\t\t\t72 / u.getLength(),\n\t\t\t\t72 / v.getLength()\n\t\t\t);\n\t\t},\n\t\n\t\tgetPpi: '#getResolution',\n\t\n\t\tgetImage: function() {\n\t\t\treturn this._image;\n\t\t},\n\t\n\t\tsetImage: function(image) {\n\t\t\tif (this._canvas)\n\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\tif (image && image.getContext) {\n\t\t\t\tthis._image = null;\n\t\t\t\tthis._canvas = image;\n\t\t\t\tthis._loaded = true;\n\t\t\t} else {\n\t\t\t\tthis._image = image;\n\t\t\t\tthis._canvas = null;\n\t\t\t\tthis._loaded = image && image.complete;\n\t\t\t}\n\t\t\tthis._size = new Size(\n\t\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\t\tthis._context = null;\n\t\t\tthis._changed(521);\n\t\t},\n\t\n\t\tgetCanvas: function() {\n\t\t\tif (!this._canvas) {\n\t\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\t\ttry {\n\t\t\t\t\tif (this._image)\n\t\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._canvas;\n\t\t},\n\t\n\t\tsetCanvas: '#setImage',\n\t\n\t\tgetContext: function(modify) {\n\t\t\tif (!this._context)\n\t\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\t\tif (modify) {\n\t\t\t\tthis._image = null;\n\t\t\t\tthis._changed(513);\n\t\t\t}\n\t\t\treturn this._context;\n\t\t},\n\t\n\t\tsetContext: function(context) {\n\t\t\tthis._context = context;\n\t\t},\n\t\n\t\tgetSource: function() {\n\t\t\treturn this._image && this._image.src || this.toDataURL();\n\t\t},\n\t\n\t\tsetSource: function(src) {\n\t\t\tvar that = this,\n\t\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\t\timage;\n\t\n\t\t\tfunction loaded() {\n\t\t\t\tvar view = that.getView();\n\t\t\t\tif (view) {\n\t\t\t\t\tpaper = view._scope;\n\t\t\t\t\tthat.setImage(image);\n\t\t\t\t\tthat.emit('load');\n\t\t\t\t\tview.update();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\timage = document.getElementById(src) || new Image();\n\t\t\tif (crossOrigin)\n\t\t\t\timage.crossOrigin = crossOrigin;\n\t\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\t\tsetTimeout(loaded, 0);\n\t\t\t} else {\n\t\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\t\tif (!image.src)\n\t\t\t\t\timage.src = src;\n\t\t\t}\n\t\t\tthis.setImage(image);\n\t\t},\n\t\n\t\tgetCrossOrigin: function() {\n\t\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t\t},\n\t\n\t\tsetCrossOrigin: function(crossOrigin) {\n\t\t\tthis._crossOrigin = crossOrigin;\n\t\t\tif (this._image)\n\t\t\t\tthis._image.crossOrigin = crossOrigin;\n\t\t},\n\t\n\t\tgetElement: function() {\n\t\t\treturn this._canvas || this._loaded && this._image;\n\t\t}\n\t}, {\n\t\tbeans: false,\n\t\n\t\tgetSubCanvas: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\t\treturn ctx.canvas;\n\t\t},\n\t\n\t\tgetSubRaster: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\traster = new Raster(Item.NO_INSERT);\n\t\t\traster.setImage(this.getSubCanvas(rect));\n\t\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\t\traster._matrix.preConcatenate(this._matrix);\n\t\t\traster.insertAbove(this);\n\t\t\treturn raster;\n\t\t},\n\t\n\t\ttoDataURL: function() {\n\t\t\tvar src = this._image && this._image.src;\n\t\t\tif (/^data:/.test(src))\n\t\t\t\treturn src;\n\t\t\tvar canvas = this.getCanvas();\n\t\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t\t},\n\t\n\t\tdrawImage: function(image ) {\n\t\t\tvar point = Point.read(arguments, 1);\n\t\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t\t},\n\t\n\t\tgetAverageColor: function(object) {\n\t\t\tvar bounds, path;\n\t\t\tif (!object) {\n\t\t\t\tbounds = this.getBounds();\n\t\t\t} else if (object instanceof PathItem) {\n\t\t\t\tpath = object;\n\t\t\t\tbounds = object.getBounds();\n\t\t\t} else if (object.width) {\n\t\t\t\tbounds = new Rectangle(object);\n\t\t\t} else if (object.x) {\n\t\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t\t}\n\t\t\tvar sampleSize = 32,\n\t\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\t\tvar ctx = Raster._sampleContext;\n\t\t\tif (!ctx) {\n\t\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\t\tnew Size(sampleSize));\n\t\t\t} else {\n\t\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t\t}\n\t\t\tctx.save();\n\t\t\tvar matrix = new Matrix()\n\t\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tif (path)\n\t\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\t\tthis._matrix.applyToContext(ctx);\n\t\t\tvar element = this.getElement(),\n\t\t\t\tsize = this._size;\n\t\t\tif (element)\n\t\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\t\tctx.restore();\n\t\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\t\tMath.ceil(height)).data,\n\t\t\t\tchannels = [0, 0, 0],\n\t\t\t\ttotal = 0;\n\t\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\t\tvar alpha = pixels[i + 3];\n\t\t\t\ttotal += alpha;\n\t\t\t\talpha /= 255;\n\t\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t\t}\n\t\t\tfor (var i = 0; i < 3; i++)\n\t\t\t\tchannels[i] /= total;\n\t\t\treturn total ? Color.read(channels) : null;\n\t\t},\n\t\n\t\tgetPixel: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\t\tdata[3] / 255);\n\t\t},\n\t\n\t\tsetPixel: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcolor = Color.read(arguments),\n\t\t\t\tcomponents = color._convert('rgb'),\n\t\t\t\talpha = color._alpha,\n\t\t\t\tctx = this.getContext(true),\n\t\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\t\tdata = imageData.data;\n\t\t\tdata[0] = components[0] * 255;\n\t\t\tdata[1] = components[1] * 255;\n\t\t\tdata[2] = components[2] * 255;\n\t\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\t\tctx.putImageData(imageData, point.x, point.y);\n\t\t},\n\t\n\t\tcreateImageData: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn this.getContext().createImageData(size.width, size.height);\n\t\t},\n\t\n\t\tgetImageData: function() {\n\t\t\tvar rect = Rectangle.read(arguments);\n\t\t\tif (rect.isEmpty())\n\t\t\t\trect = new Rectangle(this._size);\n\t\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\t\trect.width, rect.height);\n\t\t},\n\t\n\t\tsetImageData: function(data ) {\n\t\t\tvar point = Point.read(arguments, 1);\n\t\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t\t},\n\t\n\t\t_hitTestSelf: function(point) {\n\t\t\tif (this._contains(point)) {\n\t\t\t\tvar that = this;\n\t\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tget: function() {\n\t\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\n\t\t_draw: function(ctx) {\n\t\t\tvar element = this.getElement();\n\t\t\tif (element) {\n\t\t\t\tctx.globalAlpha = this._opacity;\n\t\t\t\tctx.drawImage(element,\n\t\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn true;\n\t\t}\n\t});\n\t\n\tvar PlacedSymbol = Item.extend({\n\t\t_class: 'PlacedSymbol',\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t\t_boundsSelected: true,\n\t\t_serializeFields: {\n\t\t\tsymbol: null\n\t\t},\n\t\n\t\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\t\tif (!this._initialize(arg0,\n\t\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._symbol === item._symbol;\n\t\t},\n\t\n\t\tgetSymbol: function() {\n\t\t\treturn this._symbol;\n\t\t},\n\t\n\t\tsetSymbol: function(symbol) {\n\t\t\tthis._symbol = symbol;\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\t\tcopy.setSymbol(this._symbol);\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this._symbol._definition.isEmpty();\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix, cacheItem) {\n\t\t\tvar definition = this.symbol._definition;\n\t\t\treturn definition._getCachedBounds(getter,\n\t\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t\t},\n\t\n\t\t_hitTestSelf: function(point, options) {\n\t\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\t\tif (res)\n\t\t\t\tres.item = this;\n\t\t\treturn res;\n\t\t},\n\t\n\t\t_draw: function(ctx, param) {\n\t\t\tthis.symbol._definition.draw(ctx, param);\n\t\t}\n\t\n\t});\n\t\n\tvar HitResult = Base.extend({\n\t\t_class: 'HitResult',\n\t\n\t\tinitialize: function HitResult(type, item, values) {\n\t\t\tthis.type = type;\n\t\t\tthis.item = item;\n\t\t\tif (values) {\n\t\t\t\tvalues.enumerable = true;\n\t\t\t\tthis.inject(values);\n\t\t\t}\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tgetOptions: function(options) {\n\t\t\t\treturn new Base({\n\t\t\t\t\ttype: null,\n\t\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\t\tfill: !options,\n\t\t\t\t\tstroke: !options,\n\t\t\t\t\tsegments: !options,\n\t\t\t\t\thandles: false,\n\t\t\t\t\tends: false,\n\t\t\t\t\tcenter: false,\n\t\t\t\t\tbounds: false,\n\t\t\t\t\tguides: false,\n\t\t\t\t\tselected: false\n\t\t\t\t}, options);\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Segment = Base.extend({\n\t\t_class: 'Segment',\n\t\tbeans: true,\n\t\n\t\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\t\tvar count = arguments.length,\n\t\t\t\tpoint, handleIn, handleOut;\n\t\t\tif (count === 0) {\n\t\t\t} else if (count === 1) {\n\t\t\t\tif ('point' in arg0) {\n\t\t\t\t\tpoint = arg0.point;\n\t\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t\t} else {\n\t\t\t\t\tpoint = arg0;\n\t\t\t\t}\n\t\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\t\tpoint = arguments;\n\t\t\t} else if (count <= 3) {\n\t\t\t\tpoint = arg0;\n\t\t\t\thandleIn = arg1;\n\t\t\t\thandleOut = arg2;\n\t\t\t} else {\n\t\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t\t}\n\t\t\tnew SegmentPoint(point, this, '_point');\n\t\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t\t: this._point,\n\t\t\t\t\toptions, true);\n\t\t},\n\t\n\t\t_changed: function(point) {\n\t\t\tvar path = this._path;\n\t\t\tif (!path)\n\t\t\t\treturn;\n\t\t\tvar curves = path._curves,\n\t\t\t\tindex = this._index,\n\t\t\t\tcurve;\n\t\t\tif (curves) {\n\t\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\t\tcurve._changed();\n\t\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t\tpath._changed(25);\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn this._point;\n\t\t},\n\t\n\t\tsetPoint: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._point.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandleIn: function() {\n\t\t\treturn this._handleIn;\n\t\t},\n\t\n\t\tsetHandleIn: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._handleIn.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandleOut: function() {\n\t\t\treturn this._handleOut;\n\t\t},\n\t\n\t\tsetHandleOut: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._handleOut.set(point.x, point.y);\n\t\t},\n\t\n\t\thasHandles: function() {\n\t\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t\t},\n\t\n\t\tclearHandles: function() {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t},\n\t\n\t\t_selectionState: 0,\n\t\n\t\tisSelected: function(_point) {\n\t\t\tvar state = this._selectionState;\n\t\t\treturn !_point ? !!(state & 7)\n\t\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t\t: false;\n\t\t},\n\t\n\t\tsetSelected: function(selected, _point) {\n\t\t\tvar path = this._path,\n\t\t\t\tselected = !!selected,\n\t\t\t\tstate = this._selectionState,\n\t\t\t\toldState = state,\n\t\t\t\tflag = !_point ? 7\n\t\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t\t: 0;\n\t\t\tif (selected) {\n\t\t\t\tstate |= flag;\n\t\t\t} else {\n\t\t\t\tstate &= ~flag;\n\t\t\t}\n\t\t\tthis._selectionState = state;\n\t\t\tif (path && state !== oldState) {\n\t\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\t\tpath._changed(129);\n\t\t\t}\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._index !== undefined ? this._index : null;\n\t\t},\n\t\n\t\tgetPath: function() {\n\t\t\treturn this._path || null;\n\t\t},\n\t\n\t\tgetCurve: function() {\n\t\t\tvar path = this._path,\n\t\t\t\tindex = this._index;\n\t\t\tif (path) {\n\t\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\t\tindex--;\n\t\t\t\treturn path.getCurves()[index] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetLocation: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve\n\t\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t\t: null;\n\t\t},\n\t\n\t\tgetNext: function() {\n\t\t\tvar segments = this._path && this._path._segments;\n\t\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t\t},\n\t\n\t\tgetPrevious: function() {\n\t\t\tvar segments = this._path && this._path._segments;\n\t\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t\t},\n\t\n\t\tisFirst: function() {\n\t\t\treturn this._index === 0;\n\t\t},\n\t\n\t\tisLast: function() {\n\t\t\tvar path = this._path;\n\t\t\treturn path && this._index === path._segments.length - 1 || false;\n\t\t},\n\t\n\t\treverse: function() {\n\t\t\tvar handleIn = this._handleIn,\n\t\t\t\thandleOut = this._handleOut,\n\t\t\t\tinX = handleIn._x,\n\t\t\t\tinY = handleIn._y;\n\t\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\t\thandleOut.set(inX, inY);\n\t\t},\n\t\n\t\treversed: function() {\n\t\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t\t},\n\t\n\t\tequals: function(segment) {\n\t\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar parts = [ 'point: ' + this._point ];\n\t\t\tif (!this._handleIn.isZero())\n\t\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\t\tif (!this._handleOut.isZero())\n\t\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\t\n\t\ttransform: function(matrix) {\n\t\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\t_transformCoordinates: function(matrix, coords, change) {\n\t\t\tvar point = this._point,\n\t\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t\t? this._handleIn : null,\n\t\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t\t? this._handleOut : null,\n\t\t\t\tx = point._x,\n\t\t\t\ty = point._y,\n\t\t\t\ti = 2;\n\t\t\tcoords[0] = x;\n\t\t\tcoords[1] = y;\n\t\t\tif (handleIn) {\n\t\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\t\tcoords[i++] = handleIn._y + y;\n\t\t\t}\n\t\t\tif (handleOut) {\n\t\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\t\tcoords[i++] = handleOut._y + y;\n\t\t\t}\n\t\t\tif (matrix) {\n\t\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\t\tx = coords[0];\n\t\t\t\ty = coords[1];\n\t\t\t\tif (change) {\n\t\t\t\t\tpoint._x = x;\n\t\t\t\t\tpoint._y = y;\n\t\t\t\t\ti  = 2;\n\t\t\t\t\tif (handleIn) {\n\t\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t\t}\n\t\t\t\t\tif (handleOut) {\n\t\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!handleIn) {\n\t\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t\t}\n\t\t\t\t\tif (!handleOut) {\n\t\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn coords;\n\t\t}\n\t});\n\t\n\tvar SegmentPoint = Point.extend({\n\t\tinitialize: function SegmentPoint(point, owner, key) {\n\t\t\tvar x, y, selected;\n\t\t\tif (!point) {\n\t\t\t\tx = y = 0;\n\t\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\t\ty = point[1];\n\t\t\t} else {\n\t\t\t\tvar pt = point;\n\t\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\t\tpt = Point.read(arguments);\n\t\t\t\t\tx = pt.x;\n\t\t\t\t}\n\t\t\t\ty = pt.y;\n\t\t\t\tselected = pt.selected;\n\t\t\t}\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._owner = owner;\n\t\t\towner[key] = this;\n\t\t\tif (selected)\n\t\t\t\tthis.setSelected(true);\n\t\t},\n\t\n\t\tset: function(x, y) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._owner._changed(this);\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter,\n\t\t\t\tx = f.number(this._x),\n\t\t\t\ty = f.number(this._y);\n\t\t\treturn this.isSelected()\n\t\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t\t: [x, y];\n\t\t},\n\t\n\t\tgetX: function() {\n\t\t\treturn this._x;\n\t\t},\n\t\n\t\tsetX: function(x) {\n\t\t\tthis._x = x;\n\t\t\tthis._owner._changed(this);\n\t\t},\n\t\n\t\tgetY: function() {\n\t\t\treturn this._y;\n\t\t},\n\t\n\t\tsetY: function(y) {\n\t\t\tthis._y = y;\n\t\t\tthis._owner._changed(this);\n\t\t},\n\t\n\t\tisZero: function() {\n\t\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t\t},\n\t\n\t\tsetSelected: function(selected) {\n\t\t\tthis._owner.setSelected(selected, this);\n\t\t},\n\t\n\t\tisSelected: function() {\n\t\t\treturn this._owner.isSelected(this);\n\t\t}\n\t});\n\t\n\tvar Curve = Base.extend({\n\t\t_class: 'Curve',\n\t\n\t\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\t\tvar count = arguments.length,\n\t\t\t\tseg1, seg2,\n\t\t\t\tpoint1, point2,\n\t\t\t\thandle1, handle2;\n\t\t\tif (count === 3) {\n\t\t\t\tthis._path = arg0;\n\t\t\t\tseg1 = arg1;\n\t\t\t\tseg2 = arg2;\n\t\t\t} else if (count === 0) {\n\t\t\t\tseg1 = new Segment();\n\t\t\t\tseg2 = new Segment();\n\t\t\t} else if (count === 1) {\n\t\t\t\tif ('segment1' in arg0) {\n\t\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t\t} else if ('point1' in arg0) {\n\t\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\t\tpoint2 = arg0.point2;\n\t\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t\t}\n\t\t\t} else if (count === 2) {\n\t\t\t\tseg1 = new Segment(arg0);\n\t\t\t\tseg2 = new Segment(arg1);\n\t\t\t} else if (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\t\toptions, true);\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tthis._length = this._bounds = undefined;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Curve(this._segment1, this._segment2);\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\t\tif (!this._segment1._handleOut.isZero())\n\t\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\t\tif (!this._segment2._handleIn.isZero())\n\t\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\t\tparts.push('point2: ' + this._segment2._point);\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tvar removed = false;\n\t\t\tif (this._path) {\n\t\t\t\tvar segment2 = this._segment2,\n\t\t\t\t\thandleOut = segment2._handleOut;\n\t\t\t\tremoved = segment2.remove();\n\t\t\t\tif (removed)\n\t\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t\t}\n\t\t\treturn removed;\n\t\t},\n\t\n\t\tgetPoint1: function() {\n\t\t\treturn this._segment1._point;\n\t\t},\n\t\n\t\tsetPoint1: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment1._point.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetPoint2: function() {\n\t\t\treturn this._segment2._point;\n\t\t},\n\t\n\t\tsetPoint2: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment2._point.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandle1: function() {\n\t\t\treturn this._segment1._handleOut;\n\t\t},\n\t\n\t\tsetHandle1: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandle2: function() {\n\t\t\treturn this._segment2._handleIn;\n\t\t},\n\t\n\t\tsetHandle2: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetSegment1: function() {\n\t\t\treturn this._segment1;\n\t\t},\n\t\n\t\tgetSegment2: function() {\n\t\t\treturn this._segment2;\n\t\t},\n\t\n\t\tgetPath: function() {\n\t\t\treturn this._path;\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._segment1._index;\n\t\t},\n\t\n\t\tgetNext: function() {\n\t\t\tvar curves = this._path && this._path._curves;\n\t\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t\t},\n\t\n\t\tgetPrevious: function() {\n\t\t\tvar curves = this._path && this._path._curves;\n\t\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t\t},\n\t\n\t\tisFirst: function() {\n\t\t\treturn this._segment1._index === 0;\n\t\t},\n\t\n\t\tisLast: function() {\n\t\t\tvar path = this._path;\n\t\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\tisSelected: function() {\n\t\t\treturn this.getPoint1().isSelected()\n\t\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t\t&& this.getPoint2().isSelected();\n\t\t},\n\t\n\t\tsetSelected: function(selected) {\n\t\t\tthis.getPoint1().setSelected(selected);\n\t\t\tthis.getHandle1().setSelected(selected);\n\t\t\tthis.getHandle2().setSelected(selected);\n\t\t\tthis.getPoint2().setSelected(selected);\n\t\t},\n\t\n\t\tgetValues: function(matrix) {\n\t\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t\t},\n\t\n\t\tgetPoints: function() {\n\t\t\tvar coords = this.getValues(),\n\t\t\t\tpoints = [];\n\t\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\t\treturn points;\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\tif (this._length == null)\n\t\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\t\treturn this._length;\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\treturn Curve.getArea(this.getValues());\n\t\t},\n\t\n\t\tgetLine: function() {\n\t\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t\t},\n\t\n\t\tgetPart: function(from, to) {\n\t\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t\t},\n\t\n\t\tgetPartLength: function(from, to) {\n\t\t\treturn Curve.getLength(this.getValues(), from, to);\n\t\t},\n\t\n\t\tgetIntersections: function(curve) {\n\t\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\t\tthis, curve, [], {});\n\t\t},\n\t\n\t\t_getParameter: function(offset, isParameter) {\n\t\t\treturn isParameter\n\t\t\t\t\t? offset\n\t\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t\t? offset.parameter\n\t\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t\t},\n\t\n\t\tdivide: function(offset, isParameter, _setHandles) {\n\t\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tres = null;\n\t\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\t\tleft = parts[0],\n\t\t\t\t\tright = parts[1],\n\t\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\t\tsegment1 = this._segment1,\n\t\t\t\t\tsegment2 = this._segment2,\n\t\t\t\t\tpath = this._path;\n\t\t\t\tif (setHandles) {\n\t\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t\t}\n\t\t\t\tvar x = left[6], y = left[7],\n\t\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\t\tif (path) {\n\t\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\t\tres = this.getNext();\n\t\t\t\t} else {\n\t\t\t\t\tthis._segment2 = segment;\n\t\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\n\t\tsplit: function(offset, isParameter) {\n\t\t\treturn this._path\n\t\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t\t: null;\n\t\t},\n\t\n\t\treversed: function() {\n\t\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t\t},\n\t\n\t\tclearHandles: function() {\n\t\t\tthis._segment1._handleOut.set(0, 0);\n\t\t\tthis._segment2._handleIn.set(0, 0);\n\t\t},\n\t\n\tstatics: {\n\t\tgetValues: function(segment1, segment2, matrix) {\n\t\t\tvar p1 = segment1._point,\n\t\t\t\th1 = segment1._handleOut,\n\t\t\t\th2 = segment2._handleIn,\n\t\t\t\tp2 = segment2._point,\n\t\t\t\tvalues = [\n\t\t\t\t\tp1._x, p1._y,\n\t\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\t\tp2._x, p2._y\n\t\t\t\t];\n\t\t\tif (matrix)\n\t\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\t\treturn values;\n\t\t},\n\t\n\t\tsubdivide: function(v, t) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7];\n\t\t\tif (t === undefined)\n\t\t\t\tt = 0.5;\n\t\t\tvar u = 1 - t,\n\t\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\t\treturn [\n\t\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t\t];\n\t\t},\n\t\n\t\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\t\tvar p1 = v[coord],\n\t\t\t\tc1 = v[coord + 2],\n\t\t\t\tc2 = v[coord + 4],\n\t\t\t\tp2 = v[coord + 6],\n\t\t\t\tc = 3 * (c1 - p1),\n\t\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\t\ta = p2 - p1 - c - b;\n\t\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t\t},\n\t\n\t\tgetParameterOf: function(v, point) {\n\t\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t\t  : null;\n\t\t\tif (t !== null)\n\t\t\t\treturn t;\n\t\t\tvar coords = [point.x, point.y],\n\t\t\t\troots = [],\n\t\t\t\tgeomEpsilon = 2e-7;\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tt = roots[i];\n\t\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t\t : null;\n\t\t},\n\t\n\t\tgetNearestParameter: function(v, point) {\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\t\tif (det === 0)\n\t\t\t\t\treturn 0;\n\t\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t\t}\n\t\n\t\t\tvar count = 100,\n\t\t\t\tminDist = Infinity,\n\t\t\t\tminT = 0;\n\t\n\t\t\tfunction refine(t) {\n\t\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\t\tif (dist < minDist) {\n\t\t\t\t\t\tminDist = dist;\n\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i <= count; i++)\n\t\t\t\trefine(i / count);\n\t\n\t\t\tvar step = 1 / (count * 2);\n\t\t\twhile (step > 4e-7) {\n\t\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\t\tstep /= 2;\n\t\t\t}\n\t\t\treturn minT;\n\t\t},\n\t\n\t\tgetPart: function(v, from, to) {\n\t\t\tvar flip = from > to;\n\t\t\tif (flip) {\n\t\t\t\tvar tmp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = tmp;\n\t\t\t}\n\t\t\tif (from > 0)\n\t\t\t\tv = Curve.subdivide(v, from)[1];\n\t\t\tif (to < 1)\n\t\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\t\treturn flip\n\t\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t\t: v;\n\t\t},\n\t\n\t\thasHandles: function(v) {\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t\t},\n\t\n\t\tisFlatEnough: function(v, tolerance) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t\t< 10 * tolerance * tolerance;\n\t\t},\n\t\n\t\tgetArea: function(v) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\t\th2y = (v[5] + v[7]) / 2;\n\t\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t\t},\n\t\n\t\tgetBounds: function(v) {\n\t\t\tvar min = v.slice(0, 2),\n\t\t\t\tmax = min.slice(),\n\t\t\t\troots = [0, 0];\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\t\ti, 0, min, max, roots);\n\t\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t\t},\n\t\n\t\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\t\tfunction add(value, padding) {\n\t\t\t\tvar left = value - padding,\n\t\t\t\t\tright = value + padding;\n\t\t\t\tif (left < min[coord])\n\t\t\t\t\tmin[coord] = left;\n\t\t\t\tif (right > max[coord])\n\t\t\t\t\tmax[coord] = right;\n\t\t\t}\n\t\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\t\tc = v1 - v0,\n\t\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tadd(v3, 0);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tvar t = roots[i],\n\t\t\t\t\tu = 1 - t;\n\t\t\t\tif (tMin < t && t < tMax)\n\t\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\t\tpadding);\n\t\t\t}\n\t\t}\n\t}}, Base.each(\n\t\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\t\tfunction(name) {\n\t\t\tthis[name] = function() {\n\t\t\t\tif (!this._bounds)\n\t\t\t\t\tthis._bounds = {};\n\t\t\t\tvar bounds = this._bounds[name];\n\t\t\t\tif (!bounds) {\n\t\t\t\t\tvar path = this._path;\n\t\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t\t}\n\t\t\t\treturn bounds.clone();\n\t\t\t};\n\t\t},\n\t{\n\t\n\t}), Base.each({\n\t\tisStraight: function(l, h1, h2) {\n\t\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\t\treturn true;\n\t\t\t} else if (l.isZero()) {\n\t\t\t\treturn false;\n\t\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\t\tvar div = l.dot(l),\n\t\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tisLinear: function(l, h1, h2) {\n\t\t\tvar third = l.divide(3);\n\t\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t\t}\n\t}, function(test, name) {\n\t\tthis[name] = function() {\n\t\t\tvar seg1 = this._segment1,\n\t\t\t\tseg2 = this._segment2;\n\t\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t\t};\n\t\n\t\tthis.statics[name] = function(v) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7];\n\t\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t\t};\n\t}, {\n\t\tstatics: {},\n\t\n\t\thasHandles: function() {\n\t\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t\t},\n\t\n\t\tisCollinear: function(curve) {\n\t\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t\t},\n\t\n\t\tisHorizontal: function() {\n\t\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t\t< 1e-7;\n\t\t},\n\t\n\t\tisVertical: function() {\n\t\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t\t< 1e-7;\n\t\t}\n\t}), {\n\t\tbeans: false,\n\t\n\t\tgetParameterAt: function(offset, start) {\n\t\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t\t},\n\t\n\t\tgetParameterOf: function() {\n\t\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t\t},\n\t\n\t\tgetLocationAt: function(offset, isParameter) {\n\t\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t\t: null;\n\t\t},\n\t\n\t\tgetLocationOf: function() {\n\t\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\t\ttrue);\n\t\t},\n\t\n\t\tgetOffsetOf: function() {\n\t\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\t\treturn loc ? loc.getOffset() : null;\n\t\t},\n\t\n\t\tgetNearestLocation: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tvalues = this.getValues(),\n\t\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\t\tpt = Curve.getPoint(values, t);\n\t\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t\t},\n\t\n\t\tgetNearestPoint: function() {\n\t\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t\t}\n\t\n\t},\n\tnew function() {\n\t\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t\t'getWeightedNormal', 'getCurvature'];\n\t\treturn Base.each(methods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\t\tvar values = this.getValues();\n\t\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t\t};\n\t\t}, {\n\t\t\tstatics: {\n\t\t\t\tevaluateMethods: methods\n\t\t\t}\n\t\t})\n\t},\n\tnew function() {\n\t\n\t\tfunction getLengthIntegrand(v) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\n\t\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\t\tcx = 3 * (c1x - p1x),\n\t\n\t\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\t\tcy = 3 * (c1y - p1y);\n\t\n\t\t\treturn function(t) {\n\t\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction getIterations(a, b) {\n\t\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t\t}\n\t\n\t\tfunction evaluate(v, t, type, normalized) {\n\t\t\tif (t == null || t < 0 || t > 1)\n\t\t\t\treturn null;\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tx, y;\n\t\n\t\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\t\tvar isZero = t < tMin;\n\t\t\t\tx = isZero ? p1x : p2x;\n\t\t\t\ty = isZero ? p1y : p2y;\n\t\t\t} else {\n\t\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\t\tax = p2x - p1x - cx - bx,\n\t\n\t\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\t\tif (type === 0) {\n\t\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t\t} else {\n\t\t\t\t\tif (t < tMin) {\n\t\t\t\t\t\tx = cx;\n\t\t\t\t\t\ty = cy;\n\t\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t\t}\n\t\t\t\t\tif (normalized) {\n\t\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\t\tif (len) {\n\t\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\t\ty /= len;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t\t}\n\t\n\t\treturn { statics: {\n\t\n\t\t\tgetLength: function(v, a, b) {\n\t\t\t\tif (a === undefined)\n\t\t\t\t\ta = 0;\n\t\t\t\tif (b === undefined)\n\t\t\t\t\tb = 1;\n\t\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t}\n\t\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t\t},\n\t\n\t\t\tgetParameterAt: function(v, offset, start) {\n\t\t\t\tif (start === undefined)\n\t\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\t\tif (offset === 0)\n\t\t\t\t\treturn start;\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\tforward = offset > 0,\n\t\t\t\t\ta = forward ? start : 0,\n\t\t\t\t\tb = forward ? 1 : start,\n\t\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\t\tgetIterations(a, b));\n\t\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\t\treturn forward ? b : a;\n\t\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar guess = offset / rangeLength,\n\t\t\t\t\tlength = 0;\n\t\t\t\tfunction f(t) {\n\t\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\t\tstart = t;\n\t\t\t\t\treturn length - offset;\n\t\t\t\t}\n\t\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t\t1e-12);\n\t\t\t},\n\t\n\t\t\tgetPoint: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 0, false);\n\t\t\t},\n\t\n\t\t\tgetTangent: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 1, true);\n\t\t\t},\n\t\n\t\t\tgetWeightedTangent: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 1, false);\n\t\t\t},\n\t\n\t\t\tgetNormal: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 2, true);\n\t\t\t},\n\t\n\t\t\tgetWeightedNormal: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 2, false);\n\t\t\t},\n\t\n\t\t\tgetCurvature: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t\t}\n\t\t}};\n\t},\n\tnew function() {\n\t\n\t\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\t\toverlap) {\n\t\t\tvar startConnected = param.startConnected,\n\t\t\t\tendConnected = param.endConnected,\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t1 == null)\n\t\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\t\tif (t2 == null)\n\t\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\t\tif (renormalize) {\n\t\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\t\tt1 = res[0];\n\t\t\t\t\t\tt2 = res[1];\n\t\t\t\t\t}\n\t\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\t\tinclude = param.include;\n\t\t\t\t\tloc1._intersection = loc2;\n\t\t\t\t\tloc2._intersection = loc1;\n\t\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\t\tif (++recursion >= 24)\n\t\t\t\treturn;\n\t\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip,\n\t\t\t\ttMaxClip;\n\t\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\t\tdMin, dMax)) == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\t} else {\n\t\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\t}\n\t\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t\t< 1e-7) {\n\t\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\t\tv1 = c1.getValues();\n\t\t\t\tv2 = c2.getValues();\n\t\t\t\taddLocation(locations, param,\n\t\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t\t} else if (tDiff > 1e-12) {\n\t\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\t\tvar p0 = [ 0, dq0 ],\n\t\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\t\tp3 = [ 1, dq3 ],\n\t\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\t\thull;\n\t\t\tif (dist1 * dist2 < 0) {\n\t\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\t} else {\n\t\t\t\tvar distRatio = dist1 / dist2;\n\t\t\t\thull = [\n\t\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t\t: distRatio <= .5 ? [p0, p2, p3]\n\t\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t\t[p0, p3]\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t\t}\n\t\n\t\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\t\tif (hullTop[0][1] < dMin) {\n\t\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t\t} else {\n\t\t\t\treturn hullTop[0][0];\n\t\t\t}\n\t\t}\n\t\n\t\tfunction clipConvexHullPart(part, top, threshold) {\n\t\t\tvar px = part[0][0],\n\t\t\t\tpy = part[0][1];\n\t\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\t\tvar qx = part[i][0],\n\t\t\t\t\tqy = part[i][1];\n\t\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t\t}\n\t\t\t\tpx = qx;\n\t\t\t\tpy = qy;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\n\t\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\t\tvar flip = Curve.isStraight(v1),\n\t\t\t\tvc = flip ? v2 : v1,\n\t\t\t\tvl = flip ? v1 : v2,\n\t\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\t\tldx = lx2 - lx1,\n\t\t\t\tldy = ly2 - ly1,\n\t\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\t\tsin = Math.sin(angle),\n\t\t\t\tcos = Math.cos(angle),\n\t\t\t\trvc = [];\n\t\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\t\tvar x = vc[i] - lx1,\n\t\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\t\trvc.push(\n\t\t\t\t\tx * cos - y * sin,\n\t\t\t\t\tx * sin + y * cos);\n\t\t\t}\n\t\t\tvar roots = [],\n\t\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tvar tc = roots[i],\n\t\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\t\tif (tl !== null) {\n\t\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\t\tvar pt = Line.intersect(\n\t\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\t\tif (pt) {\n\t\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t\t}\n\t\t}\n\t\n\t\treturn { statics: {\n\t\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\t\tif (!v2) {\n\t\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t\t}\n\t\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\t\tmin = Math.min,\n\t\t\t\t\tmax = Math.max;\n\t\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\t\treturn locations;\n\t\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\t\tif (overlaps) {\n\t\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn locations;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tbefore = locations.length;\n\t\t\t\t(straight\n\t\t\t\t\t? addLineIntersection\n\t\t\t\t\t: straight1 || straight2\n\t\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\t\tif (straight && locations.length > before)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\t\treturn locations;\n\t\t\t},\n\t\n\t\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\t\tif (side1 === side2) {\n\t\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\t\tcx = h1x - p1x,\n\t\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\t\tcy = h1y - p1y,\n\t\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\t\tbc = by * cx - bx * cy;\n\t\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\t\tvar roots = [],\n\t\t\t\t\t\ttSplit,\n\t\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t\t};\n\t\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn locations;\n\t\t\t},\n\t\n\t\t\tgetOverlaps: function(v1, v2) {\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight =\tstraight1 && straight2;\n\t\n\t\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\t\treturn x * x + y * y;\n\t\t\t\t}\n\t\n\t\t\t\tif (straight) {\n\t\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\t\treturn null;\n\t\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\tvar v = [v1, v2],\n\t\t\t\t\tpairs = [];\n\t\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\t\tif (t2 != null) {\n\t\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pairs.length !== 2) {\n\t\t\t\t\tpairs = null;\n\t\t\t\t} else if (!straight) {\n\t\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\t\tpairs = null;\n\t\t\t\t}\n\t\t\t\treturn pairs;\n\t\t\t}\n\t\t}};\n\t});\n\t\n\tvar CurveLocation = Base.extend({\n\t\t_class: 'CurveLocation',\n\t\tbeans: true,\n\t\n\t\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t\t_overlap, _distance) {\n\t\t\tif (parameter > 0.9999996) {\n\t\t\t\tvar next = curve.getNext();\n\t\t\t\tif (next) {\n\t\t\t\t\tparameter = 0;\n\t\t\t\t\tcurve = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._id = UID.get(CurveLocation);\n\t\t\tthis._setCurve(curve);\n\t\t\tthis._parameter = parameter;\n\t\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\t\tthis._overlap = _overlap;\n\t\t\tthis._distance = _distance;\n\t\t\tthis._intersection = this._next = this._prev = null;\n\t\t},\n\t\n\t\t_setCurve: function(curve) {\n\t\t\tvar path = curve._path;\n\t\t\tthis._version = path ? path._version : 0;\n\t\t\tthis._curve = curve;\n\t\t\tthis._segment = null;\n\t\t\tthis._segment1 = curve._segment1;\n\t\t\tthis._segment2 = curve._segment2;\n\t\t},\n\t\n\t\t_setSegment: function(segment) {\n\t\t\tthis._setCurve(segment.getCurve());\n\t\t\tthis._segment = segment;\n\t\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\t\tthis._point = segment._point.clone();\n\t\t},\n\t\n\t\tgetSegment: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tsegment = this._segment;\n\t\t\tif (!segment) {\n\t\t\t\tvar parameter = this.getParameter();\n\t\t\t\tif (parameter === 0) {\n\t\t\t\t\tsegment = curve._segment1;\n\t\t\t\t} else if (parameter === 1) {\n\t\t\t\t\tsegment = curve._segment2;\n\t\t\t\t} else if (parameter != null) {\n\t\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t\t}\n\t\t\t\tthis._segment = segment;\n\t\t\t}\n\t\t\treturn segment;\n\t\t},\n\t\n\t\tgetCurve: function() {\n\t\t\tvar curve = this._curve,\n\t\t\t\tpath = curve && curve._path,\n\t\t\t\tthat = this;\n\t\t\tif (path && path._version !== this._version) {\n\t\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t\t}\n\t\n\t\t\tfunction trySegment(segment) {\n\t\t\t\tvar curve = segment && segment.getCurve();\n\t\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t\t!= null) {\n\t\t\t\t\tthat._setCurve(curve);\n\t\t\t\t\tthat._segment = segment;\n\t\t\t\t\treturn curve;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn curve\n\t\t\t\t|| trySegment(this._segment)\n\t\t\t\t|| trySegment(this._segment1)\n\t\t\t\t|| trySegment(this._segment2.getPrevious());\n\t\t},\n\t\n\t\tgetPath: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve && curve._path;\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve && curve.getIndex();\n\t\t},\n\t\n\t\tgetParameter: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this._parameter;\n\t\t\treturn curve && parameter == null\n\t\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t\t: parameter;\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn this._point;\n\t\t},\n\t\n\t\tgetOffset: function() {\n\t\t\tvar offset = this._offset;\n\t\t\tif (offset == null) {\n\t\t\t\toffset = 0;\n\t\t\t\tvar path = this.getPath(),\n\t\t\t\t\tindex = this.getIndex();\n\t\t\t\tif (path && index != null) {\n\t\t\t\t\tvar curves = path.getCurves();\n\t\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t\t}\n\t\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t\t}\n\t\t\treturn offset;\n\t\t},\n\t\n\t\tgetCurveOffset: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t\t},\n\t\n\t\tgetIntersection: function() {\n\t\t\treturn this._intersection;\n\t\t},\n\t\n\t\tgetDistance: function() {\n\t\t\treturn this._distance;\n\t\t},\n\t\n\t\tdivide: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tres = null;\n\t\t\tif (curve) {\n\t\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\t\tif (res)\n\t\t\t\t\tthis._setSegment(res._segment1);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\n\t\tsplit: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t\t},\n\t\n\t\tequals: function(loc, _ignoreOther) {\n\t\t\tvar res = this === loc,\n\t\t\t\tepsilon = 2e-7;\n\t\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\t\tvar c1 = this.getCurve(),\n\t\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tdiff = abs(\n\t\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\t\tres = (diff < 4e-7\n\t\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar parts = [],\n\t\t\t\tpoint = this.getPoint(),\n\t\t\t\tf = Formatter.instance;\n\t\t\tif (point)\n\t\t\t\tparts.push('point: ' + point);\n\t\t\tvar index = this.getIndex();\n\t\t\tif (index != null)\n\t\t\t\tparts.push('index: ' + index);\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter != null)\n\t\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\t\tif (this._distance != null)\n\t\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\t\n\t\tisTouching: function() {\n\t\t\tvar inter = this._intersection;\n\t\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\t\tcurve2 = inter.getCurve();\n\t\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tisCrossing: function() {\n\t\t\tvar inter = this._intersection;\n\t\t\tif (!inter)\n\t\t\t\treturn false;\n\t\t\tvar t1 = this.getParameter(),\n\t\t\t\tt2 = inter.getParameter(),\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\t\treturn !this.isTouching();\n\t\t\tvar c2 = this.getCurve(),\n\t\t\t\tc1 = c2.getPrevious(),\n\t\t\t\tc4 = inter.getCurve(),\n\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\tPI = Math.PI;\n\t\t\tif (!c1 || !c3)\n\t\t\t\treturn false;\n\t\n\t\t\tfunction isInRange(angle, min, max) {\n\t\t\t\treturn min < max\n\t\t\t\t\t? angle > min && angle < max\n\t\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t\t}\n\t\n\t\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\t\n\t\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t\t},\n\t\n\t\tisOverlap: function() {\n\t\t\treturn !!this._overlap;\n\t\t}\n\t}, Base.each(Curve.evaluateMethods, function(name) {\n\t\tvar get = name + 'At';\n\t\tthis[name] = function() {\n\t\t\tvar parameter = this.getParameter(),\n\t\t\t\tcurve = this.getCurve();\n\t\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t\t};\n\t}, {\n\t\tpreserve: true\n\t}),\n\tnew function() {\n\t\n\t\tfunction insert(locations, loc, merge) {\n\t\t\tvar length = locations.length,\n\t\t\t\tl = 0,\n\t\t\t\tr = length - 1;\n\t\n\t\t\tfunction search(index, dir) {\n\t\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t\t2e-7))\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\t\treturn loc2;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\twhile (l <= r) {\n\t\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\t\tloc2 = locations[m],\n\t\t\t\t\tfound;\n\t\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\t\tif (loc._overlap) {\n\t\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\tvar path1 = loc.getPath(),\n\t\t\t\tpath2 = loc2.getPath(),\n\t\t\t\tdiff = path1 === path2\n\t\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t: path1._id - path2._id;\n\t\t\t\tif (diff < 0) {\n\t\t\t\t\tr = m - 1;\n\t\t\t\t} else {\n\t\t\t\t\tl = m + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlocations.splice(l, 0, loc);\n\t\t\treturn loc;\n\t\t}\n\t\n\t\treturn { statics: {\n\t\t\tinsert: insert,\n\t\n\t\t\texpand: function(locations) {\n\t\t\t\tvar expanded = locations.slice();\n\t\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t\t}\n\t\t\t\treturn expanded;\n\t\t\t}\n\t\t}};\n\t});\n\t\n\tvar PathItem = Item.extend({\n\t\t_class: 'PathItem',\n\t\n\t\tinitialize: function PathItem() {\n\t\t},\n\t\n\t\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\t\tvar self = this === path || !path,\n\t\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\t\treturn [];\n\t\t\tvar curves1 = this.getCurves(),\n\t\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\t\tlength1 = curves1.length,\n\t\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\t\tvalues2 = [],\n\t\t\t\tarrays = [],\n\t\t\t\tlocations,\n\t\t\t\tpath;\n\t\t\tfor (var i = 0; i < length2; i++)\n\t\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\t\tfor (var i = 0; i < length1; i++) {\n\t\t\t\tvar curve1 = curves1[i],\n\t\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\t\tpath1 = curve1.getPath();\n\t\t\t\tif (path1 !== path) {\n\t\t\t\t\tpath = path1;\n\t\t\t\t\tlocations = [];\n\t\t\t\t\tarrays.push(locations);\n\t\t\t\t}\n\t\t\t\tif (self) {\n\t\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\t\treturn locations;\n\t\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\t\tCurve._getIntersections(\n\t\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlocations = [];\n\t\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\t\n\t\tgetCrossings: function(path) {\n\t\t\treturn this.getIntersections(path, function(inter) {\n\t\t\t\treturn inter.isCrossing();\n\t\t\t});\n\t\t},\n\t\n\t\t_asPathItem: function() {\n\t\t\treturn this;\n\t\t},\n\t\n\t\tsetPathData: function(data) {\n\t\n\t\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\t\tcoords,\n\t\t\t\trelative = false,\n\t\t\t\tprevious,\n\t\t\t\tcontrol,\n\t\t\t\tcurrent = new Point(),\n\t\t\t\tstart = new Point();\n\t\n\t\t\tfunction getCoord(index, coord) {\n\t\t\t\tvar val = +coords[index];\n\t\t\t\tif (relative)\n\t\t\t\t\tval += current[coord];\n\t\t\t\treturn val;\n\t\t\t}\n\t\n\t\t\tfunction getPoint(index) {\n\t\t\t\treturn new Point(\n\t\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tthis.clear();\n\t\n\t\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\t\tvar part = parts[i],\n\t\t\t\t\tcommand = part[0],\n\t\t\t\t\tlower = command.toLowerCase();\n\t\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\t\tvar length = coords && coords.length;\n\t\t\t\trelative = command === lower;\n\t\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\t\tthis.moveTo(current = start);\n\t\t\t\tswitch (lower) {\n\t\t\t\tcase 'm':\n\t\t\t\tcase 'l':\n\t\t\t\t\tvar move = lower === 'm';\n\t\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tcontrol = current;\n\t\t\t\t\tif (move)\n\t\t\t\t\t\tstart = current;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'h':\n\t\t\t\tcase 'v':\n\t\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t\t}\n\t\t\t\t\tcontrol = current;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\t\tprevious = lower;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'q':\n\t\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 't':\n\t\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\t\tprevious = lower;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'a':\n\t\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z':\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tprevious = lower;\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn !(this.hasFill() && this.hasStroke());\n\t\t},\n\t\n\t\t_contains: function(point) {\n\t\t\tvar winding = this._getWinding(point, false, true);\n\t\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t\t}\n\t\n\t});\n\t\n\tvar Path = PathItem.extend({\n\t\t_class: 'Path',\n\t\t_serializeFields: {\n\t\t\tsegments: [],\n\t\t\tclosed: false\n\t\t},\n\t\n\t\tinitialize: function Path(arg) {\n\t\t\tthis._closed = false;\n\t\t\tthis._segments = [];\n\t\t\tthis._version = 0;\n\t\t\tvar segments = Array.isArray(arg)\n\t\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t\t? arg\n\t\t\t\t\t: arguments\n\t\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t\t? arguments\n\t\t\t\t\t: null;\n\t\t\tif (segments && segments.length > 0) {\n\t\t\t\tthis.setSegments(segments);\n\t\t\t} else {\n\t\t\t\tthis._curves = undefined;\n\t\t\t\tthis._selectedSegmentState = 0;\n\t\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\t\tthis.setPathData(arg);\n\t\t\t\t\targ = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._initialize(!segments && arg);\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._closed === item._closed\n\t\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new Path(Item.NO_INSERT);\n\t\t\tcopy.setSegments(this._segments);\n\t\t\tcopy._closed = this._closed;\n\t\t\tif (this._clockwise !== undefined)\n\t\t\t\tcopy._clockwise = this._clockwise;\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\t_changed: function _changed(flags) {\n\t\t\t_changed.base.call(this, flags);\n\t\t\tif (flags & 8) {\n\t\t\t\tvar parent = this._parent;\n\t\t\t\tif (parent)\n\t\t\t\t\tparent._currentPath = undefined;\n\t\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\t\tundefined;\n\t\t\t\tif (flags & 16) {\n\t\t\t\t\tthis._version++;\n\t\t\t\t} else if (this._curves) {\n\t\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t\t}\n\t\t\t} else if (flags & 32) {\n\t\t\t\tthis._bounds = undefined;\n\t\t\t}\n\t\t},\n\t\n\t\tgetStyle: function() {\n\t\t\tvar parent = this._parent;\n\t\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t\t},\n\t\n\t\tgetSegments: function() {\n\t\t\treturn this._segments;\n\t\t},\n\t\n\t\tsetSegments: function(segments) {\n\t\t\tvar fullySelected = this.isFullySelected();\n\t\t\tthis._segments.length = 0;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tthis._curves = undefined;\n\t\t\tif (segments && segments.length > 0)\n\t\t\t\tthis._add(Segment.readAll(segments));\n\t\t\tif (fullySelected)\n\t\t\t\tthis.setFullySelected(true);\n\t\t},\n\t\n\t\tgetFirstSegment: function() {\n\t\t\treturn this._segments[0];\n\t\t},\n\t\n\t\tgetLastSegment: function() {\n\t\t\treturn this._segments[this._segments.length - 1];\n\t\t},\n\t\n\t\tgetCurves: function() {\n\t\t\tvar curves = this._curves,\n\t\t\t\tsegments = this._segments;\n\t\t\tif (!curves) {\n\t\t\t\tvar length = this._countCurves();\n\t\t\t\tcurves = this._curves = new Array(length);\n\t\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t\t}\n\t\t\treturn curves;\n\t\t},\n\t\n\t\tgetFirstCurve: function() {\n\t\t\treturn this.getCurves()[0];\n\t\t},\n\t\n\t\tgetLastCurve: function() {\n\t\t\tvar curves = this.getCurves();\n\t\t\treturn curves[curves.length - 1];\n\t\t},\n\t\n\t\tisClosed: function() {\n\t\t\treturn this._closed;\n\t\t},\n\t\n\t\tsetClosed: function(closed) {\n\t\t\tif (this._closed != (closed = !!closed)) {\n\t\t\t\tthis._closed = closed;\n\t\t\t\tif (this._curves) {\n\t\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\t\tif (closed)\n\t\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t\t}\n\t\t\t\tthis._changed(25);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tbeans: true,\n\t\n\t\tgetPathData: function(_matrix, _precision) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tlength = segments.length,\n\t\t\t\tf = new Formatter(_precision),\n\t\t\t\tcoords = new Array(6),\n\t\t\t\tfirst = true,\n\t\t\t\tcurX, curY,\n\t\t\t\tprevX, prevY,\n\t\t\t\tinX, inY,\n\t\t\t\toutX, outY,\n\t\t\t\tparts = [];\n\t\n\t\t\tfunction addSegment(segment, skipLine) {\n\t\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t\tif (first) {\n\t\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\t\tfirst = false;\n\t\t\t\t} else {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevX = curX;\n\t\t\t\tprevY = curY;\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t}\n\t\n\t\t\tif (length === 0)\n\t\t\t\treturn '';\n\t\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\taddSegment(segments[i]);\n\t\t\tif (this._closed && length > 0) {\n\t\t\t\taddSegment(segments[0], true);\n\t\t\t\tparts.push('z');\n\t\t\t}\n\t\t\treturn parts.join('');\n\t\t}\n\t}, {\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this._segments.length === 0;\n\t\t},\n\t\n\t\t_transformContent: function(matrix) {\n\t\t\tvar coords = new Array(6);\n\t\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\t\treturn true;\n\t\t},\n\t\n\t\t_add: function(segs, index) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcurves = this._curves,\n\t\t\t\tamount = segs.length,\n\t\t\t\tappend = index == null,\n\t\t\t\tindex = append ? segments.length : index;\n\t\t\tfor (var i = 0; i < amount; i++) {\n\t\t\t\tvar segment = segs[i];\n\t\t\t\tif (segment._path)\n\t\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\t\tsegment._path = this;\n\t\t\t\tsegment._index = index + i;\n\t\t\t\tif (segment._selectionState)\n\t\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t\t}\n\t\t\tif (append) {\n\t\t\t\tsegments.push.apply(segments, segs);\n\t\t\t} else {\n\t\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\t\tsegments[i]._index = i;\n\t\t\t}\n\t\t\tif (curves) {\n\t\t\t\tvar total = this._countCurves(),\n\t\t\t\t\tfrom = index + amount - 1 === total ? index - 1 : index,\n\t\t\t\t\tstart = from,\n\t\t\t\t\tto = Math.min(from + amount, total);\n\t\t\t\tif (segs._curves) {\n\t\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\t\tstart += segs._curves.length;\n\t\t\t\t}\n\t\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\t\tthis._adjustCurves(from, to);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t\treturn segs;\n\t\t},\n\t\n\t\t_adjustCurves: function(from, to) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcurves = this._curves,\n\t\t\t\tcurve;\n\t\t\tfor (var i = from; i < to; i++) {\n\t\t\t\tcurve = curves[i];\n\t\t\t\tcurve._path = this;\n\t\t\t\tcurve._segment1 = segments[i];\n\t\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t\t: from - 1]) {\n\t\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t\tif (curve = curves[to]) {\n\t\t\t\tcurve._segment1 = segments[to];\n\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t},\n\t\n\t\t_countCurves: function() {\n\t\t\tvar length = this._segments.length;\n\t\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t\t},\n\t\n\t\tadd: function(segment1 ) {\n\t\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t\t},\n\t\n\t\tinsert: function(index, segment1 ) {\n\t\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t\t},\n\t\n\t\taddSegment: function() {\n\t\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t\t},\n\t\n\t\tinsertSegment: function(index ) {\n\t\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t\t},\n\t\n\t\taddSegments: function(segments) {\n\t\t\treturn this._add(Segment.readAll(segments));\n\t\t},\n\t\n\t\tinsertSegments: function(index, segments) {\n\t\t\treturn this._add(Segment.readAll(segments), index);\n\t\t},\n\t\n\t\tremoveSegment: function(index) {\n\t\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t\t},\n\t\n\t\tremoveSegments: function(from, to, _includeCurves) {\n\t\t\tfrom = from || 0;\n\t\t\tto = Base.pick(to, this._segments.length);\n\t\t\tvar segments = this._segments,\n\t\t\t\tcurves = this._curves,\n\t\t\t\tcount = segments.length,\n\t\t\t\tremoved = segments.splice(from, to - from),\n\t\t\t\tamount = removed.length;\n\t\t\tif (!amount)\n\t\t\t\treturn removed;\n\t\t\tfor (var i = 0; i < amount; i++) {\n\t\t\t\tvar segment = removed[i];\n\t\t\t\tif (segment._selectionState)\n\t\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\t\tsegment._index = segment._path = null;\n\t\t\t}\n\t\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t\tif (curves) {\n\t\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t\t? from - 1\n\t\t\t\t\t\t: from,\n\t\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\t\tif (_includeCurves)\n\t\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\t\tthis._adjustCurves(index, index);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t\treturn removed;\n\t\t},\n\t\n\t\tclear: '#removeSegments',\n\t\n\t\thasHandles: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tif (segments[i].hasHandles())\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tclearHandles: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i].clearHandles();\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\tif (this._length == null) {\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\tlength = 0;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\t\tlength += curves[i].getLength();\n\t\t\t\tthis._length = length;\n\t\t\t}\n\t\t\treturn this._length;\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\tif (this._area == null) {\n\t\t\t\tvar segments = this._segments,\n\t\t\t\t\tcount = segments.length,\n\t\t\t\t\tlast = count - 1,\n\t\t\t\t\tarea = 0;\n\t\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t\t}\n\t\t\t\tthis._area = area;\n\t\t\t}\n\t\t\treturn this._area;\n\t\t},\n\t\n\t\tisClockwise: function() {\n\t\t\tif (this._clockwise !== undefined)\n\t\t\t\treturn this._clockwise;\n\t\t\treturn this.getArea() >= 0;\n\t\t},\n\t\n\t\tsetClockwise: function(clockwise) {\n\t\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\t\tthis.reverse();\n\t\t\tthis._clockwise = clockwise;\n\t\t},\n\t\n\t\tisFullySelected: function() {\n\t\t\tvar length = this._segments.length;\n\t\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t\t=== length * 7;\n\t\t},\n\t\n\t\tsetFullySelected: function(selected) {\n\t\t\tif (selected)\n\t\t\t\tthis._selectSegments(true);\n\t\t\tthis.setSelected(selected);\n\t\t},\n\t\n\t\tsetSelected: function setSelected(selected) {\n\t\t\tif (!selected)\n\t\t\t\tthis._selectSegments(false);\n\t\t\tsetSelected.base.call(this, selected);\n\t\t},\n\t\n\t\t_selectSegments: function(selected) {\n\t\t\tvar length = this._segments.length;\n\t\t\tthis._selectedSegmentState = selected\n\t\t\t\t\t? length * 7 : 0;\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t\t? 7 : 0;\n\t\t},\n\t\n\t\t_updateSelection: function(segment, oldState, newState) {\n\t\t\tsegment._selectionState = newState;\n\t\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\t\tif (total > 0)\n\t\t\t\tthis.setSelected(true);\n\t\t},\n\t\n\t\tflatten: function(maxDistance) {\n\t\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\t\tpos = 0,\n\t\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\t\tvar segments = [];\n\t\t\twhile (pos <= end) {\n\t\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\t\tpos += step;\n\t\t\t}\n\t\t\tthis.setSegments(segments);\n\t\t},\n\t\n\t\treduce: function() {\n\t\t\tvar curves = this.getCurves();\n\t\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\t\tvar curve = curves[i];\n\t\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\t\tcurve.remove();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\tsimplify: function(tolerance) {\n\t\t\tif (this._segments.length > 2) {\n\t\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\t\tthis.setSegments(fitter.fit());\n\t\t\t}\n\t\t},\n\t\n\t\tsplit: function(index, parameter) {\n\t\t\tif (parameter === null)\n\t\t\t\treturn null;\n\t\t\tif (arguments.length === 1) {\n\t\t\t\tvar arg = index;\n\t\t\t\tif (typeof arg === 'number')\n\t\t\t\t\targ = this.getLocationAt(arg);\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn null\n\t\t\t\tindex = arg.index;\n\t\t\t\tparameter = arg.parameter;\n\t\t\t}\n\t\t\tvar tMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (parameter >= tMax) {\n\t\t\t\tindex++;\n\t\t\t\tparameter--;\n\t\t\t}\n\t\t\tvar curves = this.getCurves();\n\t\t\tif (index >= 0 && index < curves.length) {\n\t\t\t\tif (parameter >= tMin) {\n\t\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t\t}\n\t\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\t\tpath;\n\t\t\t\tif (this._closed) {\n\t\t\t\t\tthis.setClosed(false);\n\t\t\t\t\tpath = this;\n\t\t\t\t} else {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\t\tthis._clone(path);\n\t\t\t\t}\n\t\t\t\tpath._add(segs, 0);\n\t\t\t\tthis.addSegment(segs[0]);\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\treverse: function() {\n\t\t\tthis._segments.reverse();\n\t\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\t\tvar segment = this._segments[i];\n\t\t\t\tvar handleIn = segment._handleIn;\n\t\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\t\tsegment._handleOut = handleIn;\n\t\t\t\tsegment._index = i;\n\t\t\t}\n\t\t\tthis._curves = null;\n\t\t\tif (this._clockwise !== undefined)\n\t\t\t\tthis._clockwise = !this._clockwise;\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tjoin: function(path) {\n\t\t\tif (path) {\n\t\t\t\tvar segments = path._segments,\n\t\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (!last2)\n\t\t\t\t\treturn this;\n\t\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tvar first2 = path.getFirstSegment();\n\t\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\t\tthis._add(segments.slice(1));\n\t\t\t\t} else {\n\t\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\t\tpath.reverse();\n\t\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (path._closed)\n\t\t\t\t\tthis._add([segments[0]]);\n\t\t\t\tpath.remove();\n\t\t\t}\n\t\t\tvar first = this.getFirstSegment(),\n\t\t\t\tlast = this.getLastSegment();\n\t\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\t\tlast.remove();\n\t\t\t\tthis.setClosed(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\ttoShape: function(insert) {\n\t\t\tif (!this._closed)\n\t\t\t\treturn null;\n\t\n\t\t\tvar segments = this._segments,\n\t\t\t\ttype,\n\t\t\t\tsize,\n\t\t\t\tradius,\n\t\t\t\ttopCenter;\n\t\n\t\t\tfunction isCollinear(i, j) {\n\t\t\t\tvar seg1 = segments[i],\n\t\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\t\tseg3 = segments[j],\n\t\t\t\t\tseg4 = seg3.getNext();\n\t\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t\t}\n\t\n\t\t\tfunction isOrthogonal(i) {\n\t\t\t\tvar seg2 = segments[i],\n\t\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\t\tseg3 = seg2.getNext();\n\t\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t\t}\n\t\n\t\t\tfunction isArc(i) {\n\t\t\t\tvar seg1 = segments[i],\n\t\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\t\tkappa = 0.5522847498307936;\n\t\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tfunction getDistance(i, j) {\n\t\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t\t}\n\t\n\t\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\t\ttype = Shape.Rectangle;\n\t\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\t\ttype = Shape.Rectangle;\n\t\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t\t} else if (segments.length === 4\n\t\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\t\ttype = Shape.Circle;\n\t\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t\t} else {\n\t\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t\t}\n\t\t\t\ttopCenter = segments[1]._point;\n\t\t\t}\n\t\n\t\t\tif (type) {\n\t\t\t\tvar center = this.getPosition(true),\n\t\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\t\tcenter: center,\n\t\t\t\t\t\tsize: size,\n\t\t\t\t\t\tradius: radius,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t}), insert, false);\n\t\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\t\treturn shape;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\t_hitTestSelf: function(point, options) {\n\t\t\tvar that = this,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\tsegments = this._segments,\n\t\t\t\tnumSegments = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\t\tstrokePadding = tolerancePadding,\n\t\t\t\tjoin, cap, miterLimit,\n\t\t\t\tarea, loc, res,\n\t\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\t\thitCurves = options.curves,\n\t\t\t\tradius = hitStroke\n\t\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t\t? 0 : null;\n\t\t\tif (radius !== null) {\n\t\t\t\tif (radius > 0) {\n\t\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t\t} else {\n\t\t\t\t\tjoin = cap = 'round';\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction isCloseEnough(pt, padding) {\n\t\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t\t}\n\t\n\t\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\t\tvar anchor = seg._point;\n\t\t\t\t\tif (pt !== anchor)\n\t\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\t\treturn (ends || options.segments)\n\t\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t\t}\n\t\n\t\t\tfunction addToArea(point) {\n\t\t\t\tarea.add(point);\n\t\t\t}\n\t\n\t\t\tfunction checkSegmentStroke(segment) {\n\t\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\t\tvar loc;\n\t\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t\t}\n\t\n\t\t\tif (options.ends && !options.segments && !closed) {\n\t\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\t\treturn res;\n\t\t\t} else if (options.segments || options.handles) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\t\treturn res;\n\t\t\t}\n\t\t\tif (radius !== null) {\n\t\t\t\tloc = this.getNearestLocation(point);\n\t\t\t\tif (loc) {\n\t\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\t\tloc = null;\n\t\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\t\tloc = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t\t: loc\n\t\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t: null;\n\t\t}\n\t\n\t}, Base.each(Curve.evaluateMethods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\t\treturn loc && loc[name]();\n\t\t\t};\n\t\t},\n\t{\n\t\tbeans: false,\n\t\n\t\tgetLocationOf: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcurves = this.getCurves();\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\t\tif (loc)\n\t\t\t\t\treturn loc;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetOffsetOf: function() {\n\t\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\t\treturn loc ? loc.getOffset() : null;\n\t\t},\n\t\n\t\tgetLocationAt: function(offset, isParameter) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tif (isParameter) {\n\t\t\t\tvar index = ~~offset,\n\t\t\t\t\tcurve = curves[index];\n\t\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t\t}\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar start = length,\n\t\t\t\t\tcurve = curves[i];\n\t\t\t\tlength += curve.getLength();\n\t\t\t\tif (length > offset) {\n\t\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetNearestLocation: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcurves = this.getCurves(),\n\t\t\t\tminDist = Infinity,\n\t\t\t\tminLoc = null;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\t\tif (loc._distance < minDist) {\n\t\t\t\t\tminDist = loc._distance;\n\t\t\t\t\tminLoc = loc;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn minLoc;\n\t\t},\n\t\n\t\tgetNearestPoint: function() {\n\t\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t\t}\n\t}),\n\tnew function() {\n\t\n\t\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\t\tvar half = size / 2;\n\t\n\t\t\tfunction drawHandle(index) {\n\t\t\t\tvar hX = coords[index],\n\t\t\t\t\thY = coords[index + 1];\n\t\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar coords = new Array(6);\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i];\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tvar state = segment._selectionState,\n\t\t\t\t\tpX = coords[0],\n\t\t\t\t\tpY = coords[1];\n\t\t\t\tif (state & 1)\n\t\t\t\t\tdrawHandle(2);\n\t\t\t\tif (state & 2)\n\t\t\t\t\tdrawHandle(4);\n\t\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\t\tif (!(state & 4)) {\n\t\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction drawSegments(ctx, path, matrix) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlength = segments.length,\n\t\t\t\tcoords = new Array(6),\n\t\t\t\tfirst = true,\n\t\t\t\tcurX, curY,\n\t\t\t\tprevX, prevY,\n\t\t\t\tinX, inY,\n\t\t\t\toutX, outY;\n\t\n\t\t\tfunction drawSegment(segment) {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\t\tcurX = coords[0];\n\t\t\t\t\tcurY = coords[1];\n\t\t\t\t} else {\n\t\t\t\t\tvar point = segment._point;\n\t\t\t\t\tcurX = point._x;\n\t\t\t\t\tcurY = point._y;\n\t\t\t\t}\n\t\t\t\tif (first) {\n\t\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\t\tfirst = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tinX = coords[2];\n\t\t\t\t\t\tinY = coords[3];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t\t}\n\t\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevX = curX;\n\t\t\t\tprevY = curY;\n\t\t\t\tif (matrix) {\n\t\t\t\t\toutX = coords[4];\n\t\t\t\t\toutY = coords[5];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\t\toutX = prevX + handle._x;\n\t\t\t\t\toutY = prevY + handle._y;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tdrawSegment(segments[i]);\n\t\t\tif (path._closed && length > 0)\n\t\t\t\tdrawSegment(segments[0]);\n\t\t}\n\t\n\t\treturn {\n\t\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\t\tvar dontStart = param.dontStart,\n\t\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\t\tstyle = this.getStyle(),\n\t\t\t\t\thasFill = style.hasFill(),\n\t\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t\t&& dashArray && dashArray.length;\n\t\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tctx.beginPath();\n\t\n\t\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\t\tif (this._closed)\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t\t}\n\t\n\t\t\t\tfunction getOffset(i) {\n\t\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t\t}\n\t\n\t\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\t\tthis._setStyles(ctx);\n\t\t\t\t\tif (hasFill) {\n\t\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tif (hasStroke) {\n\t\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_drawSelected: function(ctx, matrix) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\t\tctx.stroke();\n\t\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t\t}\n\t\t};\n\t},\n\tnew function() {\n\t\tfunction getFirstControlPoints(rhs) {\n\t\t\tvar n = rhs.length,\n\t\t\t\tx = [],\n\t\t\t\ttmp = [],\n\t\t\t\tb = 2;\n\t\t\tx[0] = rhs[0] / b;\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\ttmp[i] = 1 / b;\n\t\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t\t}\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t\t}\n\t\t\treturn x;\n\t\t}\n\t\n\t\treturn {\n\t\t\tsmooth: function() {\n\t\t\t\tvar segments = this._segments,\n\t\t\t\t\tsize = segments.length,\n\t\t\t\t\tclosed = this._closed,\n\t\t\t\t\tn = size,\n\t\t\t\t\toverlap = 0;\n\t\t\t\tif (size <= 2)\n\t\t\t\t\treturn;\n\t\t\t\tif (closed) {\n\t\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t\t}\n\t\t\t\tvar knots = [];\n\t\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\t\tif (closed) {\n\t\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tn--;\n\t\t\t\t}\n\t\t\t\tvar rhs = [];\n\t\n\t\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\t\tvar x = getFirstControlPoints(rhs);\n\t\n\t\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\t\tvar y = getFirstControlPoints(rhs);\n\t\n\t\t\t\tif (closed) {\n\t\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t\t}\n\t\t\t\t\tn--;\n\t\t\t\t}\n\t\t\t\tvar handleIn = null;\n\t\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\t\tif (handleIn)\n\t\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\t\tif (i < n) {\n\t\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (closed && handleIn) {\n\t\t\t\t\tvar segment = this._segments[0];\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t},\n\tnew function() {\n\t\tfunction getCurrentSegment(that) {\n\t\t\tvar segments = that._segments;\n\t\t\tif (segments.length === 0)\n\t\t\t\tthrow new Error('Use a moveTo() command first');\n\t\t\treturn segments[segments.length - 1];\n\t\t}\n\t\n\t\treturn {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar segments = this._segments;\n\t\t\t\tif (segments.length === 1)\n\t\t\t\t\tthis.removeSegment(0);\n\t\t\t\tif (!segments.length)\n\t\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t\t},\n\t\n\t\t\tmoveBy: function() {\n\t\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t\t},\n\t\n\t\t\tlineTo: function() {\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t\t},\n\t\n\t\t\tcubicCurveTo: function() {\n\t\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t\t},\n\t\n\t\t\tquadraticCurveTo: function() {\n\t\t\t\tvar handle = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\t\tto\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tcurveTo: function() {\n\t\t\t\tvar through = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\t\tt1 = 1 - t,\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\t\tif (handle.isNaN())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t\t},\n\t\n\t\t\tarcTo: function() {\n\t\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\t\tfrom = current._point,\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tthrough,\n\t\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\t\tcenter, extent, vector, matrix;\n\t\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\t\tthrough = to;\n\t\t\t\t\tto = Point.read(arguments);\n\t\t\t\t} else {\n\t\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\t\tif (radius.isZero())\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\t\tx = pt.x,\n\t\t\t\t\t\ty = pt.y,\n\t\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\t\txSq =  x * x,\n\t\t\t\t\t\tySq =  y * y;\n\t\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\t\tif (factor > 1) {\n\t\t\t\t\t\trx *= factor;\n\t\t\t\t\t\try *= factor;\n\t\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\t\trySq = ry * ry;\n\t\t\t\t\t}\n\t\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\t\tfactor = 0;\n\t\t\t\t\tif (factor < 0)\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\t\textent -= 360;\n\t\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\t\textent += 360;\n\t\t\t\t}\n\t\t\t\tif (through) {\n\t\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\t\tif (!center) {\n\t\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t\t}\n\t\t\t\t\tvector = from.subtract(center);\n\t\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar ext = Math.abs(extent),\n\t\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\t\tinc = extent / count,\n\t\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\t\tsegments = [];\n\t\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\t\tvar pt = to,\n\t\t\t\t\t\tout = null;\n\t\t\t\t\tif (i < count) {\n\t\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t\t}\n\t\t\t\t\tvector = vector.rotate(inc);\n\t\t\t\t}\n\t\t\t\tthis._add(segments);\n\t\t\t},\n\t\n\t\t\tlineBy: function() {\n\t\t\t\tvar to = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.lineTo(current.add(to));\n\t\t\t},\n\t\n\t\t\tcurveBy: function() {\n\t\t\t\tvar through = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t\t},\n\t\n\t\t\tcubicCurveBy: function() {\n\t\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\t\tcurrent.add(to));\n\t\t\t},\n\t\n\t\t\tquadraticCurveBy: function() {\n\t\t\t\tvar handle = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t\t},\n\t\n\t\t\tarcBy: function() {\n\t\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t\t} else {\n\t\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tclosePath: function(join) {\n\t\t\t\tthis.setClosed(true);\n\t\t\t\tif (join)\n\t\t\t\t\tthis.join();\n\t\t\t}\n\t\t};\n\t}, {\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\t\tmatrix);\n\t\t},\n\t\n\tstatics: {\n\t\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\t\tvar first = segments[0];\n\t\t\tif (!first)\n\t\t\t\treturn new Rectangle();\n\t\t\tvar coords = new Array(6),\n\t\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\t\tmax = min.slice(),\n\t\t\t\troots = new Array(2);\n\t\n\t\t\tfunction processSegment(segment) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tCurve._addBounds(\n\t\t\t\t\t\tprevCoords[i],\n\t\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\t\tcoords[i],\n\t\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t\t}\n\t\t\t\tvar tmp = prevCoords;\n\t\t\t\tprevCoords = coords;\n\t\t\t\tcoords = tmp;\n\t\t\t}\n\t\n\t\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\t\tprocessSegment(segments[i]);\n\t\t\tif (closed)\n\t\t\t\tprocessSegment(first);\n\t\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t\t},\n\t\n\t\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\t\tif (!style.hasStroke())\n\t\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\t\tjoin = style.getStrokeJoin(),\n\t\t\t\tcap = style.getStrokeCap(),\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\t\n\t\t\tfunction add(point) {\n\t\t\t\tbounds = bounds.include(matrix\n\t\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t\t}\n\t\n\t\t\tfunction addRound(segment) {\n\t\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t\t}\n\t\n\t\t\tfunction addJoin(segment, join) {\n\t\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\t\thandleOut = segment._handleOut;\n\t\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\t\taddRound(segment);\n\t\t\t\t} else {\n\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction addCap(segment, cap) {\n\t\t\t\tif (cap === 'round') {\n\t\t\t\t\taddRound(segment);\n\t\t\t\t} else {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 1; i < length; i++)\n\t\t\t\taddJoin(segments[i], join);\n\t\t\tif (closed) {\n\t\t\t\taddJoin(segments[0], join);\n\t\t\t} else if (length > 0) {\n\t\t\t\taddCap(segments[0], cap);\n\t\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t\t}\n\t\t\treturn bounds;\n\t\t},\n\t\n\t\t_getPenPadding: function(radius, matrix) {\n\t\t\tif (!matrix)\n\t\t\t\treturn [radius, radius];\n\t\t\tvar mx = matrix.shiftless(),\n\t\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\t\tphi = hor.getAngleInRadians(),\n\t\t\t\ta = hor.getLength(),\n\t\t\t\tb = ver.getLength();\n\t\t\tvar sin = Math.sin(phi),\n\t\t\t\tcos = Math.cos(phi),\n\t\t\t\ttan = Math.tan(phi),\n\t\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\t\tty = Math.atan(b / (tan * a));\n\t\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t\t},\n\t\n\t\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\t\tvar curve2 = segment.getCurve(),\n\t\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\t\tnormal1.setLength(step);\n\t\t\tnormal2.setLength(step);\n\t\t\tif (area) {\n\t\t\t\taddPoint(point);\n\t\t\t\taddPoint(point.add(normal1));\n\t\t\t}\n\t\t\tif (join === 'miter') {\n\t\t\t\tvar corner = new Line(\n\t\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t\t).intersect(new Line(\n\t\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t\t), true);\n\t\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\t\taddPoint(corner);\n\t\t\t\t\tif (!area)\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!area)\n\t\t\t\taddPoint(point.add(normal1));\n\t\t\taddPoint(point.add(normal2));\n\t\t},\n\t\n\t\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\t\tvar point = segment._point,\n\t\t\t\tloc = segment.getLocation(),\n\t\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\t\tif (area) {\n\t\t\t\taddPoint(point.subtract(normal));\n\t\t\t\taddPoint(point.add(normal));\n\t\t\t}\n\t\t\tif (cap === 'square')\n\t\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\t\taddPoint(point.add(normal));\n\t\t\taddPoint(point.subtract(normal));\n\t\t},\n\t\n\t\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\t\tjoinPadding) {\n\t\t\tvar coords = new Array(6),\n\t\t\t\tx1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i];\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\t\tx = coords[j],\n\t\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\t\tyx = y + paddingY;\n\t\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\t\tjoinRadius = strokeRadius;\n\t\t\tif (strokeRadius > 0) {\n\t\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t\t}\n\t\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t\t}\n\t}});\n\t\n\tPath.inject({ statics: new function() {\n\t\n\t\tvar kappa = 0.5522847498307936,\n\t\t\tellipseSegments = [\n\t\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t\t];\n\t\n\t\tfunction createPath(segments, closed, args) {\n\t\t\tvar props = Base.getNamed(args),\n\t\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\t\tpath._add(segments);\n\t\t\tpath._closed = closed;\n\t\t\treturn path.set(props);\n\t\t}\n\t\n\t\tfunction createEllipse(center, radius, args) {\n\t\t\tvar segments = new Array(4);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar segment = ellipseSegments[i];\n\t\t\t\tsegments[i] = new Segment(\n\t\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn createPath(segments, true, args);\n\t\t}\n\t\n\t\treturn {\n\t\t\tLine: function() {\n\t\t\t\treturn createPath([\n\t\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t\t], false, arguments);\n\t\t\t},\n\t\n\t\t\tCircle: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t\t},\n\t\n\t\t\tRectangle: function() {\n\t\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\t\tsegments;\n\t\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\t\tsegments = [\n\t\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\t\tnew Segment(br)\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\t\tvar rx = radius.width,\n\t\t\t\t\t\try = radius.height,\n\t\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\t\thy = ry * kappa;\n\t\t\t\t\tsegments = [\n\t\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn createPath(segments, true, arguments);\n\t\t\t},\n\t\n\t\t\tRoundRectangle: '#Rectangle',\n\t\n\t\t\tEllipse: function() {\n\t\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t\t},\n\t\n\t\t\tOval: '#Ellipse',\n\t\n\t\t\tArc: function() {\n\t\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\t\tpath.moveTo(from);\n\t\t\t\tpath.arcTo(through, to);\n\t\t\t\treturn path.set(props);\n\t\t\t},\n\t\n\t\t\tRegularPolygon: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\t\tstep = 360 / sides,\n\t\t\t\t\tthree = !(sides % 3),\n\t\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\t\tsegments = new Array(sides);\n\t\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\t\treturn createPath(segments, true, arguments);\n\t\t\t},\n\t\n\t\t\tStar: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\t\tstep = 360 / points,\n\t\t\t\t\tvector = new Point(0, -1),\n\t\t\t\t\tsegments = new Array(points);\n\t\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\t\treturn createPath(segments, true, arguments);\n\t\t\t}\n\t\t};\n\t}});\n\t\n\tvar CompoundPath = PathItem.extend({\n\t\t_class: 'CompoundPath',\n\t\t_serializeFields: {\n\t\t\tchildren: []\n\t\t},\n\t\n\t\tinitialize: function CompoundPath(arg) {\n\t\t\tthis._children = [];\n\t\t\tthis._namedChildren = {};\n\t\t\tif (!this._initialize(arg)) {\n\t\t\t\tif (typeof arg === 'string') {\n\t\t\t\t\tthis.setPathData(arg);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item._clockwise === undefined)\n\t\t\t\t\titem.setClockwise(item._index === 0);\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\treverse: function() {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].reverse();\n\t\t},\n\t\n\t\tsmooth: function() {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i].smooth();\n\t\t},\n\t\n\t\treduce: function reduce() {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tvar path = children[i].reduce();\n\t\t\t\tif (path.isEmpty())\n\t\t\t\t\tchildren.splice(i, 1);\n\t\t\t}\n\t\t\tif (children.length === 0) {\n\t\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this);\n\t\t\t\tpath.setStyle(this._style);\n\t\t\t\tthis.remove();\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\treturn reduce.base.call(this);\n\t\t},\n\t\n\t\tisClockwise: function() {\n\t\t\tvar child = this.getFirstChild();\n\t\t\treturn child && child.isClockwise();\n\t\t},\n\t\n\t\tsetClockwise: function(clockwise) {\n\t\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\t\tthis.reverse();\n\t\t},\n\t\n\t\tgetFirstSegment: function() {\n\t\t\tvar first = this.getFirstChild();\n\t\t\treturn first && first.getFirstSegment();\n\t\t},\n\t\n\t\tgetLastSegment: function() {\n\t\t\tvar last = this.getLastChild();\n\t\t\treturn last && last.getLastSegment();\n\t\t},\n\t\n\t\tgetCurves: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tcurves = [];\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\t\treturn curves;\n\t\t},\n\t\n\t\tgetFirstCurve: function() {\n\t\t\tvar first = this.getFirstChild();\n\t\t\treturn first && first.getFirstCurve();\n\t\t},\n\t\n\t\tgetLastCurve: function() {\n\t\t\tvar last = this.getLastChild();\n\t\t\treturn last && last.getFirstCurve();\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tarea += children[i].getArea();\n\t\t\treturn area;\n\t\t}\n\t}, {\n\t\tbeans: true,\n\t\n\t\tgetPathData: function(_matrix, _precision) {\n\t\t\tvar children = this._children,\n\t\t\t\tpaths = [];\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tmx = child._matrix;\n\t\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t\t}\n\t\t\treturn paths.join(' ');\n\t\t}\n\t}, {\n\t\t_getChildHitTestOptions: function(options) {\n\t\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t\t? options\n\t\t\t\t\t: new Base(options, { fill: false });\n\t\t},\n\t\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar children = this._children;\n\t\t\tif (children.length === 0)\n\t\t\t\treturn;\n\t\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else {\n\t\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\t\n\t\t\tif (!param.clip) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tvar style = this._style;\n\t\t\t\tif (style.hasFill()) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (style.hasStroke())\n\t\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\n\t\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tmx = child._matrix;\n\t\t\t\tif (!selectedItems[child._id])\n\t\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t\t: matrix.chain(mx));\n\t\t\t}\n\t\t}\n\t},\n\tnew function() {\n\t\tfunction getCurrentPath(that, check) {\n\t\t\tvar children = that._children;\n\t\t\tif (check && children.length === 0)\n\t\t\t\tthrow new Error('Use a moveTo() command first');\n\t\t\treturn children[children.length - 1];\n\t\t}\n\t\n\t\tvar fields = {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar current = getCurrentPath(this),\n\t\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\t\tif (path !== current)\n\t\t\t\t\tthis.addChild(path);\n\t\t\t\tpath.moveTo.apply(path, arguments);\n\t\t\t},\n\t\n\t\t\tmoveBy: function() {\n\t\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\t\tpoint = Point.read(arguments);\n\t\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t\t},\n\t\n\t\t\tclosePath: function(join) {\n\t\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t\t}\n\t\t};\n\t\n\t\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\t\tfunction(key) {\n\t\t\t\t\tfields[key] = function() {\n\t\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t);\n\t\n\t\treturn fields;\n\t});\n\t\n\tPathItem.inject(new function() {\n\t\tvar operators = {\n\t\t\tunite: function(w) {\n\t\t\t\treturn w === 1 || w === 0;\n\t\t\t},\n\t\n\t\t\tintersect: function(w) {\n\t\t\t\treturn w === 2;\n\t\t\t},\n\t\n\t\t\tsubtract: function(w) {\n\t\t\t\treturn w === 1;\n\t\t\t},\n\t\n\t\t\texclude: function(w) {\n\t\t\t\treturn w === 1;\n\t\t\t}\n\t\t};\n\t\n\t\tfunction preparePath(path, resolve) {\n\t\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t\t}\n\t\n\t\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\t\tvar result = new ctor(Item.NO_INSERT);\n\t\t\tresult.addChildren(paths, true);\n\t\t\tif (reduce)\n\t\t\t\tresult = result.reduce();\n\t\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t\t? path2 : path1);\n\t\t\tresult.setStyle(path1._style);\n\t\t\treturn result;\n\t\t}\n\t\n\t\tfunction computeBoolean(path1, path2, operation) {\n\t\t\tif (!path1._children && !path1._closed)\n\t\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\t\tvar _path1 = preparePath(path1, true),\n\t\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t\t_path2.reverse();\n\t\t\tvar intersections = CurveLocation.expand(\n\t\t\t\t_path1.getIntersections(_path2, function(inter) {\n\t\t\t\t\treturn _path2 && inter.isOverlap() || inter.isCrossing();\n\t\t\t\t})\n\t\t\t);\n\t\t\tdivideLocations(intersections);\n\t\n\t\t\tvar segments = [],\n\t\t\t\tmonoCurves = [];\n\t\n\t\t\tfunction collect(paths) {\n\t\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\t\tvar path = paths[i];\n\t\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tcollect(_path1._children || [_path1]);\n\t\t\tif (_path2)\n\t\t\t\tcollect(_path2._children || [_path2]);\n\t\t\tfor (var i = 0, l = intersections.length; i < l; i++) {\n\t\t\t\tpropagateWinding(intersections[i]._segment, _path1, _path2,\n\t\t\t\t\t\tmonoCurves, operation);\n\t\t\t}\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i];\n\t\t\t\tif (segment._winding == null) {\n\t\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\t\toperation);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\t\tpath1, path2, true);\n\t\t}\n\t\n\t\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\t\treturn null;\n\t\t\tvar _path1 = preparePath(path1, false),\n\t\t\t\t_path2 = preparePath(path2, false),\n\t\t\t\tintersections = _path1.getIntersections(_path2, function(inter) {\n\t\t\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t\t\t}),\n\t\t\t\tsub = operation === 'subtract',\n\t\t\t\tpaths = [];\n\t\n\t\t\tfunction addPath(path) {\n\t\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\t\tpaths.unshift(path);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = intersections.length - 1; i >= 0; i--) {\n\t\t\t\tvar path = intersections[i].split();\n\t\t\t\tif (path) {\n\t\t\t\t\tif (addPath(path))\n\t\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\taddPath(_path1);\n\t\t\treturn finishBoolean(Group, paths, path1, path2);\n\t\t}\n\t\n\t\tfunction linkIntersections(from, to) {\n\t\t\tvar prev = from;\n\t\t\twhile (prev) {\n\t\t\t\tif (prev === to)\n\t\t\t\t\treturn;\n\t\t\t\tprev = prev._prev;\n\t\t\t}\n\t\t\twhile (from._next && from._next !== to)\n\t\t\t\tfrom = from._next;\n\t\t\tif (!from._next) {\n\t\t\t\twhile (to._prev)\n\t\t\t\t\tto = to._prev;\n\t\t\t\tfrom._next = to;\n\t\t\t\tto._prev = from;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction divideLocations(locations) {\n\t\t\tvar tMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tnoHandles = false,\n\t\t\t\tclearSegments = [],\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\n\t\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tcurve = loc._curve,\n\t\t\t\t\tt = loc._parameter,\n\t\t\t\t\torigT = t;\n\t\t\t\tif (curve !== prevCurve) {\n\t\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t\t} else if (prevT > 0) {\n\t\t\t\t\tt /= prevT;\n\t\t\t\t}\n\t\t\t\tvar segment;\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tsegment = curve._segment1;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tsegment = curve._segment2;\n\t\t\t\t} else {\n\t\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\t\tif (noHandles)\n\t\t\t\t\t\tclearSegments.push(segment);\n\t\t\t\t}\n\t\t\t\tloc._setSegment(segment);\n\t\t\t\tvar inter = segment._intersection,\n\t\t\t\t\tdest = loc._intersection;\n\t\t\t\tif (inter) {\n\t\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\t\tvar other = inter;\n\t\t\t\t\twhile (other) {\n\t\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\t\tother = other._next;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsegment._intersection = dest;\n\t\t\t\t}\n\t\t\t\tprevCurve = curve;\n\t\t\t\tprevT = origT;\n\t\t\t}\n\t\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\t\tclearSegments[i].clearHandles();\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\t\tvar epsilon = 2e-7,\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tpx = point.x,\n\t\t\t\tpy = point.y,\n\t\t\t\twindLeft = 0,\n\t\t\t\twindRight = 0,\n\t\t\t\troots = [],\n\t\t\t\tabs = Math.abs;\n\t\t\tif (horizontal) {\n\t\t\t\tvar yTop = -Infinity,\n\t\t\t\t\tyBottom = Infinity,\n\t\t\t\t\tyBefore = py - epsilon,\n\t\t\t\t\tyAfter = py + epsilon;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar values = curves[i].values;\n\t\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tyTop = (yTop + py) / 2;\n\t\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\t\tif (yTop > -Infinity)\n\t\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\t\ttestContains);\n\t\t\t\tif (yBottom < Infinity)\n\t\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\t\ttestContains);\n\t\t\t} else {\n\t\t\t\tvar xBefore = px - epsilon,\n\t\t\t\t\txAfter = px + epsilon;\n\t\t\t\tvar startCounted = false,\n\t\t\t\t\tprevCurve,\n\t\t\t\t\tprevT;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar curve = curves[i],\n\t\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\t\twinding = curve.winding;\n\t\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\t\tif (!(\n\t\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\t\tprevT = t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t\t}\n\t\n\t\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\t\tvar epsilon = 2e-7,\n\t\t\t\tchain = [],\n\t\t\t\tstart = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar curve = segment.getCurve(),\n\t\t\t\t\tlength = curve.getLength();\n\t\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== start);\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\n\t\tfunction tracePaths(segments, operation) {\n\t\t\tvar paths = [],\n\t\t\t\tstart,\n\t\t\t\totherStart,\n\t\t\t\toperator = operators[operation],\n\t\t\t\toverlapWinding = {\n\t\t\t\t\tunite: { 1: 2 },\n\t\t\t\t\tintersect: { 2: 1 }\n\t\t\t\t}[operation];\n\t\n\t\t\tfunction isValid(seg, adjusted) {\n\t\t\t\tif (seg._visited)\n\t\t\t\t\treturn false;\n\t\t\t\tif (!operator)\n\t\t\t\t\treturn true;\n\t\t\t\tvar winding = seg._winding,\n\t\t\t\t\tinter = seg._intersection;\n\t\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\t\treturn operator(winding);\n\t\t\t}\n\t\n\t\t\tfunction isStart(seg) {\n\t\t\t\treturn seg === start || seg === otherStart;\n\t\t\t}\n\t\n\t\t\tfunction findBestIntersection(inter, strict) {\n\t\t\t\tif (!inter._next)\n\t\t\t\t\treturn inter;\n\t\t\t\twhile (inter) {\n\t\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t\t))\n\t\t\t\t\t\treturn inter;\n\t\t\t\t\tinter = inter._next;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tfunction findStartSegment(inter, next) {\n\t\t\t\twhile (inter) {\n\t\t\t\t\tvar seg = inter._segment;\n\t\t\t\t\tif (isStart(seg))\n\t\t\t\t\t\treturn seg;\n\t\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar seg = segments[i],\n\t\t\t\t\tpath = null,\n\t\t\t\t\tfinished = false;\n\t\t\t\tif (!isValid(seg, true))\n\t\t\t\t\tcontinue;\n\t\t\t\tstart = otherStart = null;\n\t\t\t\twhile (!finished) {\n\t\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\t\tif (other && isValid(other))\n\t\t\t\t\t\tseg = other;\n\t\t\t\t\tif (seg._visited) {\n\t\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!path) {\n\t\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\t\tstart = seg;\n\t\t\t\t\t\totherStart = other;\n\t\t\t\t\t}\n\t\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\t\tseg._visited = true;\n\t\t\t\t\tseg = seg.getNext();\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t}\n\t\t\t\tif (finished) {\n\t\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\t\tpath.setClosed(true);\n\t\t\t\t} else if (path) {\n\t\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t\t'length =', path.getLength());\n\t\t\t\t\tpath = null;\n\t\t\t\t}\n\t\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t\tpath = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn paths;\n\t\t}\n\t\n\t\treturn {\n\t\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\t\thorizontal, testContains);\n\t\t\t},\n\t\n\t\t\tunite: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t\t},\n\t\n\t\t\tintersect: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t\t},\n\t\n\t\t\tsubtract: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t\t},\n\t\n\t\t\texclude: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t\t},\n\t\n\t\t\tdivide: function(path) {\n\t\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\t\tthis, path, true);\n\t\t\t},\n\t\n\t\t\tresolveCrossings: function() {\n\t\t\t\tvar crossings = this.getCrossings();\n\t\t\t\tif (!crossings.length)\n\t\t\t\t\treturn this;\n\t\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\t\tvar paths = this._children || [this],\n\t\t\t\t\tsegments = [];\n\t\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t\t}\n\t\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\t\tthis, null, false);\n\t\t\t}\n\t\t};\n\t});\n\t\n\tPath.inject({\n\t\t_getMonoCurves: function() {\n\t\t\tvar monoCurves = this._monoCurves,\n\t\t\t\tprevCurve;\n\t\n\t\t\tfunction insertCurve(v) {\n\t\t\t\tvar y0 = v[1],\n\t\t\t\t\ty1 = v[7],\n\t\t\t\t\tcurve = {\n\t\t\t\t\t\tvalues: v,\n\t\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t\t: 1,\n\t\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\t\tnext: null\n\t\t\t\t\t};\n\t\t\t\tif (prevCurve)\n\t\t\t\t\tprevCurve.next = curve;\n\t\t\t\tmonoCurves.push(curve);\n\t\t\t\tprevCurve = curve;\n\t\t\t}\n\t\n\t\t\tfunction handleCurve(v) {\n\t\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\t\treturn;\n\t\t\t\tvar y0 = v[1],\n\t\t\t\t\ty1 = v[3],\n\t\t\t\t\ty2 = v[5],\n\t\t\t\t\ty3 = v[7];\n\t\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\t\troots = [],\n\t\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\t\tif (n === 0) {\n\t\t\t\t\t\tinsertCurve(v);\n\t\t\t\t\t} else {\n\t\t\t\t\t\troots.sort();\n\t\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (!monoCurves) {\n\t\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\tsegments = this._segments;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t\t}\n\t\t\t\tif (monoCurves.length > 0) {\n\t\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\t\tfirst.previous = last;\n\t\t\t\t\tlast.next = first;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn monoCurves;\n\t\t},\n\t\n\t\tgetInteriorPoint: function() {\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\tpoint = bounds.getCenter(true);\n\t\t\tif (!this.contains(point)) {\n\t\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\t\troots = [],\n\t\t\t\t\ty = point.y,\n\t\t\t\t\txIntercepts = [];\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar values = curves[i].values;\n\t\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t\t}\n\t\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t\t}\n\t\t\treturn point;\n\t\t},\n\t\n\t\treorient: function() {\n\t\t\tthis.setClockwise(true);\n\t\t\treturn this;\n\t\t}\n\t});\n\t\n\tCompoundPath.inject({\n\t\t_getMonoCurves: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tmonoCurves = [];\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\t\treturn monoCurves;\n\t\t},\n\t\n\t\treorient: function() {\n\t\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t\t});\n\t\t\tif (children.length > 0) {\n\t\t\t\tthis.addChildren(children);\n\t\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\t\tcounters = 0;\n\t\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\t\tcounters++;\n\t\t\t\t\t}\n\t\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t});\n\t\n\tvar PathIterator = Base.extend({\n\t\t_class: 'PathIterator',\n\t\n\t\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\t\tvar curves = [],\n\t\t\t\tparts = [],\n\t\t\t\tlength = 0,\n\t\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\t\tsegments = path._segments,\n\t\t\t\tsegment1 = segments[0],\n\t\t\t\tsegment2;\n\t\n\t\t\tfunction addCurve(segment1, segment2) {\n\t\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\t\tcurves.push(curve);\n\t\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t\t}\n\t\n\t\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\t\tlength += dist;\n\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\t\tsegment2 = segments[i];\n\t\t\t\taddCurve(segment1, segment2);\n\t\t\t\tsegment1 = segment2;\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\taddCurve(segment2, segments[0]);\n\t\n\t\t\tthis.curves = curves;\n\t\t\tthis.parts = parts;\n\t\t\tthis.length = length;\n\t\t\tthis.index = 0;\n\t\t},\n\t\n\t\tgetParameterAt: function(offset) {\n\t\t\tvar i, j = this.index;\n\t\t\tfor (;;) {\n\t\t\t\ti = j;\n\t\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\t\tvar part = this.parts[i];\n\t\t\t\tif (part.offset >= offset) {\n\t\t\t\t\tthis.index = i;\n\t\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\t\tindex: part.index\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar part = this.parts[this.parts.length - 1];\n\t\t\treturn {\n\t\t\t\tvalue: 1,\n\t\t\t\tindex: part.index\n\t\t\t};\n\t\t},\n\t\n\t\tdrawPart: function(ctx, from, to) {\n\t\t\tfrom = this.getParameterAt(from);\n\t\t\tto = this.getParameterAt(to);\n\t\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\t\tif (i == from.index)\n\t\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t\t}\n\t\t}\n\t}, Base.each(Curve.evaluateMethods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\t\tvar param = this.getParameterAt(offset);\n\t\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t\t};\n\t\t}, {})\n\t);\n\t\n\tvar PathFitter = Base.extend({\n\t\tinitialize: function(path, error) {\n\t\t\tvar points = this.points = [],\n\t\t\t\tsegments = path._segments,\n\t\t\t\tprev;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar point = segments[i].point.clone();\n\t\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tprev = point;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (path._closed) {\n\t\t\t\tthis.closed = true;\n\t\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\t\tpoints.push(points[1]);\n\t\t\t}\n\t\n\t\t\tthis.error = error;\n\t\t},\n\t\n\t\tfit: function() {\n\t\t\tvar points = this.points,\n\t\t\t\tlength = points.length,\n\t\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\t\tif (length > 1)\n\t\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\t\n\t\t\tif (this.closed) {\n\t\t\t\tsegments.shift();\n\t\t\t\tsegments.pop();\n\t\t\t}\n\t\n\t\t\treturn segments;\n\t\t},\n\t\n\t\tfitCubic: function(first, last, tan1, tan2) {\n\t\t\tif (last - first == 1) {\n\t\t\t\tvar pt1 = this.points[first],\n\t\t\t\t\tpt2 = this.points[last],\n\t\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\t\tsplit,\n\t\t\t\tparametersInOrder = true;\n\t\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\t\tthis.addCurve(curve);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsplit = max.index;\n\t\t\t\tif (max.error >= maxError)\n\t\t\t\t\tbreak;\n\t\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\t\tmaxError = max.error;\n\t\t\t}\n\t\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t\t},\n\t\n\t\taddCurve: function(curve) {\n\t\t\tvar prev = this.segments[this.segments.length - 1];\n\t\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\t\tthis.segments.push(\n\t\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t\t},\n\t\n\t\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\t\tvar epsilon = 1e-12,\n\t\t\t\tpt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tC = [[0, 0], [0, 0]],\n\t\t\t\tX = [0, 0];\n\t\n\t\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\t\tvar u = uPrime[i],\n\t\t\t\t\tt = 1 - u,\n\t\t\t\t\tb = 3 * u * t,\n\t\t\t\t\tb0 = t * t * t,\n\t\t\t\t\tb1 = b * t,\n\t\t\t\t\tb2 = b * u,\n\t\t\t\t\tb3 = u * u * u,\n\t\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\t\tC[0][0] += a1.dot(a1);\n\t\t\t\tC[0][1] += a1.dot(a2);\n\t\t\t\tC[1][0] = C[0][1];\n\t\t\t\tC[1][1] += a2.dot(a2);\n\t\t\t\tX[0] += a1.dot(tmp);\n\t\t\t\tX[1] += a2.dot(tmp);\n\t\t\t}\n\t\n\t\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\t\talpha1, alpha2;\n\t\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\t\talpha2 = detC0X / detC0C1;\n\t\t\t} else {\n\t\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t\t} else {\n\t\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\t\teps = epsilon * segLength,\n\t\t\t\thandle1,\n\t\t\t\thandle2;\n\t\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t} else {\n\t\t\t\tvar line = pt2.subtract(pt1);\n\t\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\t\thandle1 = handle2 = null;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t\t},\n\t\n\t\treparameterize: function(first, last, u, curve) {\n\t\t\tfor (var i = first; i <= last; i++) {\n\t\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t\t}\n\t\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\tfindRoot: function(curve, point, u) {\n\t\t\tvar curve1 = [],\n\t\t\t\tcurve2 = [];\n\t\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t\t}\n\t\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t\t}\n\t\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\t\tdiff = pt.subtract(point),\n\t\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\t\tif (Math.abs(df) < 1e-6)\n\t\t\t\treturn u;\n\t\t\treturn u - diff.dot(pt1) / df;\n\t\t},\n\t\n\t\tevaluate: function(degree, curve, t) {\n\t\t\tvar tmp = curve.slice();\n\t\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp[0];\n\t\t},\n\t\n\t\tchordLengthParameterize: function(first, last) {\n\t\t\tvar u = [0];\n\t\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t\t}\n\t\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\t\tu[i] /= u[m];\n\t\t\t}\n\t\t\treturn u;\n\t\t},\n\t\n\t\tfindMaxError: function(first, last, curve, u) {\n\t\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\t\tmaxDist = 0;\n\t\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\t\tif (dist >= maxDist) {\n\t\t\t\t\tmaxDist = dist;\n\t\t\t\t\tindex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\terror: maxDist,\n\t\t\t\tindex: index\n\t\t\t};\n\t\t}\n\t});\n\t\n\tvar TextItem = Item.extend({\n\t\t_class: 'TextItem',\n\t\t_boundsSelected: true,\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_serializeFields: {\n\t\t\tcontent: null\n\t\t},\n\t\t_boundsGetter: 'getBounds',\n\t\n\t\tinitialize: function TextItem(arg) {\n\t\t\tthis._content = '';\n\t\t\tthis._lines = [];\n\t\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._content === item._content;\n\t\t},\n\t\n\t\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\t\tcopy.setContent(this._content);\n\t\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t\t},\n\t\n\t\tgetContent: function() {\n\t\t\treturn this._content;\n\t\t},\n\t\n\t\tsetContent: function(content) {\n\t\t\tthis._content = '' + content;\n\t\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\t\tthis._changed(265);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn !this._content;\n\t\t},\n\t\n\t\tgetCharacterStyle: '#getStyle',\n\t\tsetCharacterStyle: '#setStyle',\n\t\n\t\tgetParagraphStyle: '#getStyle',\n\t\tsetParagraphStyle: '#setStyle'\n\t});\n\t\n\tvar PointText = TextItem.extend({\n\t\t_class: 'PointText',\n\t\n\t\tinitialize: function PointText() {\n\t\t\tTextItem.apply(this, arguments);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\tvar point = this._matrix.getTranslation();\n\t\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t\t},\n\t\n\t\tsetPoint: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t\t},\n\t\n\t\t_draw: function(ctx) {\n\t\t\tif (!this._content)\n\t\t\t\treturn;\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style,\n\t\t\t\tlines = this._lines,\n\t\t\t\tleading = style.getLeading(),\n\t\t\t\tshadowColor = ctx.shadowColor;\n\t\t\tctx.font = style.getFontStyle();\n\t\t\tctx.textAlign = style.getJustification();\n\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\t\tctx.shadowColor = shadowColor;\n\t\t\t\tvar line = lines[i];\n\t\t\t\tif (style.hasFill()) {\n\t\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (style.hasStroke())\n\t\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\t\tctx.translate(0, leading);\n\t\t\t}\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\tvar style = this._style,\n\t\t\t\tlines = this._lines,\n\t\t\t\tnumLines = lines.length,\n\t\t\t\tjustification = style.getJustification(),\n\t\t\t\tleading = style.getLeading(),\n\t\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\t\tx = 0;\n\t\t\tif (justification !== 'left')\n\t\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\t\twidth, numLines * leading);\n\t\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t\t}\n\t});\n\t\n\tvar Color = Base.extend(new function() {\n\t\tvar types = {\n\t\t\tgray: ['gray'],\n\t\t\trgb: ['red', 'green', 'blue'],\n\t\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t\t};\n\t\n\t\tvar componentParsers = {},\n\t\t\tcolorCache = {},\n\t\t\tcolorCtx;\n\t\n\t\tfunction fromCSS(string) {\n\t\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\t\tcomponents;\n\t\t\tif (match) {\n\t\t\t\tcomponents = [0, 0, 0];\n\t\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\t\tvar value = match[i + 1];\n\t\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t\t}\n\t\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\t\tcomponents = match[1].split(',');\n\t\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\t\tvar value = +components[i];\n\t\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar cached = colorCache[string];\n\t\t\t\tif (!cached) {\n\t\t\t\t\tif (!colorCtx) {\n\t\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t\t}\n\t\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\t\tdata[2] / 255\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tcomponents = cached.slice();\n\t\t\t}\n\t\t\treturn components;\n\t\t}\n\t\n\t\tvar hsbIndices = [\n\t\t\t[0, 3, 1],\n\t\t\t[2, 0, 1],\n\t\t\t[1, 0, 3],\n\t\t\t[1, 2, 0],\n\t\t\t[3, 1, 0],\n\t\t\t[0, 1, 2]\n\t\t];\n\t\n\t\tvar converters = {\n\t\t\t'rgb-hsb': function(r, g, b) {\n\t\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\t\tdelta = max - min,\n\t\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t\t},\n\t\n\t\t\t'hsb-rgb': function(h, s, b) {\n\t\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\t\tvar i = Math.floor(h),\n\t\t\t\t\tf = h - i,\n\t\t\t\t\ti = hsbIndices[i],\n\t\t\t\t\tv = [\n\t\t\t\t\t\tb,\n\t\t\t\t\t\tb * (1 - s),\n\t\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t\t];\n\t\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t\t},\n\t\n\t\t\t'rgb-hsl': function(r, g, b) {\n\t\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\t\tdelta = max - min,\n\t\t\t\t\tachromatic = delta === 0,\n\t\t\t\t\th = achromatic ? 0\n\t\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\t\tl = (max + min) / 2,\n\t\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\t\treturn [h, s, l];\n\t\t\t},\n\t\n\t\t\t'hsl-rgb': function(h, s, l) {\n\t\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\t\tif (s === 0)\n\t\t\t\t\treturn [l, l, l];\n\t\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\t\tc = [];\n\t\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\t\tvar t3 = t3s[i];\n\t\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t\t? t2\n\t\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t\t: t1;\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t},\n\t\n\t\t\t'rgb-gray': function(r, g, b) {\n\t\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t\t},\n\t\n\t\t\t'gray-rgb': function(g) {\n\t\t\t\treturn [g, g, g];\n\t\t\t},\n\t\n\t\t\t'gray-hsb': function(g) {\n\t\t\t\treturn [0, 0, g];\n\t\t\t},\n\t\n\t\t\t'gray-hsl': function(g) {\n\t\t\t\treturn [0, 0, g];\n\t\t\t},\n\t\n\t\t\t'gradient-rgb': function() {\n\t\t\t\treturn [];\n\t\t\t},\n\t\n\t\t\t'rgb-gradient': function() {\n\t\t\t\treturn [];\n\t\t\t}\n\t\n\t\t};\n\t\n\t\treturn Base.each(types, function(properties, type) {\n\t\t\tcomponentParsers[type] = [];\n\t\t\tBase.each(properties, function(name, index) {\n\t\t\t\tvar part = Base.capitalize(name),\n\t\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t\t? function(value) {\n\t\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t\t};\n\t\n\t\t\t\tthis['get' + part] = function() {\n\t\t\t\t\treturn this._type === type\n\t\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t\t};\n\t\n\t\t\t\tthis['set' + part] = function(value) {\n\t\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\t\tthis._type = type;\n\t\t\t\t\t}\n\t\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\t\tthis._changed();\n\t\t\t\t};\n\t\t\t}, this);\n\t\t}, {\n\t\t\t_class: 'Color',\n\t\t\t_readIndex: true,\n\t\n\t\t\tinitialize: function Color(arg) {\n\t\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\t\targs = arguments,\n\t\t\t\t\tread = 0,\n\t\t\t\t\ttype,\n\t\t\t\t\tcomponents,\n\t\t\t\t\talpha,\n\t\t\t\t\tvalues;\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\targs = arg;\n\t\t\t\t\targ = args[0];\n\t\t\t\t}\n\t\t\t\tvar argType = arg != null && typeof arg;\n\t\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\t\ttype = arg;\n\t\t\t\t\targ = args[1];\n\t\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\t\tcomponents = arg;\n\t\t\t\t\t\talpha = args[2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\t\tread = 1;\n\t\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\t\targType = typeof arg;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!components) {\n\t\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t\t? args\n\t\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\tif (values) {\n\t\t\t\t\t\tif (!type)\n\t\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\t\talpha = values[length];\n\t\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.__read && type)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t}\n\t\t\t\tthis._type = type || 'rgb';\n\t\t\t\tthis._id = UID.get(Color);\n\t\t\t\tif (!components) {\n\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._components = components;\n\t\t\t\tthis._properties = types[this._type];\n\t\t\t\tthis._alpha = alpha;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = read;\n\t\t\t},\n\t\n\t\t\t_serialize: function(options, dictionary) {\n\t\t\t\tvar components = this.getComponents();\n\t\t\t\treturn Base.serialize(\n\t\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t\t? components\n\t\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\t\toptions, true, dictionary);\n\t\t\t},\n\t\n\t\t\t_changed: function() {\n\t\t\t\tthis._canvasStyle = null;\n\t\t\t\tif (this._owner)\n\t\t\t\t\tthis._owner._changed(65);\n\t\t\t},\n\t\n\t\t\t_convert: function(type) {\n\t\t\t\tvar converter;\n\t\t\t\treturn this._type === type\n\t\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\t\tthis._components));\n\t\t\t},\n\t\n\t\t\tconvert: function(type) {\n\t\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t\t},\n\t\n\t\t\tgetType: function() {\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\n\t\t\tsetType: function(type) {\n\t\t\t\tthis._components = this._convert(type);\n\t\t\t\tthis._properties = types[type];\n\t\t\t\tthis._type = type;\n\t\t\t},\n\t\n\t\t\tgetComponents: function() {\n\t\t\t\tvar components = this._components.slice();\n\t\t\t\tif (this._alpha != null)\n\t\t\t\t\tcomponents.push(this._alpha);\n\t\t\t\treturn components;\n\t\t\t},\n\t\n\t\t\tgetAlpha: function() {\n\t\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t\t},\n\t\n\t\t\tsetAlpha: function(alpha) {\n\t\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\t\tthis._changed();\n\t\t\t},\n\t\n\t\t\thasAlpha: function() {\n\t\t\t\treturn this._alpha != null;\n\t\t\t},\n\t\n\t\t\tequals: function(color) {\n\t\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t\t: color;\n\t\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t\t|| false;\n\t\t\t},\n\t\n\t\t\ttoString: function() {\n\t\t\t\tvar properties = this._properties,\n\t\t\t\t\tparts = [],\n\t\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\t\tf = Formatter.instance;\n\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\tvar value = this._components[i];\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t\t}\n\t\t\t\tif (this._alpha != null)\n\t\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t\t},\n\t\n\t\t\ttoCSS: function(hex) {\n\t\t\t\tvar components = this._convert('rgb'),\n\t\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\t\tfunction convert(val) {\n\t\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t\t}\n\t\t\t\tcomponents = [\n\t\t\t\t\tconvert(components[0]),\n\t\t\t\t\tconvert(components[1]),\n\t\t\t\t\tconvert(components[2])\n\t\t\t\t];\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\t\treturn hex\n\t\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t\t},\n\t\n\t\t\ttoCanvasStyle: function(ctx) {\n\t\t\t\tif (this._canvasStyle)\n\t\t\t\t\treturn this._canvasStyle;\n\t\t\t\tif (this._type !== 'gradient')\n\t\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\t\tvar components = this._components,\n\t\t\t\t\tgradient = components[0],\n\t\t\t\t\tstops = gradient._stops,\n\t\t\t\t\torigin = components[1],\n\t\t\t\t\tdestination = components[2],\n\t\t\t\t\tcanvasGradient;\n\t\t\t\tif (gradient._radial) {\n\t\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\t\thighlight = components[3];\n\t\t\t\t\tif (highlight) {\n\t\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t\t}\n\t\t\t\t\tvar start = highlight || origin;\n\t\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t\t} else {\n\t\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t\t}\n\t\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\t\tvar stop = stops[i];\n\t\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t\t}\n\t\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t\t},\n\t\n\t\t\ttransform: function(matrix) {\n\t\t\t\tif (this._type === 'gradient') {\n\t\t\t\t\tvar components = this._components;\n\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t\t}\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tstatics: {\n\t\t\t\t_types: types,\n\t\n\t\t\t\trandom: function() {\n\t\t\t\t\tvar random = Math.random;\n\t\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tnew function() {\n\t\tvar operators = {\n\t\t\tadd: function(a, b) {\n\t\t\t\treturn a + b;\n\t\t\t},\n\t\n\t\t\tsubtract: function(a, b) {\n\t\t\t\treturn a - b;\n\t\t\t},\n\t\n\t\t\tmultiply: function(a, b) {\n\t\t\t\treturn a * b;\n\t\t\t},\n\t\n\t\t\tdivide: function(a, b) {\n\t\t\t\treturn a / b;\n\t\t\t}\n\t\t};\n\t\n\t\treturn Base.each(operators, function(operator, name) {\n\t\t\tthis[name] = function(color) {\n\t\t\t\tcolor = Color.read(arguments);\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tcomponents1 = this._components,\n\t\t\t\t\tcomponents2 = color._convert(type);\n\t\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\t\treturn new Color(type, components2,\n\t\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t\t: null);\n\t\t\t};\n\t\t}, {\n\t\t});\n\t});\n\t\n\tvar Gradient = Base.extend({\n\t\t_class: 'Gradient',\n\t\n\t\tinitialize: function Gradient(stops, radial) {\n\t\t\tthis._id = UID.get();\n\t\t\tif (stops && this._set(stops))\n\t\t\t\tstops = radial = null;\n\t\t\tif (!this._stops)\n\t\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\t\tif (this._radial == null)\n\t\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t\t|| radial || false);\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn dictionary.add(this, function() {\n\t\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\t\toptions, true, dictionary);\n\t\t\t});\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\t\tthis._owners[i]._changed();\n\t\t},\n\t\n\t\t_addOwner: function(color) {\n\t\t\tif (!this._owners)\n\t\t\t\tthis._owners = [];\n\t\t\tthis._owners.push(color);\n\t\t},\n\t\n\t\t_removeOwner: function(color) {\n\t\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\t\tif (index != -1) {\n\t\t\t\tthis._owners.splice(index, 1);\n\t\t\t\tif (this._owners.length === 0)\n\t\t\t\t\tthis._owners = undefined;\n\t\t\t}\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\tvar stops = [];\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tstops[i] = this._stops[i].clone();\n\t\t\treturn new Gradient(stops, this._radial);\n\t\t},\n\t\n\t\tgetStops: function() {\n\t\t\treturn this._stops;\n\t\t},\n\t\n\t\tsetStops: function(stops) {\n\t\t\tif (this.stops) {\n\t\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t\t}\n\t\t\tif (stops.length < 2)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tvar stop = this._stops[i];\n\t\t\t\tstop._owner = this;\n\t\t\t\tif (stop._defaultRamp)\n\t\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t\t}\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tgetRadial: function() {\n\t\t\treturn this._radial;\n\t\t},\n\t\n\t\tsetRadial: function(radial) {\n\t\t\tthis._radial = radial;\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tequals: function(gradient) {\n\t\t\tif (gradient === this)\n\t\t\t\treturn true;\n\t\t\tif (gradient && this._class === gradient._class\n\t\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t});\n\t\n\tvar GradientStop = Base.extend({\n\t\t_class: 'GradientStop',\n\t\n\t\tinitialize: function GradientStop(arg0, arg1) {\n\t\t\tif (arg0) {\n\t\t\t\tvar color, rampPoint;\n\t\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\t\tcolor = arg0[0];\n\t\t\t\t\trampPoint = arg0[1];\n\t\t\t\t} else if (arg0.color) {\n\t\t\t\t\tcolor = arg0.color;\n\t\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t\t} else {\n\t\t\t\t\tcolor = arg0;\n\t\t\t\t\trampPoint = arg1;\n\t\t\t\t}\n\t\t\t\tthis.setColor(color);\n\t\t\t\tthis.setRampPoint(rampPoint);\n\t\t\t}\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\t\tdictionary);\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\t\n\t\tgetRampPoint: function() {\n\t\t\treturn this._rampPoint;\n\t\t},\n\t\n\t\tsetRampPoint: function(rampPoint) {\n\t\t\tthis._defaultRamp = rampPoint == null;\n\t\t\tthis._rampPoint = rampPoint || 0;\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tgetColor: function() {\n\t\t\treturn this._color;\n\t\t},\n\t\n\t\tsetColor: function(color) {\n\t\t\tthis._color = Color.read(arguments);\n\t\t\tif (this._color === color)\n\t\t\t\tthis._color = color.clone();\n\t\t\tthis._color._owner = this;\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tequals: function(stop) {\n\t\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t\t|| false;\n\t\t}\n\t});\n\t\n\tvar Style = Base.extend(new function() {\n\t\tvar defaults = {\n\t\t\tfillColor: undefined,\n\t\t\tstrokeColor: undefined,\n\t\t\tstrokeWidth: 1,\n\t\t\tstrokeCap: 'butt',\n\t\t\tstrokeJoin: 'miter',\n\t\t\tstrokeScaling: true,\n\t\t\tmiterLimit: 10,\n\t\t\tdashOffset: 0,\n\t\t\tdashArray: [],\n\t\t\twindingRule: 'nonzero',\n\t\t\tshadowColor: undefined,\n\t\t\tshadowBlur: 0,\n\t\t\tshadowOffset: new Point(),\n\t\t\tselectedColor: undefined,\n\t\t\tfontFamily: 'sans-serif',\n\t\t\tfontWeight: 'normal',\n\t\t\tfontSize: 12,\n\t\t\tfont: 'sans-serif',\n\t\t\tleading: null,\n\t\t\tjustification: 'left'\n\t\t};\n\t\n\t\tvar flags = {\n\t\t\tstrokeWidth: 97,\n\t\t\tstrokeCap: 97,\n\t\t\tstrokeJoin: 97,\n\t\t\tstrokeScaling: 105,\n\t\t\tmiterLimit: 97,\n\t\t\tfontFamily: 9,\n\t\t\tfontWeight: 9,\n\t\t\tfontSize: 9,\n\t\t\tfont: 9,\n\t\t\tleading: 9,\n\t\t\tjustification: 9\n\t\t};\n\t\n\t\tvar item = { beans: true },\n\t\t\tfields = {\n\t\t\t\t_defaults: defaults,\n\t\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\t\tfillColor: new Color()\n\t\t\t\t}),\n\t\t\t\tbeans: true\n\t\t\t};\n\t\n\t\tBase.each(defaults, function(value, key) {\n\t\t\tvar isColor = /Color$/.test(key),\n\t\t\t\tisPoint = key === 'shadowOffset',\n\t\t\t\tpart = Base.capitalize(key),\n\t\t\t\tflag = flags[key],\n\t\t\t\tset = 'set' + part,\n\t\t\t\tget = 'get' + part;\n\t\n\t\t\tfields[set] = function(value) {\n\t\t\t\tvar owner = this._owner,\n\t\t\t\t\tchildren = owner && owner._children;\n\t\t\t\tif (children && children.length > 0\n\t\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t\t} else {\n\t\t\t\t\tvar old = this._values[key];\n\t\t\t\t\tif (old !== value) {\n\t\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\t\tif (owner)\n\t\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tfields[get] = function(_dontMerge) {\n\t\t\t\tvar owner = this._owner,\n\t\t\t\t\tchildren = owner && owner._children,\n\t\t\t\t\tvalue;\n\t\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\t\tvar value = this._values[key];\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tvalue = childValue;\n\t\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t};\n\t\n\t\t\titem[get] = function(_dontMerge) {\n\t\t\t\treturn this._style[get](_dontMerge);\n\t\t\t};\n\t\n\t\t\titem[set] = function(value) {\n\t\t\t\tthis._style[set](value);\n\t\t\t};\n\t\t});\n\t\n\t\tItem.inject(item);\n\t\treturn fields;\n\t}, {\n\t\t_class: 'Style',\n\t\n\t\tinitialize: function Style(style, _owner, _project) {\n\t\t\tthis._values = {};\n\t\t\tthis._owner = _owner;\n\t\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\t\tif (_owner instanceof TextItem)\n\t\t\t\tthis._defaults = this._textDefaults;\n\t\t\tif (style)\n\t\t\t\tthis.set(style);\n\t\t},\n\t\n\t\tset: function(style) {\n\t\t\tvar isStyle = style instanceof Style,\n\t\t\t\tvalues = isStyle ? style._values : style;\n\t\t\tif (values) {\n\t\t\t\tfor (var key in values) {\n\t\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\t\tvar value = values[key];\n\t\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tequals: function(style) {\n\t\t\treturn style === this || style && this._class === style._class\n\t\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\thasFill: function() {\n\t\t\treturn !!this.getFillColor();\n\t\t},\n\t\n\t\thasStroke: function() {\n\t\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t\t},\n\t\n\t\thasShadow: function() {\n\t\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t\t},\n\t\n\t\tgetView: function() {\n\t\t\treturn this._project.getView();\n\t\t},\n\t\n\t\tgetFontStyle: function() {\n\t\t\tvar fontSize = this.getFontSize();\n\t\t\treturn this.getFontWeight()\n\t\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t\t+ this.getFontFamily();\n\t\t},\n\t\n\t\tgetFont: '#getFontFamily',\n\t\tsetFont: '#setFontFamily',\n\t\n\t\tgetLeading: function getLeading() {\n\t\t\tvar leading = getLeading.base.call(this),\n\t\t\t\tfontSize = this.getFontSize();\n\t\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\t\treturn leading != null ? leading : fontSize * 1.2;\n\t\t}\n\t\n\t});\n\t\n\tvar DomElement = new function() {\n\t\tfunction handlePrefix(el, name, set, value) {\n\t\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tvar prefix = prefixes[i],\n\t\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\t\tif (key in el) {\n\t\t\t\t\tif (set) {\n\t\t\t\t\t\tel[key] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn el[key];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tgetStyles: function(el) {\n\t\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\t\tview = doc && doc.defaultView;\n\t\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t\t},\n\t\n\t\t\tgetBounds: function(el, viewport) {\n\t\t\t\tvar doc = el.ownerDocument,\n\t\t\t\t\tbody = doc.body,\n\t\t\t\t\thtml = doc.documentElement,\n\t\t\t\t\trect;\n\t\t\t\ttry {\n\t\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t\t} catch (e) {\n\t\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t\t}\n\t\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\t\tif (!viewport) {\n\t\t\t\t\tvar view = doc.defaultView;\n\t\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t\t}\n\t\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t\t},\n\t\n\t\t\tgetViewportBounds: function(el) {\n\t\t\t\tvar doc = el.ownerDocument,\n\t\t\t\t\tview = doc.defaultView,\n\t\t\t\t\thtml = doc.documentElement;\n\t\t\t\treturn new Rectangle(0, 0,\n\t\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tgetOffset: function(el, viewport) {\n\t\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t\t},\n\t\n\t\t\tgetSize: function(el) {\n\t\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t\t},\n\t\n\t\t\tisInvisible: function(el) {\n\t\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t\t},\n\t\n\t\t\tisInView: function(el) {\n\t\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t\t},\n\t\n\t\t\tgetPrefixed: function(el, name) {\n\t\t\t\treturn handlePrefix(el, name);\n\t\t\t},\n\t\n\t\t\tsetPrefixed: function(el, name, value) {\n\t\t\t\tif (typeof name === 'object') {\n\t\t\t\t\tfor (var key in name)\n\t\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t\t} else {\n\t\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar DomEvent = {\n\t\tadd: function(el, events) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t\t}\n\t\t},\n\t\n\t\tremove: function(el, events) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t\t}\n\t\t},\n\t\n\t\tgetPoint: function(event) {\n\t\t\tvar pos = event.targetTouches\n\t\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t\t: event;\n\t\t\treturn new Point(\n\t\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t\t);\n\t\t},\n\t\n\t\tgetTarget: function(event) {\n\t\t\treturn event.target || event.srcElement;\n\t\t},\n\t\n\t\tgetRelatedTarget: function(event) {\n\t\t\treturn event.relatedTarget || event.toElement;\n\t\t},\n\t\n\t\tgetOffset: function(event, target) {\n\t\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t\t},\n\t\n\t\tstop: function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\t\n\tDomEvent.requestAnimationFrame = new function() {\n\t\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\t\trequested = false,\n\t\t\tcallbacks = [],\n\t\t\tfocused = true,\n\t\t\ttimer;\n\t\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t\n\t\tfunction handleCallbacks() {\n\t\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\t\tvar entry = callbacks[i],\n\t\t\t\t\tfunc = entry[0],\n\t\t\t\t\tel = entry[1];\n\t\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\t\tfunc();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nativeRequest) {\n\t\t\t\tif (callbacks.length) {\n\t\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\t} else {\n\t\t\t\t\trequested = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn function(callback, element) {\n\t\t\tcallbacks.push([callback, element]);\n\t\t\tif (nativeRequest) {\n\t\t\t\tif (!requested) {\n\t\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\t\trequested = true;\n\t\t\t\t}\n\t\t\t} else if (!timer) {\n\t\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar View = Base.extend(Emitter, {\n\t\t_class: 'View',\n\t\n\t\tinitialize: function View(project, element) {\n\t\t\tthis._project = project;\n\t\t\tthis._scope = project._scope;\n\t\t\tthis._element = element;\n\t\t\tvar size;\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\t\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t};\n\t\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t};\n\t\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\t\t\tView._views.push(this);\n\t\t\tView._viewsById[this._id] = this;\n\t\t\tthis._viewSize = size;\n\t\t\t(this._matrix = new Matrix())._owner = this;\n\t\t\tthis._zoom = 1;\n\t\t\tif (!View._focused)\n\t\t\t\tView._focused = this;\n\t\t\tthis._frameItems = {};\n\t\t\tthis._frameItemCount = 0;\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tif (!this._project)\n\t\t\t\treturn false;\n\t\t\tif (View._focused === this)\n\t\t\t\tView._focused = null;\n\t\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\t\tdelete View._viewsById[this._id];\n\t\t\tif (this._project._view === this)\n\t\t\t\tthis._project._view = null;\n\t\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\t\tDomEvent.remove(window, this._windowEvents);\n\t\t\tthis._element = this._project = null;\n\t\t\tthis.off('frame');\n\t\t\tthis._animate = false;\n\t\t\tthis._frameItems = {};\n\t\t\treturn true;\n\t\t},\n\t\n\t\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = {\n\t\t\t\t\tinstall: function(type) {\n\t\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function(type) {\n\t\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.play();\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t),\n\t\n\t\t_animate: false,\n\t\t_time: 0,\n\t\t_count: 0,\n\t\n\t\t_requestFrame: function() {\n\t\t\tvar that = this;\n\t\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\t\tthat._requested = false;\n\t\t\t\tif (!that._animate)\n\t\t\t\t\treturn;\n\t\t\t\tthat._requestFrame();\n\t\t\t\tthat._handleFrame();\n\t\t\t}, this._element);\n\t\t\tthis._requested = true;\n\t\t},\n\t\n\t\t_handleFrame: function() {\n\t\t\tpaper = this._scope;\n\t\t\tvar now = Date.now() / 1000,\n\t\t\t\tdelta = this._before ? now - this._before : 0;\n\t\t\tthis._before = now;\n\t\t\tthis._handlingFrame = true;\n\t\t\tthis.emit('frame', new Base({\n\t\t\t\tdelta: delta,\n\t\t\t\ttime: this._time += delta,\n\t\t\t\tcount: this._count++\n\t\t\t}));\n\t\t\tif (this._stats)\n\t\t\t\tthis._stats.update();\n\t\t\tthis._handlingFrame = false;\n\t\t\tthis.update();\n\t\t},\n\t\n\t\t_animateItem: function(item, animate) {\n\t\t\tvar items = this._frameItems;\n\t\t\tif (animate) {\n\t\t\t\titems[item._id] = {\n\t\t\t\t\titem: item,\n\t\t\t\t\ttime: 0,\n\t\t\t\t\tcount: 0\n\t\t\t\t};\n\t\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t\t} else {\n\t\t\t\tdelete items[item._id];\n\t\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t_handleFrameItems: function(event) {\n\t\t\tfor (var i in this._frameItems) {\n\t\t\t\tvar entry = this._frameItems[i];\n\t\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\t\tcount: entry.count++\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\n\t\t_update: function() {\n\t\t\tthis._project._needsUpdate = true;\n\t\t\tif (this._handlingFrame)\n\t\t\t\treturn;\n\t\t\tif (this._animate) {\n\t\t\t\tthis._handleFrame();\n\t\t\t} else {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\n\t\t_changed: function(flags) {\n\t\t\tif (flags & 1)\n\t\t\t\tthis._project._needsUpdate = true;\n\t\t},\n\t\n\t\t_transform: function(matrix) {\n\t\t\tthis._matrix.concatenate(matrix);\n\t\t\tthis._bounds = null;\n\t\t\tthis._update();\n\t\t},\n\t\n\t\tgetElement: function() {\n\t\t\treturn this._element;\n\t\t},\n\t\n\t\tgetPixelRatio: function() {\n\t\t\treturn this._pixelRatio;\n\t\t},\n\t\n\t\tgetResolution: function() {\n\t\t\treturn this._pixelRatio * 72;\n\t\t},\n\t\n\t\tgetViewSize: function() {\n\t\t\tvar size = this._viewSize;\n\t\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t\t},\n\t\n\t\tsetViewSize: function() {\n\t\t\tvar size = Size.read(arguments),\n\t\t\t\tdelta = size.subtract(this._viewSize);\n\t\t\tif (delta.isZero())\n\t\t\t\treturn;\n\t\t\tthis._viewSize.set(size.width, size.height);\n\t\t\tthis._setViewSize(size);\n\t\t\tthis._bounds = null;\n\t\t\tthis.emit('resize', {\n\t\t\t\tsize: size,\n\t\t\t\tdelta: delta\n\t\t\t});\n\t\t\tthis._update();\n\t\t},\n\t\n\t\t_setViewSize: function(size) {\n\t\t\tvar element = this._element;\n\t\t\telement.width = size.width;\n\t\t\telement.height = size.height;\n\t\t},\n\t\n\t\tgetBounds: function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\t\treturn this._bounds;\n\t\t},\n\t\n\t\tgetSize: function() {\n\t\t\treturn this.getBounds().getSize();\n\t\t},\n\t\n\t\tgetCenter: function() {\n\t\t\treturn this.getBounds().getCenter();\n\t\t},\n\t\n\t\tsetCenter: function() {\n\t\t\tvar center = Point.read(arguments);\n\t\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t\t},\n\t\n\t\tgetZoom: function() {\n\t\t\treturn this._zoom;\n\t\t},\n\t\n\t\tsetZoom: function(zoom) {\n\t\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\t\tthis.getCenter()));\n\t\t\tthis._zoom = zoom;\n\t\t},\n\t\n\t\tisVisible: function() {\n\t\t\treturn DomElement.isInView(this._element);\n\t\t},\n\t\n\t\tscrollBy: function() {\n\t\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t\t},\n\t\n\t\tplay: function() {\n\t\t\tthis._animate = true;\n\t\t\tif (!this._requested)\n\t\t\t\tthis._requestFrame();\n\t\t},\n\t\n\t\tpause: function() {\n\t\t\tthis._animate = false;\n\t\t},\n\t\n\t\tdraw: function() {\n\t\t\tthis.update();\n\t\t},\n\t\n\t\tprojectToView: function() {\n\t\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t\t},\n\t\n\t\tviewToProject: function() {\n\t\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t\t}\n\t\n\t}, {\n\t\tstatics: {\n\t\t\t_views: [],\n\t\t\t_viewsById: {},\n\t\t\t_id: 0,\n\t\n\t\t\tcreate: function(project, element) {\n\t\t\t\tif (typeof element === 'string')\n\t\t\t\t\telement = document.getElementById(element);\n\t\t\t\treturn new CanvasView(project, element);\n\t\t\t}\n\t\t}\n\t},\n\tnew function() {\n\t\tvar tool,\n\t\t\tprevFocus,\n\t\t\ttempFocus,\n\t\t\tdragging = false;\n\t\n\t\tfunction getView(event) {\n\t\t\tvar target = DomEvent.getTarget(event);\n\t\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t\t}\n\t\n\t\tfunction viewToProject(view, event) {\n\t\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t\t}\n\t\n\t\tfunction updateFocus() {\n\t\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\t\tvar view = View._views[i];\n\t\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction handleMouseMove(view, point, event) {\n\t\t\tview._handleEvent('mousemove', point, event);\n\t\t\tvar tool = view._scope.tool;\n\t\t\tif (tool) {\n\t\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t\t}\n\t\t\tview.update();\n\t\t\treturn tool;\n\t\t}\n\t\n\t\tvar navigator = window.navigator,\n\t\t\tmousedown, mousemove, mouseup;\n\t\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\t\tmousedown = 'pointerdown MSPointerDown';\n\t\t\tmousemove = 'pointermove MSPointerMove';\n\t\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t\t} else {\n\t\t\tmousedown = 'touchstart';\n\t\t\tmousemove = 'touchmove';\n\t\t\tmouseup = 'touchend touchcancel';\n\t\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\t\tmousedown += ' mousedown';\n\t\t\t\tmousemove += ' mousemove';\n\t\t\t\tmouseup += ' mouseup';\n\t\t\t}\n\t\t}\n\t\n\t\tvar viewEvents = {\n\t\t\t'selectstart dragstart': function(event) {\n\t\t\t\tif (dragging)\n\t\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t};\n\t\n\t\tvar docEvents = {\n\t\t\tmouseout: function(event) {\n\t\t\t\tvar view = View._focused,\n\t\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t},\n\t\n\t\t\tscroll: updateFocus\n\t\t};\n\t\n\t\tviewEvents[mousedown] = function(event) {\n\t\t\tvar view = View._focused = getView(event),\n\t\t\t\tpoint = viewToProject(view, event);\n\t\t\tdragging = true;\n\t\t\tview._handleEvent('mousedown', point, event);\n\t\t\tif (tool = view._scope.tool)\n\t\t\t\ttool._handleEvent('mousedown', point, event);\n\t\t\tview.update();\n\t\t};\n\t\n\t\tdocEvents[mousemove] = function(event) {\n\t\t\tvar view = View._focused;\n\t\t\tif (!dragging) {\n\t\t\t\tvar target = getView(event);\n\t\t\t\tif (target) {\n\t\t\t\t\tif (view !== target)\n\t\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\t\tprevFocus = view;\n\t\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\t\tupdateFocus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (view) {\n\t\t\t\tvar point = viewToProject(view, event);\n\t\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t\t}\n\t\t};\n\t\n\t\tdocEvents[mouseup] = function(event) {\n\t\t\tvar view = View._focused;\n\t\t\tif (!view || !dragging)\n\t\t\t\treturn;\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tdragging = false;\n\t\t\tview._handleEvent('mouseup', point, event);\n\t\t\tif (tool)\n\t\t\t\ttool._handleEvent('mouseup', point, event);\n\t\t\tview.update();\n\t\t};\n\t\n\t\tDomEvent.add(document, docEvents);\n\t\n\t\tDomEvent.add(window, {\n\t\t\tload: updateFocus\n\t\t});\n\t\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\t\n\t\treturn {\n\t\t\t_viewEvents: viewEvents,\n\t\n\t\t\t_handleEvent: function() {},\n\t\n\t\t\t_installEvent: function(type) {\n\t\t\t\tvar counters = this._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_uninstallEvent: function(type) {\n\t\t\t\tvar counters = this._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tstatics: {\n\t\t\t\tupdateFocus: updateFocus\n\t\t\t}\n\t\t};\n\t});\n\t\n\tvar CanvasView = View.extend({\n\t\t_class: 'CanvasView',\n\t\n\t\tinitialize: function CanvasView(project, canvas) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments, 1);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t\tthis._eventCounters = {};\n\t\t\tthis._pixelRatio = 1;\n\t\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t\t}\n\t\t\tView.call(this, project, canvas);\n\t\t},\n\t\n\t\t_setViewSize: function(size) {\n\t\t\tvar element = this._element,\n\t\t\t\tpixelRatio = this._pixelRatio,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.height = height * pixelRatio;\n\t\t\tif (pixelRatio !== 1) {\n\t\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\t\tvar style = element.style;\n\t\t\t\t\tstyle.width = width + 'px';\n\t\t\t\t\tstyle.height = height + 'px';\n\t\t\t\t}\n\t\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t\t}\n\t\t},\n\t\n\t\tgetPixelSize: function(size) {\n\t\t\tvar browser = paper.browser,\n\t\t\t\tpixels;\n\t\t\tif (browser && browser.firefox) {\n\t\t\t\tvar parent = this._element.parentNode,\n\t\t\t\t\ttemp = document.createElement('div');\n\t\t\t\ttemp.style.fontSize = size;\n\t\t\t\tparent.appendChild(temp);\n\t\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\t\tparent.removeChild(temp);\n\t\t\t} else {\n\t\t\t\tvar ctx = this._context,\n\t\t\t\t\tprevFont = ctx.font;\n\t\t\t\tctx.font = size + ' serif';\n\t\t\t\tpixels = parseFloat(ctx.font);\n\t\t\t\tctx.font = prevFont;\n\t\t\t}\n\t\t\treturn pixels;\n\t\t},\n\t\n\t\tgetTextWidth: function(font, lines) {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font,\n\t\t\t\twidth = 0;\n\t\t\tctx.font = font;\n\t\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\t\tctx.font = prevFont;\n\t\t\treturn width;\n\t\t},\n\t\n\t\tupdate: function(force) {\n\t\t\tvar project = this._project;\n\t\t\tif (!project || !force && !project._needsUpdate)\n\t\t\t\treturn false;\n\t\t\tvar ctx = this._context,\n\t\t\t\tsize = this._viewSize;\n\t\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\t\tproject._needsUpdate = false;\n\t\t\treturn true;\n\t\t}\n\t},\n\tnew function() {\n\t\tvar downPoint,\n\t\t\tlastPoint,\n\t\t\toverPoint,\n\t\t\tdownItem,\n\t\t\tlastItem,\n\t\t\toverItem,\n\t\t\tdragItem,\n\t\t\tdblClick,\n\t\t\tclickTime;\n\t\n\t\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\t\tvar item = target,\n\t\t\t\tmouseEvent;\n\t\n\t\t\tfunction call(obj) {\n\t\t\t\tif (obj.responds(type)) {\n\t\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t\t}\n\t\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\twhile (item) {\n\t\t\t\tif (call(item))\n\t\t\t\t\treturn true;\n\t\t\t\titem = item.getParent();\n\t\t\t}\n\t\t\tif (call(view))\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn {\n\t\t\t_handleEvent: function(type, point, event) {\n\t\t\t\tif (!this._eventCounters[type])\n\t\t\t\t\treturn;\n\t\t\t\tvar project = this._project,\n\t\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\t\ttolerance: 0,\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tstroke: true\n\t\t\t\t\t}),\n\t\t\t\t\titem = hit && hit.item,\n\t\t\t\t\tstopped = false;\n\t\t\t\tswitch (type) {\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\t\tdownItem = lastItem = item;\n\t\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\t\tdragItem = !stopped && item;\n\t\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mouseup':\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\t\tif (dragItem) {\n\t\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\t\tdblClick = false;\n\t\t\t\t\t}\n\t\t\t\t\tdownItem = dragItem = null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tif (dragItem)\n\t\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\t\tif (!stopped) {\n\t\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\t\tif (item !== overItem) {\n\t\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\t\toverItem = item;\n\t\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn stopped;\n\t\t\t}\n\t\t};\n\t});\n\t\n\tvar Event = Base.extend({\n\t\t_class: 'Event',\n\t\n\t\tinitialize: function Event(event) {\n\t\t\tthis.event = event;\n\t\t},\n\t\n\t\tisPrevented: false,\n\t\tisStopped: false,\n\t\n\t\tpreventDefault: function() {\n\t\t\tthis.isPrevented = true;\n\t\t\tthis.event.preventDefault();\n\t\t},\n\t\n\t\tstopPropagation: function() {\n\t\t\tthis.isStopped = true;\n\t\t\tthis.event.stopPropagation();\n\t\t},\n\t\n\t\tstop: function() {\n\t\t\tthis.stopPropagation();\n\t\t\tthis.preventDefault();\n\t\t},\n\t\n\t\tgetModifiers: function() {\n\t\t\treturn Key.modifiers;\n\t\t}\n\t});\n\t\n\tvar KeyEvent = Event.extend({\n\t\t_class: 'KeyEvent',\n\t\n\t\tinitialize: function KeyEvent(down, key, character, event) {\n\t\t\tEvent.call(this, event);\n\t\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\t\tthis.key = key;\n\t\t\tthis.character = character;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\treturn \"{ type: '\" + this.type\n\t\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t\t+ \" }\";\n\t\t}\n\t});\n\t\n\tvar Key = new function() {\n\t\n\t\tvar specialKeys = {\n\t\t\t8: 'backspace',\n\t\t\t9: 'tab',\n\t\t\t13: 'enter',\n\t\t\t16: 'shift',\n\t\t\t17: 'control',\n\t\t\t18: 'option',\n\t\t\t19: 'pause',\n\t\t\t20: 'caps-lock',\n\t\t\t27: 'escape',\n\t\t\t32: 'space',\n\t\t\t35: 'end',\n\t\t\t36: 'home',\n\t\t\t37: 'left',\n\t\t\t38: 'up',\n\t\t\t39: 'right',\n\t\t\t40: 'down',\n\t\t\t46: 'delete',\n\t\t\t91: 'command',\n\t\t\t93: 'command',\n\t\t\t224: 'command'\n\t\t},\n\t\n\t\tspecialChars = {\n\t\t\t9: true,\n\t\t\t13: true,\n\t\t\t32: true\n\t\t},\n\t\n\t\tmodifiers = new Base({\n\t\t\tshift: false,\n\t\t\tcontrol: false,\n\t\t\toption: false,\n\t\t\tcommand: false,\n\t\t\tcapsLock: false,\n\t\t\tspace: false\n\t\t}),\n\t\n\t\tcharCodeMap = {},\n\t\tkeyMap = {},\n\t\tcommandFixMap,\n\t\tdownCode;\n\t\n\t\tfunction handleKey(down, keyCode, charCode, event) {\n\t\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\t\tview = View._focused,\n\t\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\t\ttool = scope && scope.tool,\n\t\t\t\tname;\n\t\t\tkeyMap[key] = down;\n\t\t\tif (down) {\n\t\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t\t} else {\n\t\t\t\tdelete charCodeMap[keyCode];\n\t\t\t}\n\t\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\t\tmodifiers[name] = down;\n\t\t\t\tvar browser = paper.browser;\n\t\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\t\tif (down) {\n\t\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (down && commandFixMap) {\n\t\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t\t}\n\t\t\tif (tool && tool.responds(type)) {\n\t\t\t\tpaper = scope;\n\t\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\t\tif (view)\n\t\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\t\n\t\tDomEvent.add(document, {\n\t\t\tkeydown: function(event) {\n\t\t\t\tvar code = event.which || event.keyCode;\n\t\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\t\tevent);\n\t\t\t\t} else {\n\t\t\t\t\tdownCode = code;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tkeypress: function(event) {\n\t\t\t\tif (downCode != null) {\n\t\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\t\tdownCode = null;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tkeyup: function(event) {\n\t\t\t\tvar code = event.which || event.keyCode;\n\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t\t}\n\t\t});\n\t\n\t\tDomEvent.add(window, {\n\t\t\tblur: function(event) {\n\t\t\t\tfor (var code in charCodeMap)\n\t\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t\t}\n\t\t});\n\t\n\t\treturn {\n\t\t\tmodifiers: modifiers,\n\t\n\t\t\tisDown: function(key) {\n\t\t\t\treturn !!keyMap[key];\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar MouseEvent = Event.extend({\n\t\t_class: 'MouseEvent',\n\t\n\t\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\t\tEvent.call(this, event);\n\t\t\tthis.type = type;\n\t\t\tthis.point = point;\n\t\t\tthis.target = target;\n\t\t\tthis.delta = delta;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\treturn \"{ type: '\" + this.type\n\t\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t\t+ ' }';\n\t\t}\n\t});\n\t\n\tvar ToolEvent = Event.extend({\n\t\t_class: 'ToolEvent',\n\t\t_item: null,\n\t\n\t\tinitialize: function ToolEvent(tool, type, event) {\n\t\t\tthis.tool = tool;\n\t\t\tthis.type = type;\n\t\t\tthis.event = event;\n\t\t},\n\t\n\t\t_choosePoint: function(point, toolPoint) {\n\t\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn this._choosePoint(this._point, this.tool._point);\n\t\t},\n\t\n\t\tsetPoint: function(point) {\n\t\t\tthis._point = point;\n\t\t},\n\t\n\t\tgetLastPoint: function() {\n\t\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t\t},\n\t\n\t\tsetLastPoint: function(lastPoint) {\n\t\t\tthis._lastPoint = lastPoint;\n\t\t},\n\t\n\t\tgetDownPoint: function() {\n\t\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t\t},\n\t\n\t\tsetDownPoint: function(downPoint) {\n\t\t\tthis._downPoint = downPoint;\n\t\t},\n\t\n\t\tgetMiddlePoint: function() {\n\t\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t\t}\n\t\t\treturn this._middlePoint;\n\t\t},\n\t\n\t\tsetMiddlePoint: function(middlePoint) {\n\t\t\tthis._middlePoint = middlePoint;\n\t\t},\n\t\n\t\tgetDelta: function() {\n\t\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t\t: this._delta;\n\t\t},\n\t\n\t\tsetDelta: function(delta) {\n\t\t\tthis._delta = delta;\n\t\t},\n\t\n\t\tgetCount: function() {\n\t\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t\t? this.tool._downCount\n\t\t\t\t\t: this.tool._count;\n\t\t},\n\t\n\t\tsetCount: function(count) {\n\t\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t\t= count;\n\t\t},\n\t\n\t\tgetItem: function() {\n\t\t\tif (!this._item) {\n\t\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\t\tif (result) {\n\t\t\t\t\tvar item = result.item,\n\t\t\t\t\t\tparent = item._parent;\n\t\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\t\titem = parent;\n\t\t\t\t\t\tparent = parent._parent;\n\t\t\t\t\t}\n\t\t\t\t\tthis._item = item;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._item;\n\t\t},\n\t\n\t\tsetItem: function(item) {\n\t\t\tthis._item = item;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\treturn '{ type: ' + this.type\n\t\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t\t+ ' }';\n\t\t}\n\t});\n\t\n\tvar Tool = PaperScopeItem.extend({\n\t\t_class: 'Tool',\n\t\t_list: 'tools',\n\t\t_reference: 'tool',\n\t\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t\t'onKeyDown', 'onKeyUp' ],\n\t\n\t\tinitialize: function Tool(props) {\n\t\t\tPaperScopeItem.call(this);\n\t\t\tthis._firstMove = true;\n\t\t\tthis._count = 0;\n\t\t\tthis._downCount = 0;\n\t\t\tthis._set(props);\n\t\t},\n\t\n\t\tgetMinDistance: function() {\n\t\t\treturn this._minDistance;\n\t\t},\n\t\n\t\tsetMinDistance: function(minDistance) {\n\t\t\tthis._minDistance = minDistance;\n\t\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\t\tthis._maxDistance = minDistance;\n\t\t\t}\n\t\t},\n\t\n\t\tgetMaxDistance: function() {\n\t\t\treturn this._maxDistance;\n\t\t},\n\t\n\t\tsetMaxDistance: function(maxDistance) {\n\t\t\tthis._maxDistance = maxDistance;\n\t\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\t\tthis._minDistance = maxDistance;\n\t\t\t}\n\t\t},\n\t\n\t\tgetFixedDistance: function() {\n\t\t\treturn this._minDistance == this._maxDistance\n\t\t\t\t? this._minDistance : null;\n\t\t},\n\t\n\t\tsetFixedDistance: function(distance) {\n\t\t\tthis._minDistance = this._maxDistance = distance;\n\t\t},\n\t\n\t\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\t\tneedsChange, matchMaxDistance) {\n\t\t\tif (!start) {\n\t\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\t\tif (distance < minDist)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\t\tthis._point = point;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tthis._lastPoint = this._downPoint;\n\t\t\t\tthis._downPoint = this._point;\n\t\t\t\tthis._downCount++;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tthis._lastPoint = this._downPoint;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._count = start ? 0 : this._count + 1;\n\t\t\treturn true;\n\t\t},\n\t\n\t\t_fireEvent: function(type, event) {\n\t\t\tvar sets = paper.project._removeSets;\n\t\t\tif (sets) {\n\t\t\t\tif (type === 'mouseup')\n\t\t\t\t\tsets.mousedrag = null;\n\t\t\t\tvar set = sets[type];\n\t\t\t\tif (set) {\n\t\t\t\t\tfor (var id in set) {\n\t\t\t\t\t\tvar item = set[id];\n\t\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\titem.remove();\n\t\t\t\t\t}\n\t\t\t\t\tsets[type] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.responds(type)\n\t\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t\t},\n\t\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tpaper = this._scope;\n\t\t\tvar called = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\t\tcalled = this._fireEvent(type, event);\n\t\t\t\tbreak;\n\t\t\tcase 'mousedrag':\n\t\t\t\tvar needsChange = false,\n\t\t\t\t\tmatchMaxDistance = false;\n\t\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\t\tneedsChange = true;\n\t\t\t\t\tmatchMaxDistance = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t\t}\n\t\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\t\tfalse, false);\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\t\tthis._firstMove = true;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\t\tthis._firstMove = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (called)\n\t\t\t\tevent.preventDefault();\n\t\t\treturn called;\n\t\t}\n\t\n\t});\n\t\n\tvar Http = {\n\t\trequest: function(method, url, callback, async) {\n\t\t\tasync = (async === undefined) ? true : async;\n\t\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\t\txhr.open(method.toUpperCase(), url, async);\n\t\t\tif ('overrideMimeType' in xhr)\n\t\t\t\txhr.overrideMimeType('text/plain');\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\tvar status = xhr.status;\n\t\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn xhr.send(null);\n\t\t}\n\t};\n\t\n\tvar CanvasProvider = {\n\t\tcanvases: [],\n\t\n\t\tgetCanvas: function(width, height) {\n\t\t\tvar canvas,\n\t\t\t\tclear = true;\n\t\t\tif (typeof width === 'object') {\n\t\t\t\theight = width.height;\n\t\t\t\twidth = width.width;\n\t\t\t}\n\t\t\tif (this.canvases.length) {\n\t\t\t\tcanvas = this.canvases.pop();\n\t\t\t} else {\n\t\t\t\tcanvas = document.createElement('canvas');\n\t\t\t}\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\t\tif (clear)\n\t\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t\t} else {\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\t\t\t}\n\t\t\tctx.save();\n\t\t\treturn canvas;\n\t\t},\n\t\n\t\tgetContext: function(width, height) {\n\t\t\treturn this.getCanvas(width, height).getContext('2d');\n\t\t},\n\t\n\t\trelease: function(obj) {\n\t\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\t\tcanvas.getContext('2d').restore();\n\t\t\tthis.canvases.push(canvas);\n\t\t}\n\t};\n\t\n\tvar BlendMode = new function() {\n\t\tvar min = Math.min,\n\t\t\tmax = Math.max,\n\t\t\tabs = Math.abs,\n\t\t\tsr, sg, sb, sa,\n\t\t\tbr, bg, bb, ba,\n\t\t\tdr, dg, db;\n\t\n\t\tfunction getLum(r, g, b) {\n\t\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t\t}\n\t\n\t\tfunction setLum(r, g, b, l) {\n\t\t\tvar d = l - getLum(r, g, b);\n\t\t\tdr = r + d;\n\t\t\tdg = g + d;\n\t\t\tdb = b + d;\n\t\t\tvar l = getLum(dr, dg, db),\n\t\t\t\tmn = min(dr, dg, db),\n\t\t\t\tmx = max(dr, dg, db);\n\t\t\tif (mn < 0) {\n\t\t\t\tvar lmn = l - mn;\n\t\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\t\tdb = l + (db - l) * l / lmn;\n\t\t\t}\n\t\t\tif (mx > 255) {\n\t\t\t\tvar ln = 255 - l,\n\t\t\t\t\tmxl = mx - l;\n\t\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getSat(r, g, b) {\n\t\t\treturn max(r, g, b) - min(r, g, b);\n\t\t}\n\t\n\t\tfunction setSat(r, g, b, s) {\n\t\t\tvar col = [r, g, b],\n\t\t\t\tmx = max(r, g, b),\n\t\t\t\tmn = min(r, g, b),\n\t\t\t\tmd;\n\t\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\t\tif (col[mx] > col[mn]) {\n\t\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\t\tcol[mx] = s;\n\t\t\t} else {\n\t\t\t\tcol[md] = col[mx] = 0;\n\t\t\t}\n\t\t\tcol[mn] = 0;\n\t\t\tdr = col[0];\n\t\t\tdg = col[1];\n\t\t\tdb = col[2];\n\t\t}\n\t\n\t\tvar modes = {\n\t\t\tmultiply: function() {\n\t\t\t\tdr = br * sr / 255;\n\t\t\t\tdg = bg * sg / 255;\n\t\t\t\tdb = bb * sb / 255;\n\t\t\t},\n\t\n\t\t\tscreen: function() {\n\t\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t\t},\n\t\n\t\t\toverlay: function() {\n\t\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t\t},\n\t\n\t\t\t'soft-light': function() {\n\t\t\t\tvar t = sr * br / 255;\n\t\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\t\tt = sg * bg / 255;\n\t\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\t\tt = sb * bb / 255;\n\t\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t\t},\n\t\n\t\t\t'hard-light': function() {\n\t\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t\t},\n\t\n\t\t\t'color-dodge': function() {\n\t\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t\t},\n\t\n\t\t\t'color-burn': function() {\n\t\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t\t},\n\t\n\t\t\tdarken: function() {\n\t\t\t\tdr = br < sr ? br : sr;\n\t\t\t\tdg = bg < sg ? bg : sg;\n\t\t\t\tdb = bb < sb ? bb : sb;\n\t\t\t},\n\t\n\t\t\tlighten: function() {\n\t\t\t\tdr = br > sr ? br : sr;\n\t\t\t\tdg = bg > sg ? bg : sg;\n\t\t\t\tdb = bb > sb ? bb : sb;\n\t\t\t},\n\t\n\t\t\tdifference: function() {\n\t\t\t\tdr = br - sr;\n\t\t\t\tif (dr < 0)\n\t\t\t\t\tdr = -dr;\n\t\t\t\tdg = bg - sg;\n\t\t\t\tif (dg < 0)\n\t\t\t\t\tdg = -dg;\n\t\t\t\tdb = bb - sb;\n\t\t\t\tif (db < 0)\n\t\t\t\t\tdb = -db;\n\t\t\t},\n\t\n\t\t\texclusion: function() {\n\t\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t\t},\n\t\n\t\t\thue: function() {\n\t\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t\t},\n\t\n\t\t\tsaturation: function() {\n\t\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t\t},\n\t\n\t\t\tluminosity: function() {\n\t\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t\t},\n\t\n\t\t\tcolor: function() {\n\t\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t\t},\n\t\n\t\t\tadd: function() {\n\t\t\t\tdr = min(br + sr, 255);\n\t\t\t\tdg = min(bg + sg, 255);\n\t\t\t\tdb = min(bb + sb, 255);\n\t\t\t},\n\t\n\t\t\tsubtract: function() {\n\t\t\t\tdr = max(br - sr, 0);\n\t\t\t\tdg = max(bg - sg, 0);\n\t\t\t\tdb = max(bb - sb, 0);\n\t\t\t},\n\t\n\t\t\taverage: function() {\n\t\t\t\tdr = (br + sr) / 2;\n\t\t\t\tdg = (bg + sg) / 2;\n\t\t\t\tdb = (bb + sb) / 2;\n\t\t\t},\n\t\n\t\t\tnegation: function() {\n\t\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t\t}\n\t\t};\n\t\n\t\tvar nativeModes = this.nativeModes = Base.each([\n\t\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t\t], function(mode) {\n\t\t\tthis[mode] = true;\n\t\t}, {});\n\t\n\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\tBase.each(modes, function(func, mode) {\n\t\t\tvar darken = mode === 'darken',\n\t\t\t\tok = false;\n\t\t\tctx.save();\n\t\t\ttry {\n\t\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tctx.globalCompositeOperation = mode;\n\t\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t\tctx.restore();\n\t\t\tnativeModes[mode] = ok;\n\t\t});\n\t\tCanvasProvider.release(ctx);\n\t\n\t\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\t\tvar srcCanvas = srcContext.canvas,\n\t\t\t\tnormal = mode === 'normal';\n\t\t\tif (normal || nativeModes[mode]) {\n\t\t\t\tdstContext.save();\n\t\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tdstContext.globalAlpha = alpha;\n\t\t\t\tif (!normal)\n\t\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\t\tdstContext.restore();\n\t\t\t} else {\n\t\t\t\tvar process = modes[mode];\n\t\t\t\tif (!process)\n\t\t\t\t\treturn;\n\t\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\t\tdst = dstData.data,\n\t\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\t\tsr = src[i];\n\t\t\t\t\tbr = dst[i];\n\t\t\t\t\tsg = src[i + 1];\n\t\t\t\t\tbg = dst[i + 1];\n\t\t\t\t\tsb = src[i + 2];\n\t\t\t\t\tbb = dst[i + 2];\n\t\t\t\t\tsa = src[i + 3];\n\t\t\t\t\tba = dst[i + 3];\n\t\t\t\t\tprocess();\n\t\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t\t}\n\t\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar SVGStyles = Base.each({\n\t\tfillColor: ['fill', 'color'],\n\t\tstrokeColor: ['stroke', 'color'],\n\t\tstrokeWidth: ['stroke-width', 'number'],\n\t\tstrokeCap: ['stroke-linecap', 'string'],\n\t\tstrokeJoin: ['stroke-linejoin', 'string'],\n\t\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\t\ttrue: 'none',\n\t\t\tfalse: 'non-scaling-stroke'\n\t\t}, function(item, value) {\n\t\t\treturn !value\n\t\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t\t|| item instanceof TextItem);\n\t\t}],\n\t\tmiterLimit: ['stroke-miterlimit', 'number'],\n\t\tdashArray: ['stroke-dasharray', 'array'],\n\t\tdashOffset: ['stroke-dashoffset', 'number'],\n\t\tfontFamily: ['font-family', 'string'],\n\t\tfontWeight: ['font-weight', 'string'],\n\t\tfontSize: ['font-size', 'number'],\n\t\tjustification: ['text-anchor', 'lookup', {\n\t\t\tleft: 'start',\n\t\t\tcenter: 'middle',\n\t\t\tright: 'end'\n\t\t}],\n\t\topacity: ['opacity', 'number'],\n\t\tblendMode: ['mix-blend-mode', 'string']\n\t}, function(entry, key) {\n\t\tvar part = Base.capitalize(key),\n\t\t\tlookup = entry[2];\n\t\tthis[key] = {\n\t\t\ttype: entry[1],\n\t\t\tproperty: key,\n\t\t\tattribute: entry[0],\n\t\t\ttoSVG: lookup,\n\t\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\t\tthis[value] = name;\n\t\t\t}, {}),\n\t\t\texportFilter: entry[3],\n\t\t\tget: 'get' + part,\n\t\t\tset: 'set' + part\n\t\t};\n\t}, {});\n\t\n\tvar SVGNamespaces = {\n\t\thref: 'http://www.w3.org/1999/xlink',\n\t\txlink: 'http://www.w3.org/2000/xmlns'\n\t};\n\t\n\tnew function() {\n\t\tvar formatter;\n\t\n\t\tfunction setAttributes(node, attrs) {\n\t\t\tfor (var key in attrs) {\n\t\t\t\tvar val = attrs[key],\n\t\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\t\tif (typeof val === 'number')\n\t\t\t\t\tval = formatter.number(val);\n\t\t\t\tif (namespace) {\n\t\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t\t} else {\n\t\t\t\t\tnode.setAttribute(key, val);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\t\n\t\tfunction createElement(tag, attrs) {\n\t\t\treturn setAttributes(\n\t\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t\t}\n\t\n\t\tfunction getTransform(matrix, coordinates, center) {\n\t\t\tvar attrs = new Base(),\n\t\t\t\ttrans = matrix.getTranslation();\n\t\t\tif (coordinates) {\n\t\t\t\tmatrix = matrix.shiftless();\n\t\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\t\ttrans = null;\n\t\t\t}\n\t\t\tif (!matrix.isIdentity()) {\n\t\t\t\tvar decomposed = matrix.decompose();\n\t\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\t\tvar parts = [],\n\t\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\t\tif (angle)\n\t\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t\t} else {\n\t\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn attrs;\n\t\t}\n\t\n\t\tfunction exportGroup(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix),\n\t\t\t\tchildren = item._children;\n\t\t\tvar node = createElement('g', attrs);\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar childNode = exportSVG(child, options);\n\t\t\t\tif (childNode) {\n\t\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\t\n\t\tfunction exportRaster(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\t\tsize = item.getSize(),\n\t\t\t\timage = item.getImage();\n\t\t\tattrs.x -= size.width / 2;\n\t\t\tattrs.y -= size.height / 2;\n\t\t\tattrs.width = size.width;\n\t\t\tattrs.height = size.height;\n\t\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t\t|| item.toDataURL();\n\t\t\treturn createElement('image', attrs);\n\t\t}\n\t\n\t\tfunction exportPath(item, options) {\n\t\t\tvar matchShapes = options.matchShapes;\n\t\t\tif (matchShapes) {\n\t\t\t\tvar shape = item.toShape(false);\n\t\t\t\tif (shape)\n\t\t\t\t\treturn exportShape(shape, options);\n\t\t\t}\n\t\t\tvar segments = item._segments,\n\t\t\t\ttype,\n\t\t\t\tattrs = getTransform(item._matrix);\n\t\t\tif (segments.length === 0)\n\t\t\t\treturn null;\n\t\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\t\tif (segments.length >= 3) {\n\t\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\t\tvar parts = [];\n\t\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t\t} else {\n\t\t\t\t\ttype = 'line';\n\t\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\t\tattrs.set({\n\t\t\t\t\t\tx1: first.x,\n\t\t\t\t\t\ty1: first.y,\n\t\t\t\t\t\tx2: last.x,\n\t\t\t\t\t\ty2: last.y\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttype = 'path';\n\t\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t\t}\n\t\t\treturn createElement(type, attrs);\n\t\t}\n\t\n\t\tfunction exportShape(item) {\n\t\t\tvar type = item._type,\n\t\t\t\tradius = item._radius,\n\t\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\t\tif (type === 'rectangle') {\n\t\t\t\ttype = 'rect';\n\t\t\t\tvar size = item._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tattrs.x -= width / 2;\n\t\t\t\tattrs.y -= height / 2;\n\t\t\t\tattrs.width = width;\n\t\t\t\tattrs.height = height;\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\tradius = null;\n\t\t\t}\n\t\t\tif (radius) {\n\t\t\t\tif (type === 'circle') {\n\t\t\t\t\tattrs.r = radius;\n\t\t\t\t} else {\n\t\t\t\t\tattrs.rx = radius.width;\n\t\t\t\t\tattrs.ry = radius.height;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn createElement(type, attrs);\n\t\t}\n\t\n\t\tfunction exportCompoundPath(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix);\n\t\t\tvar data = item.getPathData(null, options.precision);\n\t\t\tif (data)\n\t\t\t\tattrs.d = data;\n\t\t\treturn createElement('path', attrs);\n\t\t}\n\t\n\t\tfunction exportPlacedSymbol(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\t\tsymbol = item.getSymbol(),\n\t\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\t\tdefinition = symbol.getDefinition(),\n\t\t\t\tbounds = definition.getBounds();\n\t\t\tif (!symbolNode) {\n\t\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t\t});\n\t\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t\t}\n\t\t\tattrs.href = '#' + symbolNode.id;\n\t\t\tattrs.x += bounds.x;\n\t\t\tattrs.y += bounds.y;\n\t\t\tattrs.width = formatter.number(bounds.width);\n\t\t\tattrs.height = formatter.number(bounds.height);\n\t\t\tattrs.overflow = 'visible';\n\t\t\treturn createElement('use', attrs);\n\t\t}\n\t\n\t\tfunction exportGradient(color) {\n\t\t\tvar gradientNode = getDefinition(color, 'color');\n\t\t\tif (!gradientNode) {\n\t\t\t\tvar gradient = color.getGradient(),\n\t\t\t\t\tradial = gradient._radial,\n\t\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\t\tattrs;\n\t\t\t\tif (radial) {\n\t\t\t\t\tattrs = {\n\t\t\t\t\t\tcx: origin.x,\n\t\t\t\t\t\tcy: origin.y,\n\t\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t\t};\n\t\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\t\tif (highlight) {\n\t\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tattrs = {\n\t\t\t\t\t\tx1: origin.x,\n\t\t\t\t\t\ty1: origin.y,\n\t\t\t\t\t\tx2: destination.x,\n\t\t\t\t\t\ty2: destination.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\t\tgradientNode = createElement(\n\t\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\t\tvar stops = gradient._stops;\n\t\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\t\tvar stop = stops[i],\n\t\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\t\tattrs = {\n\t\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t\t};\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t\t}\n\t\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t\t}\n\t\t\treturn 'url(#' + gradientNode.id + ')';\n\t\t}\n\t\n\t\tfunction exportText(item) {\n\t\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\t\tnode.textContent = item._content;\n\t\t\treturn node;\n\t\t}\n\t\n\t\tvar exporters = {\n\t\t\tGroup: exportGroup,\n\t\t\tLayer: exportGroup,\n\t\t\tRaster: exportRaster,\n\t\t\tPath: exportPath,\n\t\t\tShape: exportShape,\n\t\t\tCompoundPath: exportCompoundPath,\n\t\t\tPlacedSymbol: exportPlacedSymbol,\n\t\t\tPointText: exportText\n\t\t};\n\t\n\t\tfunction applyStyle(item, node, isRoot) {\n\t\t\tvar attrs = {},\n\t\t\t\tparent = !isRoot && item.getParent();\n\t\n\t\t\tif (item._name != null)\n\t\t\t\tattrs.id = item._name;\n\t\n\t\t\tBase.each(SVGStyles, function(entry) {\n\t\t\t\tvar get = entry.get,\n\t\t\t\t\ttype = entry.type,\n\t\t\t\t\tvalue = item[get]();\n\t\t\t\tif (entry.exportFilter\n\t\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t\t}\n\t\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t\t? 'none'\n\t\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tif (attrs.opacity === 1)\n\t\t\t\tdelete attrs.opacity;\n\t\n\t\t\tif (!item._visible)\n\t\t\t\tattrs.visibility = 'hidden';\n\t\n\t\t\treturn setAttributes(node, attrs);\n\t\t}\n\t\n\t\tvar definitions;\n\t\tfunction getDefinition(item, type) {\n\t\t\tif (!definitions)\n\t\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t\t}\n\t\n\t\tfunction setDefinition(item, node, type) {\n\t\t\tif (!definitions)\n\t\t\t\tgetDefinition();\n\t\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\t\tnode.id = type + '-' + id;\n\t\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t\t}\n\t\n\t\tfunction exportDefinitions(node, options) {\n\t\t\tvar svg = node,\n\t\t\t\tdefs = null;\n\t\t\tif (definitions) {\n\t\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\t\tif (!defs) {\n\t\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t\t}\n\t\t\t\tdefinitions = null;\n\t\t\t}\n\t\t\treturn options.asString\n\t\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t\t: svg;\n\t\t}\n\t\n\t\tfunction exportSVG(item, options, isRoot) {\n\t\t\tvar exporter = exporters[item._class],\n\t\t\t\tnode = exporter && exporter(item, options);\n\t\t\tif (node) {\n\t\t\t\tvar onExport = options.onExport;\n\t\t\t\tif (onExport)\n\t\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\t\tvar data = JSON.stringify(item._data);\n\t\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t\t}\n\t\t\treturn node && applyStyle(item, node, isRoot);\n\t\t}\n\t\n\t\tfunction setOptions(options) {\n\t\t\tif (!options)\n\t\t\t\toptions = {};\n\t\t\tformatter = new Formatter(options.precision);\n\t\t\treturn options;\n\t\t}\n\t\n\t\tItem.inject({\n\t\t\texportSVG: function(options) {\n\t\t\t\toptions = setOptions(options);\n\t\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t\t}\n\t\t});\n\t\n\t\tProject.inject({\n\t\t\texportSVG: function(options) {\n\t\t\t\toptions = setOptions(options);\n\t\t\t\tvar layers = this.layers,\n\t\t\t\t\tview = this.getView(),\n\t\t\t\t\tsize = view.getViewSize(),\n\t\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\twidth: size.width,\n\t\t\t\t\t\theight: size.height,\n\t\t\t\t\t\tversion: '1.1',\n\t\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t\t}),\n\t\t\t\t\tparent = node,\n\t\t\t\t\tmatrix = view._matrix;\n\t\t\t\tif (!matrix.isIdentity())\n\t\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\t\treturn exportDefinitions(node, options);\n\t\t\t}\n\t\t});\n\t};\n\t\n\tnew function() {\n\t\n\t\tfunction getValue(node, name, isString, allowNull) {\n\t\t\tvar namespace = SVGNamespaces[name],\n\t\t\t\tvalue = namespace\n\t\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t\t: node.getAttribute(name);\n\t\t\tif (value === 'null')\n\t\t\t\tvalue = null;\n\t\t\treturn value == null\n\t\t\t\t\t? allowNull\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: isString\n\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? value\n\t\t\t\t\t\t: parseFloat(value);\n\t\t}\n\t\n\t\tfunction getPoint(node, x, y, allowNull) {\n\t\t\tx = getValue(node, x, false, allowNull);\n\t\t\ty = getValue(node, y, false, allowNull);\n\t\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t\t: new Point(x, y);\n\t\t}\n\t\n\t\tfunction getSize(node, w, h, allowNull) {\n\t\t\tw = getValue(node, w, false, allowNull);\n\t\t\th = getValue(node, h, false, allowNull);\n\t\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t\t: new Size(w, h);\n\t\t}\n\t\n\t\tfunction convertValue(value, type, lookup) {\n\t\t\treturn value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t}\n\t\n\t\tfunction importGroup(node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tisClip = type === 'clippath',\n\t\t\t\titem = new Group(),\n\t\t\t\tproject = item._project,\n\t\t\t\tcurrentStyle = project._currentStyle,\n\t\t\t\tchildren = [];\n\t\t\tif (!isClip) {\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\t\tproject._currentStyle = item._style.clone();\n\t\t\t}\n\t\t\tif (isRoot) {\n\t\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar childNode = nodes[i],\n\t\t\t\t\tchild;\n\t\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\titem.addChildren(children);\n\t\t\tif (isClip)\n\t\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\t\tproject._currentStyle = currentStyle;\n\t\t\tif (isClip || type === 'defs') {\n\t\t\t\titem.remove();\n\t\t\t\titem = null;\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\t\n\t\tfunction importPoly(node, type) {\n\t\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\t\tpoints = [];\n\t\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\t\tpoints.push(new Point(\n\t\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\t\tvar path = new Path(points);\n\t\t\tif (type === 'polygon')\n\t\t\t\tpath.closePath();\n\t\t\treturn path;\n\t\t}\n\t\n\t\tfunction importPath(node) {\n\t\t\tvar data = node.getAttribute('d'),\n\t\t\t\tparam = { pathData: data };\n\t\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t\t? new CompoundPath(param)\n\t\t\t\t\t: new Path(param);\n\t\t}\n\t\n\t\tfunction importGradient(node, type) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tisRadial = type === 'radialgradient',\n\t\t\t\tgradient;\n\t\t\tif (id) {\n\t\t\t\tgradient = definitions[id].getGradient();\n\t\t\t} else {\n\t\t\t\tvar nodes = node.childNodes,\n\t\t\t\t\tstops = [];\n\t\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\t\tvar child = nodes[i];\n\t\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t\t}\n\t\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t\t}\n\t\t\tvar origin, destination, highlight;\n\t\t\tif (isRadial) {\n\t\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t\t} else {\n\t\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t\t}\n\t\t\tapplyAttributes(\n\t\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar importers = {\n\t\t\t'#document': function (node, type, options, isRoot) {\n\t\t\t\tvar nodes = node.childNodes;\n\t\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\t\tvar child = nodes[i];\n\t\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tg: importGroup,\n\t\t\tsvg: importGroup,\n\t\t\tclippath: importGroup,\n\t\t\tpolygon: importPoly,\n\t\t\tpolyline: importPoly,\n\t\t\tpath: importPath,\n\t\t\tlineargradient: importGradient,\n\t\t\tradialgradient: importGradient,\n\t\n\t\t\timage: function (node) {\n\t\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\t\traster.on('load', function() {\n\t\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\t\tthis.setSize(size);\n\t\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\t\tthis.translate(center);\n\t\t\t\t});\n\t\t\t\treturn raster;\n\t\t\t},\n\t\n\t\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t\t},\n\t\n\t\t\tdefs: importGroup,\n\t\n\t\t\tuse: function(node) {\n\t\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\t\tdefinition = definitions[id],\n\t\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\t\treturn definition\n\t\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t\t: null;\n\t\t\t},\n\t\n\t\t\tcircle: function(node) {\n\t\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\t\tgetValue(node, 'r'));\n\t\t\t},\n\t\n\t\t\tellipse: function(node) {\n\t\t\t\treturn new Shape.Ellipse({\n\t\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\trect: function(node) {\n\t\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t\t},\n\t\n\t\t\tline: function(node) {\n\t\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t\t},\n\t\n\t\t\ttext: function(node) {\n\t\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\t\treturn text;\n\t\t\t}\n\t\t};\n\t\n\t\tfunction applyTransform(item, value, name, node) {\n\t\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\t\tmatrix = new Matrix();\n\t\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\t\tvar transform = transforms[i];\n\t\t\t\tif (!transform)\n\t\t\t\t\tbreak;\n\t\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\t\tcommand = parts[0],\n\t\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\t\tswitch (command) {\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'translate':\n\t\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scale':\n\t\t\t\t\tmatrix.scale(v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewX':\n\t\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewY':\n\t\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.transform(matrix);\n\t\t}\n\t\n\t\tfunction applyOpacity(item, value, name) {\n\t\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t\t: 'getStrokeColor']();\n\t\t\tif (color)\n\t\t\t\tcolor.setAlpha(parseFloat(value));\n\t\t}\n\t\n\t\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\t\tthis[entry.attribute] = function(item, value) {\n\t\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\t\tvar color = item[entry.get]();\n\t\t\t\t\tif (color)\n\t\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t\t}\n\t\t\t};\n\t\t}, {}), {\n\t\t\tid: function(item, value) {\n\t\t\t\tdefinitions[value] = item;\n\t\t\t\tif (item.setName)\n\t\t\t\t\titem.setName(value);\n\t\t\t},\n\t\n\t\t\t'clip-path': function(item, value) {\n\t\t\t\tvar clip = getDefinition(value);\n\t\t\t\tif (clip) {\n\t\t\t\t\tclip = clip.clone();\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tgradientTransform: applyTransform,\n\t\t\ttransform: applyTransform,\n\t\n\t\t\t'fill-opacity': applyOpacity,\n\t\t\t'stroke-opacity': applyOpacity,\n\t\n\t\t\tvisibility: function(item, value) {\n\t\t\t\titem.setVisible(value === 'visible');\n\t\t\t},\n\t\n\t\t\tdisplay: function(item, value) {\n\t\t\t\titem.setVisible(value !== null);\n\t\t\t},\n\t\n\t\t\t'stop-color': function(item, value) {\n\t\t\t\tif (item.setColor)\n\t\t\t\t\titem.setColor(value);\n\t\t\t},\n\t\n\t\t\t'stop-opacity': function(item, value) {\n\t\t\t\tif (item._color)\n\t\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t\t},\n\t\n\t\t\toffset: function(item, value) {\n\t\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t\t: parseFloat(value));\n\t\t\t},\n\t\n\t\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\t\titem.transform(matrix.inverted());\n\t\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\t\tif (size)\n\t\t\t\t\t\trect.setSize(size);\n\t\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\t\tgroup = item._definition;\n\t\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tfunction getAttribute(node, name, styles) {\n\t\t\tvar attr = node.attributes[name],\n\t\t\t\tvalue = attr && attr.value;\n\t\t\tif (!value) {\n\t\t\t\tvar style = Base.camelize(name);\n\t\t\t\tvalue = node.style[style];\n\t\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\t\tvalue = styles.node[style];\n\t\t\t}\n\t\t\treturn !value\n\t\t\t\t\t? undefined\n\t\t\t\t\t: value === 'none'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: value;\n\t\t}\n\t\n\t\tfunction applyAttributes(item, node, isRoot) {\n\t\t\tvar styles = {\n\t\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t\t};\n\t\t\tBase.each(attributes, function(apply, name) {\n\t\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\t\tif (value !== undefined)\n\t\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t\t});\n\t\t\treturn item;\n\t\t}\n\t\n\t\tvar definitions = {};\n\t\tfunction getDefinition(value) {\n\t\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\t\treturn match && definitions[match[1]];\n\t\t}\n\t\n\t\tfunction importSVG(source, options, isRoot) {\n\t\t\tif (!source)\n\t\t\t\treturn null;\n\t\t\tif (!options) {\n\t\t\t\toptions = {};\n\t\t\t} else if (typeof options === 'function') {\n\t\t\t\toptions = { onLoad: options };\n\t\t\t}\n\t\n\t\t\tvar node = source,\n\t\t\t\tscope = paper;\n\t\n\t\t\tfunction onLoadCallback(svg) {\n\t\t\t\tpaper = scope;\n\t\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\t\tonLoad = options.onLoad,\n\t\t\t\t\tview = scope.project && scope.getView();\n\t\t\t\tif (onLoad)\n\t\t\t\t\tonLoad.call(this, item);\n\t\t\t\tview.update();\n\t\t\t}\n\t\n\t\t\tif (isRoot) {\n\t\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\t\tnode = document.getElementById(source);\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tsource = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\treader.onload = function() {\n\t\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t\t};\n\t\t\t\t\treturn reader.readAsText(source);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (typeof source === 'string')\n\t\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\t\tif (!node.nodeName)\n\t\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\t\timporter = importers[type],\n\t\t\t\titem,\n\t\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\t\tsettings = scope.settings,\n\t\t\t\tapplyMatrix = settings.applyMatrix;\n\t\t\tsettings.applyMatrix = false;\n\t\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\t\tsettings.applyMatrix = applyMatrix;\n\t\t\tif (item) {\n\t\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\t\tvar onImport = options.onImport;\n\t\t\t\tif (onImport)\n\t\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\t\titem.remove();\n\t\t\t\t\titem = item.toPath();\n\t\t\t\t}\n\t\t\t\tif (data)\n\t\t\t\t\titem._data = JSON.parse(data);\n\t\t\t}\n\t\t\tif (isRoot) {\n\t\t\t\tdefinitions = {};\n\t\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\t\titem.matrix.apply(true, true);\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\t\n\t\tItem.inject({\n\t\t\timportSVG: function(node, options) {\n\t\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t\t}\n\t\t});\n\t\n\t\tProject.inject({\n\t\t\timportSVG: function(node, options) {\n\t\t\t\tthis.activate();\n\t\t\t\treturn importSVG(node, options, true);\n\t\t\t}\n\t\t});\n\t};\n\t\n\tBase.exports.PaperScript = (function() {\n\t\tvar exports, define,\n\t\t\tscope = this;\n\t!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\t\n\t\tvar binaryOperators = {\n\t\t\t'+': '__add',\n\t\t\t'-': '__subtract',\n\t\t\t'*': '__multiply',\n\t\t\t'/': '__divide',\n\t\t\t'%': '__modulo',\n\t\t\t'==': 'equals',\n\t\t\t'!=': 'equals'\n\t\t};\n\t\n\t\tvar unaryOperators = {\n\t\t\t'-': '__negate',\n\t\t\t'+': null\n\t\t};\n\t\n\t\tvar fields = Base.each(\n\t\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\t\tfunction(name) {\n\t\t\t\tthis['__' + name] = '#' + name;\n\t\t\t},\n\t\t\t{}\n\t\t);\n\t\tPoint.inject(fields);\n\t\tSize.inject(fields);\n\t\tColor.inject(fields);\n\t\n\t\tfunction __$__(left, operator, right) {\n\t\t\tvar handler = binaryOperators[operator];\n\t\t\tif (left && left[handler]) {\n\t\t\t\tvar res = left[handler](right);\n\t\t\t\treturn operator === '!=' ? !res : res;\n\t\t\t}\n\t\t\tswitch (operator) {\n\t\t\tcase '+': return left + right;\n\t\t\tcase '-': return left - right;\n\t\t\tcase '*': return left * right;\n\t\t\tcase '/': return left / right;\n\t\t\tcase '%': return left % right;\n\t\t\tcase '==': return left == right;\n\t\t\tcase '!=': return left != right;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction $__(operator, value) {\n\t\t\tvar handler = unaryOperators[operator];\n\t\t\tif (handler && value && value[handler])\n\t\t\t\treturn value[handler]();\n\t\t\tswitch (operator) {\n\t\t\tcase '+': return +value;\n\t\t\tcase '-': return -value;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction parse(code, options) {\n\t\t\treturn scope.acorn.parse(code, options);\n\t\t}\n\t\n\t\tfunction compile(code, url, options) {\n\t\t\tif (!code)\n\t\t\t\treturn '';\n\t\t\toptions = options || {};\n\t\t\turl = url || '';\n\t\n\t\t\tvar insertions = [];\n\t\n\t\t\tfunction getOffset(offset) {\n\t\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\t\tvar insertion = insertions[i];\n\t\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\toffset += insertion[1];\n\t\t\t\t}\n\t\t\t\treturn offset;\n\t\t\t}\n\t\n\t\t\tfunction getCode(node) {\n\t\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\t\tgetOffset(node.range[1]));\n\t\t\t}\n\t\n\t\t\tfunction getBetween(left, right) {\n\t\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\t\tgetOffset(right.range[0]));\n\t\t\t}\n\t\n\t\t\tfunction replaceCode(node, str) {\n\t\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\t\tinsert = 0;\n\t\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t\t}\n\t\n\t\t\tfunction walkAST(node, parent) {\n\t\t\t\tif (!node)\n\t\t\t\t\treturn;\n\t\t\t\tfor (var key in node) {\n\t\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tvar value = node[key];\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\t\twalkAST(value, node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tswitch (node.type) {\n\t\t\t\tcase 'UnaryExpression':\n\t\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BinaryExpression':\n\t\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UpdateExpression':\n\t\t\t\tcase 'AssignmentExpression':\n\t\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\t\tif (!(\n\t\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t\t)) {\n\t\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar sourceMap = null,\n\t\t\t\tbrowser = paper.browser,\n\t\t\t\tversion = browser.versionNumber,\n\t\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\t\tif (browser.chrome && version >= 30\n\t\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\t\tvar offset = 0;\n\t\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t\t}\n\t\t\t\tvar mappings = ['AAAA'];\n\t\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\t\tsourceMap = {\n\t\t\t\t\tversion: 3,\n\t\t\t\t\tfile: url,\n\t\t\t\t\tnames:[],\n\t\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\t\tsourceRoot: '',\n\t\t\t\t\tsources: [url]\n\t\t\t\t};\n\t\t\t\tvar source = options.source || !url && code;\n\t\t\t\tif (source)\n\t\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t\t}\n\t\t\twalkAST(parse(code, { ranges: true }));\n\t\t\tif (sourceMap) {\n\t\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t\t}\n\t\t\treturn code;\n\t\t}\n\t\n\t\tfunction execute(code, scope, url, options) {\n\t\t\tpaper = scope;\n\t\t\tvar view = scope.getView(),\n\t\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t\t? new Tool()\n\t\t\t\t\t\t: null,\n\t\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\t\tparams = [],\n\t\t\t\targs = [],\n\t\t\t\tfunc;\n\t\t\tcode = compile(code, url, options);\n\t\t\tfunction expose(scope, hidden) {\n\t\t\t\tfor (var key in scope) {\n\t\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\t\tparams.push(key);\n\t\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\t\ttrue);\n\t\t\texpose(scope);\n\t\t\thandlers = Base.each(handlers, function(key) {\n\t\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t\t}\n\t\t\t}, []).join(', ');\n\t\t\tif (handlers)\n\t\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\t\tvar browser = paper.browser;\n\t\t\tif (browser.chrome || browser.firefox) {\n\t\t\t\tvar script = document.createElement('script'),\n\t\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\t\tif (browser.firefox)\n\t\t\t\t\tcode = '\\n' + code;\n\t\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t\t));\n\t\t\t\thead.appendChild(script);\n\t\t\t\tfunc = paper._execute;\n\t\t\t\tdelete paper._execute;\n\t\t\t\thead.removeChild(script);\n\t\t\t} else {\n\t\t\t\tfunc = Function(params, code);\n\t\t\t}\n\t\t\tvar res = func.apply(scope, args) || {};\n\t\t\tBase.each(toolHandlers, function(key) {\n\t\t\t\tvar value = res[key];\n\t\t\t\tif (value)\n\t\t\t\t\ttool[key] = value;\n\t\t\t});\n\t\t\tif (view) {\n\t\t\t\tif (res.onResize)\n\t\t\t\t\tview.setOnResize(res.onResize);\n\t\t\t\tview.emit('resize', {\n\t\t\t\t\tsize: view.size,\n\t\t\t\t\tdelta: new Point()\n\t\t\t\t});\n\t\t\t\tif (res.onFrame)\n\t\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\t\n\t\tfunction loadScript(script) {\n\t\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\t\tif (!canvas)\n\t\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\t\tif (src) {\n\t\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t\t}, async);\n\t\t\t\t} else {\n\t\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t\t}\n\t\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\t\treturn scope;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction loadAll() {\n\t\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t\t}\n\t\n\t\tfunction load(script) {\n\t\t\treturn script ? loadScript(script) : loadAll();\n\t\t}\n\t\n\t\tif (document.readyState === 'complete') {\n\t\t\tsetTimeout(loadAll);\n\t\t} else {\n\t\t\tDomEvent.add(window, { load: loadAll });\n\t\t}\n\t\n\t\treturn {\n\t\t\tcompile: compile,\n\t\t\texecute: execute,\n\t\t\tload: load,\n\t\t\tparse: parse\n\t\t};\n\t\n\t}).call(this);\n\t\n\tpaper = new (PaperScope.inject(Base.exports, {\n\t\tenumerable: true,\n\t\tBase: Base,\n\t\tNumerical: Numerical,\n\t\tKey: Key\n\t}))();\n\t\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (paper), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module === 'object' && module) {\n\t\tmodule.exports = paper;\n\t}\n\t\n\treturn paper;\n\t};\n\n\n/***/ },\n\n/***/ 223:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Apply mutation shims\n\t */\n\t\n\tfunction _toNode(node) {\n\t  return typeof node === 'string' ? document.createTextNode(node) : node;\n\t}\n\t\n\tfunction _ref() {\n\t  var parentNode = this.parentNode;\n\t  if (parentNode) {\n\t    parentNode.removeChild(this);\n\t  }\n\t}\n\t\n\t(function () {\n\t  'use strict';\n\t\n\t  var ElementPrototype = Element.prototype;\n\t\n\t  /**\n\t   * Detect full support\n\t   */\n\t\n\t  var isSupported = ElementPrototype.after && ElementPrototype.append && ElementPrototype.before && ElementPrototype.prepend && ElementPrototype.remove && ElementPrototype.replace;\n\t\n\t  if (isSupported) {\n\t    return;\n\t  }function mutationMacro(nodes) {\n\t    var fragment, i, len;\n\t    if (nodes) {\n\t      len = nodes.length;\n\t    }\n\t\n\t    if (!len) {\n\t      throw new Error('No node was specified (DOM Exception 8)');\n\t    }\n\t\n\t    if (len === 1) {\n\t      return _toNode(nodes[0]);\n\t    } else {\n\t      fragment = document.createDocumentFragment();\n\t      for (i = 0; i < len; i++) {\n\t        fragment.appendChild(_toNode(nodes[i]));\n\t      }\n\t      return fragment;\n\t    }\n\t  }\n\t\n\t  ElementPrototype.prepend = function prepend() {\n\t    this.insertBefore(mutationMacro(arguments), this.firstChild);\n\t  };\n\t\n\t  ElementPrototype.append = function append() {\n\t    this.appendChild(mutationMacro(arguments));\n\t  };\n\t\n\t  ElementPrototype.before = function before() {\n\t    var parentNode = this.parentNode;\n\t    if (parentNode) {\n\t      parentNode.insertBefore(mutationMacro(arguments), this);\n\t    }\n\t  };\n\t\n\t  ElementPrototype.after = function after() {\n\t    var parentNode = this.parentNode;\n\t    if (parentNode) {\n\t      parentNode.insertBefore(mutationMacro(arguments), this.nextSibling);\n\t    }\n\t  };\n\t\n\t  ElementPrototype.replace = function replace() {\n\t    var parentNode = this.parentNode;\n\t    if (parentNode) {\n\t      parentNode.replaceChild(mutationMacro(arguments), this);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * This method is defined with bracket notation to avoid conflicting with the\n\t   * definition of HTMLSelectElement.\n\t   */\n\t  ElementPrototype['remove'] = _ref;\n\t})();\n\n/***/ },\n\n/***/ 224:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _classCallCheck2 = __webpack_require__(56);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _createClass2 = __webpack_require__(57);\n\t\n\tvar _createClass3 = _interopRequireDefault(_createClass2);\n\t\n\tvar _paper = __webpack_require__(165);\n\t\n\tvar _paper2 = _interopRequireDefault(_paper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar vol_ctrl_width = 60;\n\t\n\tfunction _ref(value) {\n\t\tvar _this = this;\n\t\n\t\tthis.root.visible = true;\n\t\tclearTimeout(this.timout);\n\t\n\t\tvar vol = value * 100 | 0;\n\t\tvar bounds = new _paper2.default.Rectangle(this.size.x + this.path.mw, this.size.y + this.path.mh, this.size.w - this.path.mw * 2, (this.size.h - 20 - this.path.mh * 2) * (1 - value) | 0);\n\t\n\t\tif (bounds.height < 1) {\n\t\t\tbounds.height = 1;\n\t\t}\n\t\n\t\tthis.path_white.setBounds(bounds);\n\t\tthis.text.content = vol + \"%\";\n\t\t_paper2.default.view.draw();\n\t\n\t\tthis.timout = setTimeout(function () {\n\t\t\t_this.root.visible = false;\n\t\t\t_paper2.default.view.draw();\n\t\t}, 500);\n\t}\n\t\n\tvar VolumeCtrl = function () {\n\t\tfunction VolumeCtrl(volume) {\n\t\t\t(0, _classCallCheck3.default)(this, VolumeCtrl);\n\t\n\t\t\tthis.size = {\n\t\t\t\tx: 20,\n\t\t\t\ty: 20,\n\t\t\t\tw: vol_ctrl_width,\n\t\t\t\th: 3 * vol_ctrl_width\n\t\t\t};\n\t\t\tvar size = this.size;\n\t\n\t\t\tthis.path = {\n\t\t\t\tmw: 23, // margin width,x\n\t\t\t\tmh: 15 // margin height,y\n\t\t\t};\n\t\t\tvar path = this.path;\n\t\n\t\t\tthis.root = new _paper2.default.Group();\n\t\n\t\t\tvar rect_out_box = new _paper2.default.Rectangle(size.x, size.y, size.w, size.h);\n\t\t\tvar box = new _paper2.default.Shape.Rectangle(rect_out_box);\n\t\t\tbox.fillColor = \"black\";\n\t\n\t\t\tthis.root.addChild(box);\n\t\n\t\t\tvar rect_blue_path = new _paper2.default.Rectangle(size.x + path.mw, size.y + path.mh, size.w - path.mw * 2, size.h - 20 - path.mh * 2);\n\t\t\tthis.path_blue = new _paper2.default.Shape.Rectangle(rect_blue_path);\n\t\t\tthis.path_blue.fillColor = \"#000080\";\n\t\n\t\t\tthis.root.addChild(this.path_blue);\n\t\n\t\t\tvar vol = volume * 100 | 0;\n\t\n\t\t\tvar rect_white_path = new _paper2.default.Rectangle(size.x + path.mw, size.y + path.mh, size.w - path.mw * 2, (size.h - 20 - path.mh * 2) * (1 - volume) | 0);\n\t\t\tthis.path_white = new _paper2.default.Shape.Rectangle(rect_white_path);\n\t\t\tthis.path_white.fillColor = \"white\";\n\t\n\t\t\tthis.root.addChild(this.path_white);\n\t\n\t\t\tthis.text = new _paper2.default.PointText({\n\t\t\t\tpoint: new _paper2.default.Point(size.x + size.w / 2, size.w + (size.h - 25 - path.mh * 2)),\n\t\t\t\tcontent: vol + \"%\",\n\t\t\t\tfillColor: \"white\",\n\t\t\t\tfontFamily: \"Verdana\",\n\t\t\t\tfontWeight: \"bold\",\n\t\t\t\tfontSize: 13,\n\t\t\t\tjustification: \"center\"\n\t\t\t});\n\t\n\t\t\tthis.root.addChild(this.text);\n\t\n\t\t\tthis.root.visible = false;\n\t\n\t\t\twindow.vcg = this.root;\n\t\n\t\t\tvar black_line = new _paper2.default.Shape.Rectangle(new _paper2.default.Rectangle(size.x + path.mw, size.y + path.mh, size.w - path.mw * 2, 1));\n\t\t\tblack_line.fillColor = \"black\";\n\t\n\t\t\tthis.root.addChild(black_line);\n\t\n\t\t\t_paper2.default.view.draw();\n\t\t}\n\t\n\t\t(0, _createClass3.default)(VolumeCtrl, [{\n\t\t\tkey: \"update\",\n\t\t\tvalue: _ref\n\t\t}]);\n\t\treturn VolumeCtrl;\n\t}();\n\n\texports.default = VolumeCtrl;\n\n/***/ },\n\n/***/ 225:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _classCallCheck2 = __webpack_require__(56);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _createClass2 = __webpack_require__(57);\n\t\n\tvar _createClass3 = _interopRequireDefault(_createClass2);\n\t\n\tvar _ramda = __webpack_require__(47);\n\t\n\tvar _ramda2 = _interopRequireDefault(_ramda);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar participants = [\"Graphene\", \"Carbon\"];\n\t\n\tvar dialogue = [{\n\t\tname: \"intro_dialog\",\n\t\tarray: [{ //loc: 0\n\t\t\t//say: \"Loerm ipsum\"\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Кой си ти?\",\n\t\t\tloc: 1\n\t\t}, { //loc: 1\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Аз съм материал създаден от един ред въглеродни атоми и имам уникални свойства!\",\n\t\t\tloc: 2\n\t\t}, { //loc: 2\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Хаха, за много по-полезен ли се мислиш?\",\n\t\t\tloc: 3\n\t\t}, { //loc: 3\n\t\t\twho: \"Графен\",\n\t\t\tanswer: [{ say: \"Покажи свойствата си.\", loc: 4 }, { say: \"Опитай да решиш всичко с думи.\", loc: 6 /* scene: \"use_words\" */ }, { say: \"Игнорирай го.\", loc: 9 }]\n\t\t}, { //loc: 4\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Да.\",\n\t\t\tloc: 5\n\t\t}, { //loc: 5\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Не мисля, че е възможно да имаш по-добри характеристики от моите.\",\n\t\t\tloc: 13\n\t\t}, { //loc: 6\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Няма смисъл да спорим.\",\n\t\t\tloc: 7\n\t\n\t\t}, { //loc: 7\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Да прав си!\",\n\t\t\tloc: 8\n\t\t}, { //loc: 8\n\t\t\twho: \"Графен\",\n\t\t\tanswer: [{ say: \"Остави го да говори.\", loc: 16 }, { say: \"Все пак му покажи възможностите си.\", loc: 18 }]\n\t\t}, { //loc: 9\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Защо ме игнорираш, да не ме имаш за много по-слаб?\",\n\t\t\tloc: 10\n\t\t}, { //loc: 10\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Сигурно те е страх, че не можеш да покажеш нищо кой знае какво!?\",\n\t\t\tloc: 11\n\t\t}, { //loc: 11\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Не искам да навлизам в излишни конфликти.\",\n\t\t\tloc: 12\n\t\t}, { //loc: 12\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Така ли? Покажи ми какво можеш тогава.\",\n\t\t\tloc: 13 //\"conductivity\"\n\t\t}, { //loc: 13\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"С моята невероятната здравина от 1100 GPa, ще спра метеорита летящ към земята.\", //\"Сега не е времето за това!! Виж метеорит е на път да се разбие в земята, трябва да го спрем!!!\",\n\t\t\tloc: 14\n\t\t}, { //loc: 14\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Не ми трябваш, аз мога да се справя сам.\",\n\t\t\tscene: \"mech_force\"\n\t\t}, { //loc: 15\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"...\",\n\t\t\tscene: \"mech_force\"\n\t\t}, { //loc: 16\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Почуствах се застрашен. Не искам да повярвам, че има по-полезна вариация на въглерода от мен.\",\n\t\t\tloc: 17\n\t\t}, { //loc: 17\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Аз съм здрав, лек и всичко което някой би искал.\",\n\t\t\tloc: 18\n\t\t}, { //loc: 18\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Ами да, но е факт, че аз съм по-електропроводим, здрав и с по-голяма енергийна плътност\",\n\t\t\tloc: 19\n\t\t}, { //loc: 19\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Разбира се!\",\n\t\t\tloc: 20\n\t\t}, { //loc: 20\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Например благодарение на моята електропроводимост от\\n 1738 siemens/m мога да заредя телефон за секунди!\",\n\t\t\tscene: \"conductivity_good\"\n\t\t}, { //loc: 21\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"С моята невероятната здравина от 1100 GPa ще спра метеорита летящ към земята!\",\n\t\t\tloc: 13\n\t\t}]\n\t}, {\n\t\tname: \"asteroid_dialog\",\n\t\tarray: [{ //loc: 0\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Просто изкара късмет, че нямах време да направя стената по-голяма.\",\n\t\t\tloc: 1\n\t\t}, {\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Дали? Или просто аз съм по-здравия?\",\n\t\t\tloc: 2\n\t\t}, { //loc: 2\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Да видим другите ти свойства тогава.\",\n\t\t\tloc: 3\n\t\t}, { //loc: 3\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Както пожелаеш.\",\n\t\t\tscene: \"compete_hard\"\n\t\t}]\n\t}, {\n\t\tname: \"compete_hard_dialog\",\n\t\tarray: [{ //loc: 0\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Чакам. \",\n\t\t\tloc: 1\n\t\t}, { //loc: 1\n\t\t\twho: \"Графен\",\n\t\t\tanswer: [{ say: \"Покажи - електропроводимост\\n от 1738 siemens/m.\", loc: 2 }, { say: \"Покажи - енергийна плътност\\n от 75 F/g и 31·9 Wh/kg.\", loc: 3 }]\n\t\t}, { //loc: 2\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"Ето виж!\",\n\t\t\tscene: \"conductivity\"\n\t\t}, { //loc: 3\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"A знаеше ли, че бaтерия и акумулатор, направена с моята помощ,\\n издържа в пъти повече от нормална батерия?\",\n\t\t\tscene: \"electrical_density\"\n\t\t}]\n\t}, {\n\t\tname: \"good_dialog\",\n\t\tarray: [{ //loc: 0\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"A също така, бaтерия и акумулатор, направена с моята помощ,\\n издържа в пъти повече от нормална батерия.\",\n\t\t\tscene: \"electrical_density_good\"\n\t\t}]\n\t}, {\n\t\tname: \"ed_c_dialog\",\n\t\tarray: [{ //loc: 0\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"А виж какво мога, благодарение на моята електропроводимост от 1738 siemens/m.\",\n\t\t\tscene: \"conductivity_2\"\n\t\t}]\n\t}, {\n\t\tname: \"c_c_dialog\",\n\t\tarray: [{ //loc: 0\n\t\t\twho: \"Графен\",\n\t\t\tsay: \"А виж какво мога, благодарение на моята енергийна плътност от 75 F/g и 31·9 Wh/kg.\\n Заради нея, могат да се направят много по издържливи батерии и акумулатори.\",\n\t\t\tscene: \"electrical_density_2\"\n\t\t}]\n\t}, {\n\t\tname: \"ending_dialog_1\",\n\t\tarray: [{\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Добре признавам, че си по-полезен в повечето ситуации!\",\n\t\t\tscene: \"end_true\"\n\t\t}]\n\t}, {\n\t\tname: \"ending_dialog_2\",\n\t\tarray: [{\n\t\t\twho: \"Карбон\",\n\t\t\tsay: \"Разбирам и признавам, че си по-полезен!\",\n\t\t\tscene: \"end_true\"\n\t\t}]\n\t}];\n\t\n\twindow.d = dialogue;\n\t\n\tfunction _ref(name) {\n\t\tthis.currentDialogue = _ramda2.default.find(_ramda2.default.propEq(\"name\", name))(this.dialogue);\n\t\tthis.currentPhrase = this.currentDialogue.array[0];\n\t}\n\t\n\tfunction _ref2(loc) {\n\t\treturn this.currentDialogue.array[loc];\n\t}\n\t\n\tfunction _ref8(o) {\n\t\treturn o.say;\n\t}\n\t\n\tfunction _ref3() {\n\t\treturn this.currentPhrase.answer.map(_ref8);\n\t}\n\t\n\tfunction _ref4() {\n\t\tif (this.currentPhrase) {\n\t\t\treturn this.currentPhrase.answer != null;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction _ref5() {\n\t\treturn this.currentPhrase;\n\t}\n\t\n\tfunction _ref6() {\n\t\treturn this.loc < this.currentDialogue.array.length() - 1;\n\t}\n\t\n\tfunction _ref7(choice) {\n\t\tif (this.currentPhrase.answer) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tif (choice <= this.currentPhrase.answer.length) {\n\t\t\t\t\tif (this.currentPhrase.answer[choice].scene) {\n\t\t\t\t\t\treturn this.currentPhrase.answer[choice].scene;\n\t\t\t\t\t}\n\t\t\t\t\tthis.loc = this.currentPhrase.answer[choice].loc;\n\t\t\t\t\tthis.currentPhrase = this.phrase(this.currentPhrase.answer[choice].loc);\n\t\t\t\t} else {\n\t\t\t\t\tthrow \"This answer does not exists\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow \"This transition to the next phrase requires an argument\";\n\t\t\t}\n\t\t} else if (this.currentPhrase.loc) {\n\t\t\tthis.loc = this.currentPhrase.loc;\n\t\t\tthis.currentPhrase = this.phrase(this.currentPhrase.loc);\n\t\t} else if (this.currentPhrase.scene) {\n\t\t\treturn this.currentPhrase.scene;\n\t\t}\n\t\n\t\tconsole.log(this.loc);\n\t}\n\t\n\tvar Dialogue = function () {\n\t\tfunction Dialogue() {\n\t\t\t(0, _classCallCheck3.default)(this, Dialogue);\n\t\n\t\t\tthis.dialogue = dialogue;\n\t\t}\n\t\n\t\t(0, _createClass3.default)(Dialogue, [{\n\t\t\tkey: \"select\",\n\t\t\tvalue: _ref\n\t\t}, {\n\t\t\tkey: \"phrase\",\n\t\t\tvalue: _ref2\n\t\t}, {\n\t\t\tkey: \"choices\",\n\t\t\tvalue: _ref3\n\t\t}, {\n\t\t\tkey: \"hasChoices\",\n\t\t\tvalue: _ref4\n\t\t}, {\n\t\t\tkey: \"say\",\n\t\t\tvalue: _ref5\n\t\t}, {\n\t\t\tkey: \"hasNext\",\n\t\t\tvalue: _ref6\n\t\t}, {\n\t\t\tkey: \"next\",\n\t\t\tvalue: _ref7\n\t\t}]);\n\t\treturn Dialogue;\n\t}();\n\n\texports.default = Dialogue;\n\n/***/ },\n\n/***/ 226:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _classCallCheck2 = __webpack_require__(56);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _createClass2 = __webpack_require__(57);\n\t\n\tvar _createClass3 = _interopRequireDefault(_createClass2);\n\t\n\tvar _ramda = __webpack_require__(47);\n\t\n\tvar _ramda2 = _interopRequireDefault(_ramda);\n\t\n\tvar _dialogue = __webpack_require__(225);\n\t\n\tvar _dialogue2 = _interopRequireDefault(_dialogue);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar story = [{\n\t\t\"scene\": \"intro\",\n\t\t\"src\": \"vid/Intro.mp4\",\n\t\t\"next\": \"conflict\"\n\t}, {\n\t\t\"scene\": \"conflict\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"intro_dialog\"\n\t}, {\n\t\t\"scene\": \"mech_force\",\n\t\t\"src\": \"vid/Meteor.mp4\",\n\t\t\"next\": \"mech_force_dialog\"\n\t}, {\n\t\t\"scene\": \"mech_force_dialog\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"asteroid_dialog\"\n\t}, {\n\t\t\"scene\": \"compete_kind\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"compete_kind_dialog\"\n\t}, {\n\t\t\"scene\": \"compete_hard\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"compete_hard_dialog\"\n\t}, {\n\t\t\"scene\": \"electrical_density\",\n\t\t\"src\": \"vid/Cars.mp4\",\n\t\t\"next\": \"ed_dialog\"\n\t\n\t}, {\n\t\t\"scene\": \"conductivity\",\n\t\t\"src\": \"vid/Phone.mp4\",\n\t\t\"next\": \"c_dialog\"\n\t}, {\n\t\t\"scene\": \"ed_dialog\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"ed_c_dialog\"\n\t}, {\n\t\t\"scene\": \"c_dialog\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"c_c_dialog\"\n\t}, {\n\t\t\"scene\": \"electrical_density_2\",\n\t\t\"src\": \"vid/Cars.mp4\",\n\t\t\"next\": \"end1\"\n\t\n\t}, {\n\t\t\"scene\": \"conductivity_2\",\n\t\t\"src\": \"vid/Phone.mp4\",\n\t\t\"next\": \"end1\"\n\t}, {\n\t\t\"scene\": \"electrical_density_good\",\n\t\t\"src\": \"vid/Cars.mp4\",\n\t\t\"next\": \"end2\"\n\t\n\t}, {\n\t\t\"scene\": \"conductivity_good\",\n\t\t\"src\": \"vid/Phone.mp4\",\n\t\t\"next\": \"good_mid\"\n\t}, {\n\t\t\"scene\": \"good_mid\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"good_dialog\"\n\t}, {\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"scene\": \"end1\",\n\t\t\"dialogue\": \"ending_dialog_1\"\n\t}, {\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"ending_dialog_2\",\n\t\t\"scene\": \"end2\"\n\t}, {\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"scene\": \"end_true\",\n\t\t\"next\": \"test\"\n\t}, {\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"scene\": \"test\"\n\t}];\n\t\n\twindow.s = story;\n\t\n\tvar cache = [];\n\t\n\tfunction createVideo(element) {\n\t\tvar item = _ramda2.default.find(_ramda2.default.propEq(\"src\", element.src))(cache);\n\t\tif (item != null) {\n\t\t\telement.video = item.video;\n\t\t} else {\n\t\t\tvar vid = document.createElement(\"video\");\n\t\t\tif (element.src == \"vid/Background.mp4\") {\n\t\t\t\tvid.loop = true;\n\t\t\t}\n\t\t\tvid.src = element.src;\n\t\t\tcache.push({ src: element.src, video: vid });\n\t\t\telement.video = vid;\n\t\t}\n\t}\n\t\n\tfunction _ref() {\n\t\treturn _ramda2.default.find(_ramda2.default.propEq(\"src\", \"vid/Background.mp4\"))(cache);\n\t}\n\t\n\tfunction _ref2(name) {\n\t\treturn _ramda2.default.find(_ramda2.default.propEq(\"scene\", name))(this.story);\n\t}\n\t\n\tfunction _ref3(scene) {\n\t\treturn this.scene(scene) != null;\n\t}\n\t\n\tfunction _ref15(o) {\n\t\treturn o.show;\n\t}\n\t\n\tfunction _ref4() {\n\t\tif (this.current.dialogue != null) {\n\t\t\tif (this.dialogue.hasChoices()) {\n\t\t\t\treturn this.dialogue.choices();\n\t\t\t} else {\n\t\t\t\treturn this.dialogue.say();\n\t\t\t}\n\t\t}\n\t\tif (this.current.choice != null) {\n\t\t\treturn this.current.choice.map(_ref15);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\t\n\tfunction _ref5() {\n\t\treturn this.current.choice != null || this.dialogue.hasChoices();\n\t}\n\t\n\tfunction _ref6(bool /* bool */) {\n\t\tthis.showDialogue = bool;\n\t}\n\t\n\tfunction _ref7() {\n\t\treturn this.showDialogue;\n\t}\n\t\n\tfunction _ref8() {\n\t\tvar _this = this;\n\t\n\t\tif (this.current.choice) {\n\t\t\treturn this.current.choice.map(function (e) {\n\t\t\t\treturn _this.scene(e.scene);\n\t\t\t});\n\t\t} else {\n\t\t\treturn [this.scene(this.current.next)];\n\t\t}\n\t}\n\t\n\tfunction _ref9(scene, fn) {\n\t\tif (this.exists(scene)) {\n\t\t\tthis.scene(scene).onBefore = fn;\n\t\t}\n\t}\n\t\n\tfunction _ref10(scene) {\n\t\tif (this.exists(scene)) {\n\t\t\tdelete this.scene(scene).onBefore;\n\t\t}\n\t}\n\t\n\tfunction _ref11(scene, fn) {\n\t\tif (this.exists(scene)) {\n\t\t\tthis.scene(scene).onAfter = fn;\n\t\t}\n\t}\n\t\n\tfunction _ref12(scene) {\n\t\tif (this.exists(scene)) {\n\t\t\tdelete this.scene(scene).onAfter;\n\t\t}\n\t}\n\t\n\tfunction _ref13(scene) {\n\t\tif (scene != null) {\n\t\t\tif (this.current.onAfter != null) {\n\t\t\t\t// calls onAfter just before switching the video\n\t\t\t\tthis.current.onAfter();\n\t\t\t}\n\t\n\t\t\tthis.current = this.scene(scene); // switch the video with the next one\n\t\n\t\t\tif (this.current.dialogue != null) {\n\t\t\t\tthis.dialogue.select(this.current.dialogue);\n\t\t\t\tthis.showDialogue = true;\n\t\t\t} else {\n\t\t\t\tthis.showDialogue = false;\n\t\t\t}\n\t\n\t\t\tif (this.current.onBefore != null) {\n\t\t\t\t// call onBefore for the the next video\n\t\t\t\tthis.current.onBefore();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction _ref14(choice) {\n\t\tif (this.current.dialogue != null) {\n\t\t\tvar scene = this.dialogue.next(choice);\n\t\t\tthis.switchTo(scene);\n\t\t} else {\n\t\t\tthis.switchTo(this.current.next);\n\t\t}\n\t}\n\t\n\tvar Story = function () {\n\t\tfunction Story() {\n\t\t\t(0, _classCallCheck3.default)(this, Story);\n\t\n\t\t\tthis.story = story;\n\t\t\tthis.showDialogue = false;\n\t\t\tthis.dialogue = new _dialogue2.default();\n\t\t\tthis.current = this.story[0];\n\t\t\tthis.story.forEach(createVideo);\n\t\t\tconsole.log(cache);\n\t\t}\n\t\n\t\t(0, _createClass3.default)(Story, [{\n\t\t\tkey: \"defaultVideo\",\n\t\t\tvalue: _ref\n\t\t}, {\n\t\t\tkey: \"scene\",\n\t\t\tvalue: _ref2\n\t\t}, {\n\t\t\tkey: \"exists\",\n\t\t\tvalue: _ref3\n\t\t}, {\n\t\t\tkey: \"choices\",\n\t\t\tvalue: _ref4\n\t\t}, {\n\t\t\tkey: \"hasChoices\",\n\t\t\tvalue: _ref5\n\t\t}, {\n\t\t\tkey: \"setHasDialogue\",\n\t\t\tvalue: _ref6\n\t\t}, {\n\t\t\tkey: \"hasDialogue\",\n\t\t\tvalue: _ref7\n\t\t}, {\n\t\t\tkey: \"neededVideos\",\n\t\t\tvalue: _ref8\n\n\t\t\t//events for the scene\n\n\t\t}, {\n\t\t\tkey: \"onBefore\",\n\t\t\tvalue: _ref9\n\t\t}, {\n\t\t\tkey: \"offBefore\",\n\t\t\tvalue: _ref10\n\t\t}, {\n\t\t\tkey: \"onAfter\",\n\t\t\tvalue: _ref11\n\t\t}, {\n\t\t\tkey: \"offAfetr\",\n\t\t\tvalue: _ref12\n\t\t}, {\n\t\t\tkey: \"switchTo\",\n\t\t\tvalue: _ref13\n\t\t}, {\n\t\t\tkey: \"next\",\n\t\t\tvalue: _ref14\n\t\t}]);\n\t\treturn Story;\n\t}();\n\n\texports.default = Story;\n\n/***/ },\n\n/***/ 257:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(133)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"body,html{margin:0;background-color:#000;overflow:hidden;height:100%}canvas[resize]{width:100%;height:100%}video{width:100%}.draw{position:absolute;top:0;left:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 289:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Atom = exports.LensedAtom = exports.AbstractMutable = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _kefir = __webpack_require__(148);\n\t\n\tvar _kefir2 = _interopRequireDefault(_kefir);\n\t\n\tvar _partial = __webpack_require__(329);\n\t\n\tvar _partial2 = _interopRequireDefault(_partial);\n\t\n\tvar _ramda = __webpack_require__(47);\n\t\n\tvar _ramda2 = _interopRequireDefault(_ramda);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t//\n\t\n\tvar AbstractMutable = exports.AbstractMutable = function (_Kefir$Property) {\n\t  _inherits(AbstractMutable, _Kefir$Property);\n\t\n\t  function AbstractMutable() {\n\t    _classCallCheck(this, AbstractMutable);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(AbstractMutable).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(AbstractMutable, [{\n\t    key: \"set\",\n\t    value: function set(value) {\n\t      this.modify(function () {\n\t        return value;\n\t      });\n\t    }\n\t  }, {\n\t    key: \"lens\",\n\t    value: function lens(l) {\n\t      for (var _len = arguments.length, ls = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        ls[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      return new LensedAtom(this, ls.length === 0 ? l : _partial2.default.apply(undefined, [l].concat(ls)));\n\t    }\n\t  }, {\n\t    key: \"view\",\n\t    value: function view(l) {\n\t      for (var _len2 = arguments.length, ls = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t        ls[_key2 - 1] = arguments[_key2];\n\t      }\n\t\n\t      return this.lens.apply(this, [l].concat(ls));\n\t    }\n\t  }, {\n\t    key: \"_maybeEmitValue\",\n\t    value: function _maybeEmitValue(next) {\n\t      var prev = this._currentEvent;\n\t      if (!prev || !_ramda2.default.equals(prev.value, next)) this._emitValue(next);\n\t    }\n\t  }]);\n\t\n\t  return AbstractMutable;\n\t}(_kefir2.default.Property);\n\t\n\t//\n\t\n\tvar LensedAtom = exports.LensedAtom = function (_AbstractMutable) {\n\t  _inherits(LensedAtom, _AbstractMutable);\n\t\n\t  function LensedAtom(source, lens) {\n\t    _classCallCheck(this, LensedAtom);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(LensedAtom).call(this));\n\t\n\t    _this2._source = source;\n\t    _this2._lens = lens;\n\t    _this2._$handleValue = null;\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(LensedAtom, [{\n\t    key: \"get\",\n\t    value: function get() {\n\t      return _partial2.default.view(this._lens, this._source.get());\n\t    }\n\t  }, {\n\t    key: \"modify\",\n\t    value: function modify(fn) {\n\t      this._source.modify(_partial2.default.over(this._lens, fn));\n\t    }\n\t  }, {\n\t    key: \"_handleValue\",\n\t    value: function _handleValue(context) {\n\t      this._maybeEmitValue(_partial2.default.view(this._lens, context));\n\t    }\n\t  }, {\n\t    key: \"_onActivation\",\n\t    value: function _onActivation() {\n\t      var _this3 = this;\n\t\n\t      var handleValue = function handleValue(value) {\n\t        return _this3._handleValue(value);\n\t      };\n\t      this._$handleValue = handleValue;\n\t      this._source.onValue(handleValue);\n\t    }\n\t  }, {\n\t    key: \"_onDeactivation\",\n\t    value: function _onDeactivation() {\n\t      this._source.offValue(this._$handleValue);\n\t      this._$handleValue = null;\n\t      this._currentEvent = null;\n\t    }\n\t  }]);\n\t\n\t  return LensedAtom;\n\t}(AbstractMutable);\n\t\n\t//\n\t\n\tvar Atom = exports.Atom = function (_AbstractMutable2) {\n\t  _inherits(Atom, _AbstractMutable2);\n\t\n\t  function Atom(value) {\n\t    _classCallCheck(this, Atom);\n\t\n\t    var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(Atom).call(this));\n\t\n\t    _this4._emitValue(value);\n\t    return _this4;\n\t  }\n\t\n\t  _createClass(Atom, [{\n\t    key: \"get\",\n\t    value: function get() {\n\t      return this._currentEvent.value;\n\t    }\n\t  }, {\n\t    key: \"modify\",\n\t    value: function modify(fn) {\n\t      this._maybeEmitValue(fn(this.get()));\n\t    }\n\t  }]);\n\t\n\t  return Atom;\n\t}(AbstractMutable);\n\t\n\t//\n\t\n\texports.default = function (value) {\n\t  return new Atom(value);\n\t};\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9rZWZpci5hdG9tLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFNYTs7Ozs7Ozs7Ozs7d0JBQ1AsT0FBTztBQUNULFdBQUssTUFBTCxDQUFZO2VBQU07T0FBTixDQUFaLENBRFM7Ozs7eUJBR04sR0FBVTt3Q0FBSjs7T0FBSTs7QUFDYixhQUFPLElBQUksVUFBSixDQUFlLElBQWYsRUFBcUIsR0FBRyxNQUFILEtBQWMsQ0FBZCxHQUFrQixDQUFsQixHQUFzQixvQ0FBRSxVQUFNLEdBQVIsQ0FBdEIsQ0FBNUIsQ0FEYTs7Ozt5QkFHVixHQUFVO3lDQUFKOztPQUFJOztBQUNiLGFBQU8sS0FBSyxJQUFMLGNBQVUsVUFBTSxHQUFoQixDQUFQLENBRGE7Ozs7b0NBR0MsTUFBTTtBQUNwQixVQUFNLE9BQU8sS0FBSyxhQUFMLENBRE87QUFFcEIsVUFBSSxDQUFDLElBQUQsSUFBUyxDQUFDLGdCQUFFLE1BQUYsQ0FBUyxLQUFLLEtBQUwsRUFBWSxJQUFyQixDQUFELEVBQ1gsS0FBSyxVQUFMLENBQWdCLElBQWhCLEVBREY7Ozs7U0FaUztFQUF3QixnQkFBTSxRQUFOOzs7O0lBbUJ4Qjs7O0FBQ1gsV0FEVyxVQUNYLENBQVksTUFBWixFQUFvQixJQUFwQixFQUEwQjswQkFEZixZQUNlOzt3RUFEZix3QkFDZTs7QUFFeEIsV0FBSyxPQUFMLEdBQWUsTUFBZixDQUZ3QjtBQUd4QixXQUFLLEtBQUwsR0FBYSxJQUFiLENBSHdCO0FBSXhCLFdBQUssYUFBTCxHQUFxQixJQUFyQixDQUp3Qjs7R0FBMUI7O2VBRFc7OzBCQU9MO0FBQ0osYUFBTyxrQkFBRSxJQUFGLENBQU8sS0FBSyxLQUFMLEVBQVksS0FBSyxPQUFMLENBQWEsR0FBYixFQUFuQixDQUFQLENBREk7Ozs7MkJBR0MsSUFBSTtBQUNULFdBQUssT0FBTCxDQUFhLE1BQWIsQ0FBb0Isa0JBQUUsSUFBRixDQUFPLEtBQUssS0FBTCxFQUFZLEVBQW5CLENBQXBCLEVBRFM7Ozs7aUNBR0UsU0FBUztBQUNwQixXQUFLLGVBQUwsQ0FBcUIsa0JBQUUsSUFBRixDQUFPLEtBQUssS0FBTCxFQUFZLE9BQW5CLENBQXJCLEVBRG9COzs7O29DQUdOOzs7QUFDZCxVQUFNLGNBQWMsU0FBZCxXQUFjO2VBQVMsT0FBSyxZQUFMLENBQWtCLEtBQWxCO09BQVQsQ0FETjtBQUVkLFdBQUssYUFBTCxHQUFxQixXQUFyQixDQUZjO0FBR2QsV0FBSyxPQUFMLENBQWEsT0FBYixDQUFxQixXQUFyQixFQUhjOzs7O3NDQUtFO0FBQ2hCLFdBQUssT0FBTCxDQUFhLFFBQWIsQ0FBc0IsS0FBSyxhQUFMLENBQXRCLENBRGdCO0FBRWhCLFdBQUssYUFBTCxHQUFxQixJQUFyQixDQUZnQjtBQUdoQixXQUFLLGFBQUwsR0FBcUIsSUFBckIsQ0FIZ0I7Ozs7U0FyQlA7RUFBbUI7Ozs7SUE4Qm5COzs7QUFDWCxXQURXLElBQ1gsQ0FBWSxLQUFaLEVBQW1COzBCQURSLE1BQ1E7O3dFQURSLGtCQUNROztBQUVqQixXQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsRUFGaUI7O0dBQW5COztlQURXOzswQkFLTDtBQUNKLGFBQU8sS0FBSyxhQUFMLENBQW1CLEtBQW5CLENBREg7Ozs7MkJBR0MsSUFBSTtBQUNULFdBQUssZUFBTCxDQUFxQixHQUFHLEtBQUssR0FBTCxFQUFILENBQXJCLEVBRFM7Ozs7U0FSQTtFQUFhOzs7O2tCQWVYO1NBQVMsSUFBSSxJQUFKLENBQVMsS0FBVDtDQUFUIiwiZmlsZSI6ImtlZmlyLmF0b20uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgS2VmaXIgZnJvbSBcImtlZmlyXCJcbmltcG9ydCBMICAgICBmcm9tIFwicGFydGlhbC5sZW5zZXNcIlxuaW1wb3J0IFIgICAgIGZyb20gXCJyYW1kYVwiXG5cbi8vXG5cbmV4cG9ydCBjbGFzcyBBYnN0cmFjdE11dGFibGUgZXh0ZW5kcyBLZWZpci5Qcm9wZXJ0eSB7XG4gIHNldCh2YWx1ZSkge1xuICAgIHRoaXMubW9kaWZ5KCgpID0+IHZhbHVlKVxuICB9XG4gIGxlbnMobCwgLi4ubHMpIHtcbiAgICByZXR1cm4gbmV3IExlbnNlZEF0b20odGhpcywgbHMubGVuZ3RoID09PSAwID8gbCA6IEwobCwgLi4ubHMpKVxuICB9XG4gIHZpZXcobCwgLi4ubHMpIHtcbiAgICByZXR1cm4gdGhpcy5sZW5zKGwsIC4uLmxzKVxuICB9XG4gIF9tYXliZUVtaXRWYWx1ZShuZXh0KSB7XG4gICAgY29uc3QgcHJldiA9IHRoaXMuX2N1cnJlbnRFdmVudFxuICAgIGlmICghcHJldiB8fCAhUi5lcXVhbHMocHJldi52YWx1ZSwgbmV4dCkpXG4gICAgICB0aGlzLl9lbWl0VmFsdWUobmV4dClcbiAgfVxufVxuXG4vL1xuXG5leHBvcnQgY2xhc3MgTGVuc2VkQXRvbSBleHRlbmRzIEFic3RyYWN0TXV0YWJsZSB7XG4gIGNvbnN0cnVjdG9yKHNvdXJjZSwgbGVucykge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2VcbiAgICB0aGlzLl9sZW5zID0gbGVuc1xuICAgIHRoaXMuXyRoYW5kbGVWYWx1ZSA9IG51bGxcbiAgfVxuICBnZXQoKSB7XG4gICAgcmV0dXJuIEwudmlldyh0aGlzLl9sZW5zLCB0aGlzLl9zb3VyY2UuZ2V0KCkpXG4gIH1cbiAgbW9kaWZ5KGZuKSB7XG4gICAgdGhpcy5fc291cmNlLm1vZGlmeShMLm92ZXIodGhpcy5fbGVucywgZm4pKVxuICB9XG4gIF9oYW5kbGVWYWx1ZShjb250ZXh0KSB7XG4gICAgdGhpcy5fbWF5YmVFbWl0VmFsdWUoTC52aWV3KHRoaXMuX2xlbnMsIGNvbnRleHQpKVxuICB9XG4gIF9vbkFjdGl2YXRpb24oKSB7XG4gICAgY29uc3QgaGFuZGxlVmFsdWUgPSB2YWx1ZSA9PiB0aGlzLl9oYW5kbGVWYWx1ZSh2YWx1ZSlcbiAgICB0aGlzLl8kaGFuZGxlVmFsdWUgPSBoYW5kbGVWYWx1ZVxuICAgIHRoaXMuX3NvdXJjZS5vblZhbHVlKGhhbmRsZVZhbHVlKVxuICB9XG4gIF9vbkRlYWN0aXZhdGlvbigpIHtcbiAgICB0aGlzLl9zb3VyY2Uub2ZmVmFsdWUodGhpcy5fJGhhbmRsZVZhbHVlKVxuICAgIHRoaXMuXyRoYW5kbGVWYWx1ZSA9IG51bGxcbiAgICB0aGlzLl9jdXJyZW50RXZlbnQgPSBudWxsXG4gIH1cbn1cblxuLy9cblxuZXhwb3J0IGNsYXNzIEF0b20gZXh0ZW5kcyBBYnN0cmFjdE11dGFibGUge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLl9lbWl0VmFsdWUodmFsdWUpXG4gIH1cbiAgZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLl9jdXJyZW50RXZlbnQudmFsdWVcbiAgfVxuICBtb2RpZnkoZm4pIHtcbiAgICB0aGlzLl9tYXliZUVtaXRWYWx1ZShmbih0aGlzLmdldCgpKSlcbiAgfVxufVxuXG4vL1xuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZSA9PiBuZXcgQXRvbSh2YWx1ZSlcbiJdfQ==\n\n/***/ },\n\n/***/ 329:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.lift = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _ramda = __webpack_require__(47);\n\t\n\tvar _ramda2 = _interopRequireDefault(_ramda);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\t//\n\t\n\tvar deleteKey = function deleteKey(k, o) {\n\t  if (o === undefined || !(k in o)) return o;\n\t  var r = undefined;\n\t  for (var p in o) {\n\t    if (p !== k) {\n\t      if (undefined === r) r = {};\n\t      r[p] = o[p];\n\t    }\n\t  }\n\t  return r;\n\t};\n\t\n\tvar setKey = function setKey(k, v, o) {\n\t  if (o === undefined) return _defineProperty({}, k, v);\n\t  if (k in o && _ramda2.default.equals(v, o[k])) return o;\n\t  var r = _defineProperty({}, k, v);\n\t  for (var p in o) {\n\t    if (p !== k) r[p] = o[p];\n\t  }return r;\n\t};\n\t\n\t//\n\t\n\tvar dropped = function dropped(xs) {\n\t  return Object.keys(xs).length === 0 ? undefined : xs;\n\t};\n\t\n\t//\n\t\n\tvar toPartial = function toPartial(transform) {\n\t  return function (x) {\n\t    return undefined === x ? x : transform(x);\n\t  };\n\t};\n\t\n\t//\n\t\n\tvar conserve = function conserve(c0, c1) {\n\t  return _ramda2.default.equals(c0, c1) ? c0 : c1;\n\t};\n\t\n\tvar toConserve = function toConserve(f) {\n\t  return function (y, c0) {\n\t    return conserve(c0, f(y, c0));\n\t  };\n\t};\n\t\n\t//\n\t\n\tvar lift = exports.lift = function lift(l) {\n\t  switch (typeof l === \"undefined\" ? \"undefined\" : _typeof(l)) {\n\t    case \"string\":\n\t      return L.prop(l);\n\t    case \"number\":\n\t      return L.index(l);\n\t    default:\n\t      return l;\n\t  }\n\t};\n\t\n\tvar L = function L(l) {\n\t  for (var _len = arguments.length, ls = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    ls[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  return ls.length === 0 ? lift(l) : _ramda2.default.compose.apply(_ramda2.default, [lift(l)].concat(_toConsumableArray(ls.map(lift))));\n\t};\n\t\n\tL.compose = L;\n\tL.delete = _ramda2.default.curry(function (l, s) {\n\t  return _ramda2.default.set(lift(l), undefined, s);\n\t});\n\tL.deleteAll = _ramda2.default.curry(function (lens, data) {\n\t  while (L.view(lens, data) !== undefined) {\n\t    data = L.delete(lens, data);\n\t  }return data;\n\t});\n\tL.lens = _ramda2.default.lens;\n\tL.over = _ramda2.default.curry(function (l, x2x, s) {\n\t  return _ramda2.default.over(lift(l), x2x, s);\n\t});\n\tL.set = _ramda2.default.curry(function (l, x, s) {\n\t  return _ramda2.default.set(lift(l), x, s);\n\t});\n\tL.view = _ramda2.default.curry(function (l, s) {\n\t  return _ramda2.default.view(lift(l), s);\n\t});\n\t\n\tL.choose = function (x2yL) {\n\t  return function (toFunctor) {\n\t    return function (target) {\n\t      var l = lift(x2yL(target));\n\t      return _ramda2.default.map(function (focus) {\n\t        return _ramda2.default.set(l, focus, target);\n\t      }, toFunctor(_ramda2.default.view(l, target)));\n\t    };\n\t  };\n\t};\n\t\n\tL.firstOf = function (l) {\n\t  for (var _len2 = arguments.length, ls = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t    ls[_key2 - 1] = arguments[_key2];\n\t  }\n\t\n\t  return L.choose(function (x) {\n\t    var lls = [l].concat(ls);\n\t    return lls[Math.max(0, lls.findIndex(function (l) {\n\t      return L.view(l, x) !== undefined;\n\t    }))];\n\t  });\n\t};\n\t\n\tL.replace = _ramda2.default.curry(function (inn, out) {\n\t  return _ramda2.default.lens(function (x) {\n\t    return _ramda2.default.equals(x, inn) ? out : x;\n\t  }, toConserve(function (y) {\n\t    return _ramda2.default.equals(y, out) ? inn : y;\n\t  }));\n\t});\n\t\n\tL.default = L.replace(undefined);\n\tL.required = function (inn) {\n\t  return L.replace(inn, undefined);\n\t};\n\tL.define = function (v) {\n\t  return _ramda2.default.compose(L.required(v), L.default(v));\n\t};\n\t\n\tL.normalize = function (transform) {\n\t  return _ramda2.default.lens(toPartial(transform), toConserve(toPartial(transform)));\n\t};\n\t\n\tL.prop = function (k) {\n\t  return _ramda2.default.lens(function (o) {\n\t    return o && o[k];\n\t  }, function (v, o) {\n\t    return v === undefined ? deleteKey(k, o) : setKey(k, v, o);\n\t  });\n\t};\n\t\n\tL.find = function (predicate) {\n\t  return L.choose(function (xs) {\n\t    if (xs === undefined) return L.append;\n\t    var i = xs.findIndex(predicate);\n\t    return i < 0 ? L.append : i;\n\t  });\n\t};\n\t\n\tL.findWith = function (l) {\n\t  for (var _len3 = arguments.length, ls = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t    ls[_key3 - 1] = arguments[_key3];\n\t  }\n\t\n\t  var lls = L.apply(undefined, [l].concat(ls));\n\t  return L(L.find(function (x) {\n\t    return L.view(lls, x) !== undefined;\n\t  }), lls);\n\t};\n\t\n\tL.index = function (i) {\n\t  return _ramda2.default.lens(function (xs) {\n\t    return xs && xs[i];\n\t  }, function (x, xs) {\n\t    if (x === undefined) {\n\t      if (xs === undefined) return undefined;\n\t      if (i < xs.length) return dropped(xs.slice(0, i).concat(xs.slice(i + 1)));\n\t      return xs;\n\t    } else {\n\t      if (xs === undefined) return Array(i).concat([x]);\n\t      if (xs.length <= i) return xs.concat(Array(i - xs.length), [x]);\n\t      if (_ramda2.default.equals(x, xs[i])) return xs;\n\t      return xs.slice(0, i).concat([x], xs.slice(i + 1));\n\t    }\n\t  });\n\t};\n\t\n\tL.append = _ramda2.default.lens(function () {}, function (x, xs) {\n\t  return x === undefined ? xs : xs === undefined ? [x] : xs.concat([x]);\n\t});\n\t\n\tL.filter = function (p) {\n\t  return _ramda2.default.lens(function (xs) {\n\t    return xs && xs.filter(p);\n\t  }, function (ys, xs) {\n\t    return conserve(xs, dropped(_ramda2.default.concat(ys || [], (xs || []).filter(_ramda2.default.complement(p)))));\n\t  });\n\t};\n\t\n\tL.augment = function (template) {\n\t  return _ramda2.default.lens(toPartial(function (x) {\n\t    var z = _extends({}, x);\n\t    for (var k in template) {\n\t      z[k] = template[k](x);\n\t    }return z;\n\t  }), toConserve(function (y, c) {\n\t    if (y === undefined) return undefined;\n\t    var z = undefined;\n\t    var set = function set(k, v) {\n\t      if (undefined === z) z = {};\n\t      z[k] = v;\n\t    };\n\t    for (var k in y) {\n\t      if (!(k in template)) set(k, y[k]);else if (k in c) set(k, c[k]);\n\t    }\n\t    return z;\n\t  }));\n\t};\n\t\n\texports.default = L;\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 453:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(257);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(221)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/postcss-loader/index.js!./global.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/postcss-loader/index.js!./global.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** main.bundle.js\n **/","import paper from \"paper\"\n\nimport Story from \"./story\"\nimport VolumeCtrl from \"./VolumeCtrl\"\n\nimport {Kefir} from \"kefir\"\nimport Atom from \"kefir.atom\"\n\nimport R from \"ramda\"\n\nrequire(\"./Element.mutation.js\")\n\nwindow.R = R\nwindow.p = paper\n\nrequire(\"../css/global.css\")\n\nKefir.Observable.prototype.pluck = function(prop) {\n\treturn this.map(R.view(R.lensProp(prop)))\n}\n// TODO: move to new file and find better name\nclass DialogueButtons {\n\tconstructor(){\n\t\tthis.list = []\n\t\tthis.width = 0\t\t\n\t}\n\n\tcreate(choices){\n\t\tthis.remove()\n\n\t\tthis.list = choices.map((choice,n) => {\n\t\t\tlet group = new paper.Group()\n\n\t\t\tlet text = new paper.PointText({\n\t\t\t//\tpoint: point,\n\t\t\t\tcontent: choice,\n\t\t\t\tfillColor: \"#AEE1F9\",\n\t\t\t\tfontFamily: \"Verdana\",\n\t\t\t\tfontWeight: \"bold\",\n\t\t\t\tfontSize: font_size,\n\t\t\t\tjustification: \"left\"\n\t\t\t})\n\t\t\ttext.onClick = () => window.next(n)\n\n\t\t\tlet button = main_button.clone()\n\t\t\tbutton.visible = true\n\t\t\tbutton.setBounds(this.calculateButtonSize(text.bounds))\n\n\t\t\tgroup.addChild(button)\n\t\t\tgroup.addChild(text)\n\n\t\t\tthis.width += group.getBounds().width\n\n\t\t\treturn group\n\t\t})\n\t}\n\n\tcalculateButtonSize(rect){\n\t\tlet res_rect = R.clone(rect)\n\t\tlet margin = 10\n\t\tres_rect.x -= margin/2\n\t\tres_rect.y -= margin/2\n\t\tres_rect.width += margin\n\t\tres_rect.height += margin\n\n\t\treturn res_rect\n\t}\n\n\tcalculate(size){\n\t\t//(re)calculate dialogue buttons\n\t\tlet rem = size.width - this.width\n\t\tlet padding = rem/(this.list.length + 1)\n\t\tlet cur = padding\n\t\tfor(let i = 0; i < this.list.length; i++){\n\t\t\tlet group = this.list[i]\n\t\t\tgroup.bounds.x = cur\n\t\t\tgroup.bounds.y = size.height - 75\n\t\t\t\n\t\t\tcur += group.bounds.width + padding\n\t\t}\n\t}\n\n\tremove(){\n\t\tthis.list.forEach(button => button.remove())\n\t\tthis.list = []\n\t\tthis.width = 0;\n\t}\n}\n\nlet story = new Story()\n\nvar canvas = null\nvar container = null\n\n//var planet = null;\nvar graphene = null\nvar carbon = null\n\nvar video = null\n\nvar dbuttons = new DialogueButtons()\n\nvar talk_text = null\n\nvar font_size = 18\n\n\nvar g_text = null\nvar c_text = null\n\nvar timeout_id = 0\n\nvar main_button = null\n\nvar volume = new Atom(0.5)\n\nvar guz = false\n\n\n\nstory.onBefore(\"end_true\",() => {\n\n\tstory.showDialogue = false\n\tguz = true\n\ttoggleCharacters(false)\n\tgraphene.visible = true\n\ttalk_text.visible = true\n\n\n\tgraphene.setPosition(paper.view.center)\n\ttalk_text.content = \"А ти какво научи от всичко това?\"\t\n\tpaper.view.update(true)\n\n})\n\n//gala --replace\n\nstory.onBefore(\"test\",() => {\n\twindow.location.href = \"./test.html\"\n})\n\nvar resize = Kefir.fromEvents(window, \"resize\").toProperty(() => null)\n\t.map(() => {return {height: window.innerHeight, width: window.innerWidth}})\n\nvar center = resize.map(() => paper.view.center).toProperty(() => paper.view.center)\n\nfunction set(obj, prop){\n\treturn (val) => {\n\t\tobj[prop] = val\n\t}\n}\n\nfunction toggleCharacters(val){\n\tgraphene.visible = val\n\tcarbon.visible = val\n\ttalk_text.visible = val\n\tg_text.visible = val\n\tc_text.visible = val\n\tpaper.view.draw()\n\tpaper.view.update(true)\n\n}\n\nfunction showDialogue(){\n\tlet choices = story.choices()\n\t\n\tif(R.isArrayLike(choices)){\n\t//\tconsole.log(choices)\n\t\t\n\t\tdbuttons.create(choices)\n\t\tdbuttons.calculate({height: window.innerHeight, width: window.innerWidth})\n\n\t\tpaper.view.draw()\n\t}else{\n\n\t\ttalk_text.content = choices.who +\": \"+ choices.say\n\t\tlet len = choices.say.length\n\t\tlet t = 0\n\t\tif(len < 10) {\n\t\t\tt = 5000\n\t\t}else{\n\t\t\tt = len * 200 \n\t\t}\n\n\t\ttimeout_id = setTimeout(() => {\n\t\t\twindow.next()\n\t\t}, t)\n\t}\n\tpaper.view.draw()\n\n}\n\nfunction show(current){\n\tlet video = story.current.video\n\tif(video == current){\n\t\treturn video\n\t}else{\n\t\tif(current){\n\t\t\tconsole.log(\"Removeing: \", video)\n\t\t\tcurrent.remove()\n\t\t}\n\t}\n\n\tvideo.addEventListener(\"ended\", () => window.next())\n\n\tcontainer.appendChild(video)\n\tvideo.play()\n\treturn video\n\n}\n\nwindow.next = (arg) => {\n\tclearTimeout(timeout_id)\n\tif(story.hasChoices() && arg == null){\n\t\treturn\n\t}\n\n\tdbuttons.remove()\n\n\tstory.next(arg)\n\tif(story.hasDialogue()){\n\t\tshowDialogue()\n\t\ttoggleCharacters(true)\n\t}else{\n\t\tif(!guz){\n\t\t\ttoggleCharacters(false)\n\t\t}\n\t}\n\n\tpaper.view.update(true)\n\n\tvideo = show(video)\n\tvideo.volume = volume.get()\n\n\tconsole.log(video)\n}\n\nconst volumeModifier = 0.05\n\nwindow.addEventListener(\"load\", () => {\n\n\n\n\tconsole.log(\"Loading\")\n\n\tcanvas = document.getElementById(\"drawSurf\")\n\tcontainer = document.getElementById(\"container\")\n\n\n\n\tKefir.fromEvents(canvas, \"mousewheel\").map(e => e.wheelDelta < 0 ? -volumeModifier : volumeModifier).onValue(mod => {\n\t\tvolume.modify(old => {\n\t\t\tlet volume = old + mod\n\t\t\tif(volume < 0){\n\t\t\t\tvolume = 0\n\t\t\t}else if(volume > 1){\n\t\t\t\tvolume = 1\n\t\t\t}\n\t\t\treturn volume\n\t\t})\n\n\t})\n\n\tpaper.setup(canvas)\n\n\n\n\n\t//planet = new paper.Raster(\"./mercury.png\")\n\n\tgraphene = new paper.Raster(\"./img/Graphene.png\")\n\tcarbon = new paper.Raster(\"./img/Carbon1.png\")\n\tgraphene.scale(-1,1)\n\t\n\tcarbon.position.x = 100\n\n\tcarbon.scale(0.8,0.8)\n\tgraphene.scale(0.8,0.8)\n\n\ttalk_text = new paper.PointText({\n\t\tpoint: paper.view.center,\n\t//\tcontent: choices.who +\": \"+ choices.say,\n\t\tfillColor: \"white\",\n\t\tfontFamily: \"Verdana\",\n\t\tfontWeight: \"bold\",\n\t\tfontSize: font_size,\n\t\tjustification: \"center\"\n\t})\n\n\tg_text = new paper.PointText({\n\t\tpoint: paper.view.center,\n\t\tcontent: \"Графен\",\n\t\tfillColor: \"white\",\n\t\tfontFamily: \"Verdana\",\n\t\tfontWeight: \"bold\",\n\t\tfontSize: font_size,\n\t\tjustification: \"center\"\n\t})\n\n\tc_text = new paper.PointText({\n\t\tpoint: paper.view.center,\n\t\tcontent: \"Карбон\",\n\t\tfillColor: \"white\",\n\t\tfontFamily: \"Verdana\",\n\t\tfontWeight: \"bold\",\n\t\tfontSize: font_size,\n\t\tjustification: \"center\"\n\t})\n\t\n\n\ttalk_text.importSVG(\"./img/button.svg\", e => {\n\t\tmain_button = e\n\t\tmain_button.visible = false\n\t})\n\n\n\n\tc_text.position.x = 100\n\n\n\tresize.onValue(size => {\n\n\n\t\tcanvas.width = size.width\n\t\tcanvas.height = size.height\n\t\tpaper.view.setViewSize(size.width, size.height)\n\n\n\t\tg_text.position.x = size.width - 100\n\t\tgraphene.position.x = size.width - 100\n\n\t\t\n\t\tdbuttons.calculate(size)\n\n\t\t// update by center\n\t\tlet center = paper.view.center\n\n\t\tcarbon.position.y = center.y - 100\n\t\tgraphene.position.y = center.y - 100\n\t\tg_text.position.y = center.y + 200\n\t\tc_text.position.y = center.y + 200\n\n\t\t//redraw\n\n\t\tpaper.view.update(true)\n\t\tpaper.view.draw()\n\t})\n\n\tcenter.map(point => new paper.Point(point.x, (point.y * 2) - 100)).onValue(set(talk_text, \"point\"))\n\n\tpaper.view.onMouseDown = () => {\n\t\twindow.next()\n\t}\n\t\n\tvideo = show()\n\ttoggleCharacters(false)\n\t\n\tlet volCtrl = new VolumeCtrl(volume.get())\n\n\tvolume.onValue(value => {\n\t\tif(video != null){\n\t\t\tvideo.volume = value\n\t\t}\n\t\tvolCtrl.update(value)\n\t})\n\n\tconsole.log(\"Loaded\")\n}, false )\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/main.js\n **/","//  Ramda v0.19.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments, regardless of\n     * their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are\n     * equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    /* eslint-disable no-unused-vars */\n    var _arity = function _arity(n, fn) {\n        /* eslint-disable no-unused-vars */\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\n        var list = [];\n        var next;\n        while (!(next = iter.next()).done) {\n            list.push(next.value);\n        }\n        return list;\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    var _isArguments = function () {\n        var toString = Object.prototype.toString;\n        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n            return toString.call(x) === '[object Arguments]';\n        } : function _isArguments(x) {\n            return _has('callee', x);\n        };\n    }();\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isObject = function _isObject(x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var _isPlaceholder = function _isPlaceholder(a) {\n        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n    };\n\n    var _isRegExp = function _isRegExp(x) {\n        return Object.prototype.toString.call(x) === '[object RegExp]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, functor) {\n        var idx = 0;\n        var len = functor.length;\n        var result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(functor[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _of = function _of(x) {\n        return [x];\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    // \\b matches word boundary; [\\b] matches backspace\n    var _quote = function _quote(s) {\n        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    var _aperture = function _aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    };\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it\n     * will default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Optimized internal one-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0 || _isPlaceholder(a)) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            switch (arguments.length) {\n            case 0:\n                return f2;\n            case 1:\n                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n                    return fn(a, _b);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b);\n                }) : fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            switch (arguments.length) {\n            case 0:\n                return f3;\n            case 1:\n                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                });\n            case 2:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _curry1(function (_c) {\n                    return fn(a, b, _c);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n                    return fn(_a, _b, c);\n                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b, c);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b, c);\n                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n                    return fn(a, b, _c);\n                }) : fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @param {Array} received An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (!_isPlaceholder(result)) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    var _dropLastWhile = function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    };\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xaperture = function () {\n        function XAperture(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n        XAperture.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XAperture.prototype['@@transducer/step'] = function (result, input) {\n            this.store(input);\n            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n        };\n        XAperture.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        XAperture.prototype.getCopy = function () {\n            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n        };\n        return _curry2(function _xaperture(n, xf) {\n            return new XAperture(n, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropLast = function () {\n        function XDropLast(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLast.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.full) {\n                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n            }\n            this.store(input);\n            return result;\n        };\n        XDropLast.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        return _curry2(function _xdropLast(n, xf) {\n            return new XDropLast(n, xf);\n        });\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array, returning a\n     * new copy of the array with the element at the given index replaced with the\n     * result of the function application.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @see R.update\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if\n     * there are any that don't.\n     *\n     * Dispatches to the `all` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n     * other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns `true` if both arguments are `true`; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n     * @see R.both\n     * @example\n     *\n     *      R.and(true, true); //=> true\n     *      R.and(true, false); //=> false\n     *      R.and(false, true); //=> false\n     *      R.and(false, false); //=> false\n     */\n    var and = _curry2(function and(a, b) {\n        return a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n     * greater than the length of the list, an empty list is returned.\n     *\n     * Dispatches to the `aperture` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @see R.transduce\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by\n     * the given element.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should be a\n     * bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value. Note that this copies and flattens prototype\n     * properties onto the new object as well. All non-primitive properties are\n     * copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes required\n     * to create the given path, and placing the specific value at the tail end of\n     * that path. Note that this copies and flattens prototype properties onto the\n     * new object as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return val;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @category Object\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     * @see R.partial\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation,\n     * returning the result of the first function if it is false-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * false-y value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first\n     * element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n     * to `fn` are applied to each of the predicates in turn until one returns a\n     * \"truthy\" value, at which point `fn` returns the result of applying its\n     * arguments to the corresponding transformer. If none of the predicates\n     * matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Counts the elements of a list according to how many match each value of a\n     * key generated by the supplied function. Returns an object mapping the keys\n     * produced by `fn` to the number of occurrences in the list. Note that all\n     * keys are coerced to strings because of how JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the specified\n     * arity. The curried function has two unusual capabilities. First, its\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var sumArgs = (...args) => R.sum(args);\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n     * otherwise the first argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = R.defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     *      defaultTo42(parseInt('string')); //=> 42\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null || v !== v ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.difference\n     * @example\n     *\n     *      function cmp(x, y) => x.a === y.a;\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n                out.push(first[idx]);\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the given path.\n     * Note that this copies and flattens prototype properties onto the new object\n     * as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.11.0\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, skipping elements while the\n     * predicate function returns `true`. The predicate function is passed one\n     * argument: *(value)*.\n     *\n     * Dispatches to the `dropWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var lteTwo = x => x <= 2;\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation,\n     * returning the result of the first function if it is truth-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * truth-y value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n     * types are supported if they define `<Type>.empty` and/or\n     * `<Type>.prototype.empty`.\n     *\n     * Dispatches to the `empty` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    // else\n    var empty = _curry1(function empty(x) {\n        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n            return arguments;\n        }() : // else\n        void 0;\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`,\n     * according to the `transformation` functions. All non-primitive properties\n     * are copied by reference.\n     *\n     * A `transformation` function will not be invoked if its corresponding key\n     * does not exist in the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var result = {};\n        var transformation, key, type;\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Returns the first element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `find` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `findLast` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each\n     * element in the list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\n     * details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n     * the original array. In some libraries this function is named `each`.\n     *\n     * Dispatches to the `forEach` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @see R.addIndex\n     * @example\n     *\n     *      var printXPlusFive = x => console.log(x + 5);\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs, R.pair\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0;\n        var len = pairs.length;\n        var out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has a property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good\n     * as a default or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse`\n     * function depending upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @see R.unless, R.when\n     * @example\n     *\n     *      var incCount = R.ifElse(\n     *        R.has('count'),\n     *        R.over(R.lensProp('count'), R.inc),\n     *        R.assoc('count', 1)\n     *      );\n     *      incCount({});           //=> { count: 1 }\n     *      incCount({ count: 1 }); //=> { count: 2 }\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`. _Note that\n     * this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n     * destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * Dispatches to the `intersperse` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor. This\n     * function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own properties of\n     * the supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    // Safari bug\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        // Safari bug\n        var hasArgsEnumBug = function () {\n            'use strict';\n            return arguments.propertyIsEnumerable('length');\n        }();\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, nIdx;\n            var ks = [];\n            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n            for (prop in obj) {\n                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the properties of the supplied\n     * object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop;\n        var ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from left to right, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from right to left, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1;\n        var result = [];\n        var tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function will\n     * return an empty array when there are no matches. This differs from\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @see R.test\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.maxBy(square, -3, 2); //=> -3\n     *\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the key\n     * and the values associated with the key in each object, with the result being\n     * used as the value associated with the key in the returned object. The key\n     * will be excluded from the returned object if the resulting value is\n     * `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Object\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWith\n     * @example\n     *\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n     *      R.mergeWithKey(concatValues,\n     *                     { a: true, thing: 'foo', values: [10, 20] },\n     *                     { b: true, thing: 'bar', values: [15, 35] });\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n     */\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n        var result = {};\n        var k;\n        for (k in l) {\n            if (_has(k, l)) {\n                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n            }\n        }\n        for (k in r) {\n            if (_has(k, r) && !_has(k, result)) {\n                result[k] = r[k];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.minBy(square, -3, 2); //=> 2\n     *\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder. Note\n     * that this function preserves the JavaScript-style behavior for modulo. For\n     * mathematical modulo see `mathMod`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = (a, b) => [a, b];\n     *\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string. If n is negative the\n     * element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @see R.pair\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.objOf('must'),\n     *        R.map(R.objOf('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var objOf = _curry2(function objOf(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(_of);\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of\n     * `fn` such that `fn` can only ever be called once, no matter how many times\n     * the returned function is invoked. The first value calculated is returned in\n     * subsequent invocations.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(x => x + 1);\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false;\n        var result;\n        return _arity(fn.length, function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        });\n    });\n\n    /**\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n     * if both arguments are `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n     * @see R.either\n     * @example\n     *\n     *      R.or(true, true); //=> true\n     *      R.or(true, false); //=> true\n     *      R.or(false, true); //=> true\n     *      R.or(false, false); //=> false\n     */\n    var or = _curry2(function or(a, b) {\n        return a || b;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the result of applying the given function to\n     * the focused value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig a -> b -> (a,b)\n     * @param {*} fst\n     * @param {*} snd\n     * @return {Array}\n     * @see R.createMapEntry, R.of\n     * @example\n     *\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n     */\n    var pair = _curry2(function pair(fst, snd) {\n        return [\n            fst,\n            snd\n        ];\n    });\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        var val = obj;\n        var idx = 0;\n        while (idx < paths.length) {\n            if (val == null) {\n                return;\n            }\n            val = val[paths[idx]];\n            idx += 1;\n        }\n        return val;\n    });\n\n    /**\n     * If the given, non-null object has a value at the given path, returns the\n     * value at that path. Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig a -> [String] -> Object -> a\n     * @param {*} d The default value.\n     * @param {Array} p The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path` of the supplied object or the default value.\n     * @example\n     *\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n     */\n    var pathOr = _curry3(function pathOr(d, p, obj) {\n        return defaultTo(d, path(p, obj));\n    });\n\n    /**\n     * Returns `true` if the specified object property at given path satisfies the\n     * given predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Logic\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n     * @param {Function} pred\n     * @param {Array} propPath\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propSatisfies, R.path\n     * @example\n     *\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n     */\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n        return propPath.length > 0 && pred(path(propPath, obj));\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified. If\n     * the key does not exist, the property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit, R.props\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\n     * properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that satisfy\n     * the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick, R.filter\n     * @example\n     *\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the\n     * contents of the list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated\n     * property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property. Otherwise returns the provided default\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq, R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the reduce\n     * and transduce functions. The returned value should be considered a black\n     * box: the internal structure is not guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above. For instance, it is not currently supported by reduceRight.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category List\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @see R.reduce, R.transduce\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\n     * the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list or string with the elements or characters in reverse\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {Array|String}\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     *\n     *      R.reverse('abc');      //=> 'cba'\n     *      R.reverse('ab');       //=> 'ba'\n     *      R.reverse('a');        //=> 'a'\n     *      R.reverse('');         //=> ''\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values\n     * from the left\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * Dispatches to the `slice` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function,\n     * which should accept two values at a time and return a negative number if the\n     * first value is smaller, a positive number if it's larger, and zero if they\n     * are equal. Please note that this is a **copy** of the list. It does not\n     * modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Splits a given list or string at a given index.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig Number -> [a] -> [[a], [a]]\n     * @sig Number -> String -> [String, String]\n     * @param {Number} index The index where the array/string is split.\n     * @param {Array|String} array The array/string to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n     */\n    var splitAt = _curry2(function splitAt(index, array) {\n        return [\n            slice(0, index, array),\n            slice(index, length(array), array)\n        ];\n    });\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\n     *\n     *  - the result of concatenating the two output lists is equivalent to the input list;\n     *  - none of the elements of the first output list satisfies the predicate; and\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n     * @param {Function} pred The predicate that determines where the array is split.\n     * @param {Array} list The array to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n     */\n    var splitWhen = _curry2(function splitWhen(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var prefix = [];\n        while (idx < len && !pred(list[idx])) {\n            prefix.push(list[idx]);\n            idx += 1;\n        }\n        return [\n            prefix,\n            _slice(list, idx)\n        ];\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * Dispatches to the `slice` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.head, R.init, R.last\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * Dispatches to the `take` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, and terminating when the\n     * predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile, R.addIndex\n     * @example\n     *\n     *      var isNotOne = x => x !== 1;\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list,\n     * passing each value to the supplied predicate function, and terminating when\n     * the predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * Dispatches to the `takeWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isNotFour = x => x !== 4;\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = x => console.log('x is ' + x);\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results\n     * of those function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n     * and is gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.3\n     * @category List\n     * @sig (Number -> a) -> Number -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var idx = 0;\n        var list;\n        if (len < 0 || isNaN(len)) {\n            throw new RangeError('n must be a non-negative number');\n        }\n        list = new Array(len);\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. Only the object's\n     * own properties are used.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. The object's own\n     * properties and prototype properties are used. Note that the order of the\n     * output array is not guaranteed to be consistent across different JS\n     * platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Transposes the rows and columns of a 2D list.\n     * When passed a list of `n` lists of length `x`,\n     * returns a list of `x` lists of length `n`.\n     *\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig [[a]] -> [[a]]\n     * @param {Array} list A 2D list\n     * @return {Array} A 2D list\n     * @example\n     *\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     *\n     * If some of the rows are shorter than the following rows, their elements are skipped:\n     *\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n     */\n    var transpose = _curry1(function transpose(outerlist) {\n        var i = 0;\n        var result = [];\n        while (i < outerlist.length) {\n            var innerlist = outerlist[i];\n            var j = 0;\n            while (j < innerlist.length) {\n                if (typeof result[j] === 'undefined') {\n                    result[j] = [];\n                }\n                result[j].push(innerlist[j]);\n                j += 1;\n            }\n            i += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value,\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n     * attempt to distinguish user Object types any further, reporting them all as\n     * 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns a\n     * function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function which\n     * takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = a => b => c => d => a + b + c + d;\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns\n     * either false to stop iteration or an array of length 2 containing the value\n     * to add to the resulting list and the seed to be used in the next call to the\n     * iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = n => n > 50 ? false : [-n, n + 10];\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied predicate to\n     * two list elements. Prefers the first item if two items compare equal based\n     * on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = R.eqBy(String);\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is not satisfied, the function will return the result of\n     * calling the `whenFalseFn` function with the same argument. If the predicate\n     * is satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred        A predicate function\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n     *                               to a falsy value.\n     * @param {*}        x           An object to test with the `pred` function and\n     *                               pass to `whenFalseFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n     * @see R.ifElse, R.when\n     * @example\n     *\n     *      // coerceArray :: (a|[a]) -> [a]\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n     *      coerceArray(1);         //=> [1]\n     */\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n        return pred(x) ? x : whenFalseFn(x);\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the provided index\n     * replaced with the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @see R.adjust\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Accepts a function `fn` and a list of transformer functions and returns a\n     * new curried function. When the new function is invoked, it calls the\n     * function `fn` with parameters consisting of the result of calling each\n     * supplied handler on successive arguments to the new function.\n     *\n     * If more arguments are passed to the returned function than transformer\n     * functions, those arguments are passed directly to `fn` as additional\n     * parameters. If you expect additional arguments that don't need to be\n     * transformed, although you can ignore them, it's best to pass an identity\n     * function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {Array} transformers A list of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n     */\n    var useWith = _curry2(function useWith(fn, transformers) {\n        return curryN(transformers.length, function () {\n            var args = [];\n            var idx = 0;\n            while (idx < transformers.length) {\n                args.push(transformers[idx].call(this, arguments[idx]));\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n        });\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across different\n     * JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties, of the\n     * supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop;\n        var vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is satisfied, the function will return the result of calling\n     * the `whenTrueFn` function with the same argument. If the predicate is not\n     * satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred       A predicate function\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\n     *                              evaluates to a truthy value.\n     * @param {*}        x          An object to test with the `pred` function and\n     *                              pass to `whenTrueFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n     * @see R.ifElse, R.unless\n     * @example\n     *\n     *      // truncate :: String -> String\n     *      var truncate = R.when(\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n     *      );\n     *      truncate('12345');         //=> '12345'\n     *      truncate('0123456789ABC'); //=> '0123456789…'\n     */\n    var when = _curry3(function when(pred, whenTrueFn, x) {\n        return pred(x) ? whenTrueFn(x) : x;\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of the\n     * test object. `where` returns true if all the predicates return true, false\n     * otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the\n     * parameters, or do other processing either before the internal function is\n     * called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = name => 'Hello ' + name;\n     *\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n     *\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible pair\n     * from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up equally-positioned\n     * items from both lists. The returned list is truncated to the length of the\n     * shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0;\n        var len = keys.length;\n        var out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to each\n     * equally-positioned pair in the lists. The returned list is truncated to the\n     * length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = (x, y) => {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value.valueOf());\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return _curry2(function (fn, args) {\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        });\n    };\n\n    var _dropLast = function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    };\n\n    // Values of other types are only equal if identical.\n    var _equals = function _equals(a, b, stackA, stackB) {\n        if (identical(a, b)) {\n            return true;\n        }\n        if (type(a) !== type(b)) {\n            return false;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n        }\n        switch (type(a)) {\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n            break;\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n                return false;\n            }\n            break;\n        case 'Date':\n            if (!identical(a.valueOf(), b.valueOf())) {\n                return false;\n            }\n            break;\n        case 'Error':\n            return a.name === b.name && a.message === b.message;\n        case 'RegExp':\n            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n                return false;\n            }\n            break;\n        case 'Map':\n        case 'Set':\n            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n                return false;\n            }\n            break;\n        case 'Int8Array':\n        case 'Uint8Array':\n        case 'Uint8ClampedArray':\n        case 'Int16Array':\n        case 'Uint16Array':\n        case 'Int32Array':\n        case 'Uint32Array':\n        case 'Float32Array':\n        case 'Float64Array':\n            break;\n        case 'ArrayBuffer':\n            break;\n        default:\n            // Values of other types are only equal if identical.\n            return false;\n        }\n        var keysA = keys(a);\n        if (keysA.length !== keys(b).length) {\n            return false;\n        }\n        var idx = stackA.length - 1;\n        while (idx >= 0) {\n            if (stackA[idx] === a) {\n                return stackB[idx] === b;\n            }\n            idx -= 1;\n        }\n        stackA.push(a);\n        stackB.push(b);\n        idx = keysA.length - 1;\n        while (idx >= 0) {\n            var key = keysA[idx];\n            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n                return false;\n            }\n            idx -= 1;\n        }\n        stackA.pop();\n        stackB.pop();\n        return true;\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n     * function based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, jlen, j;\n            var result = [];\n            var idx = 0;\n            var ilen = list.length;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0;\n            var len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _xdropLastWhile = function () {\n        function XDropLastWhile(fn, xf) {\n            this.f = fn;\n            this.retained = [];\n            this.xf = xf;\n        }\n        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n            this.retained = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n        };\n        XDropLastWhile.prototype.flush = function (result, input) {\n            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n            this.retained = [];\n            return this.xf['@@transducer/step'](result, input);\n        };\n        XDropLastWhile.prototype.retain = function (result, input) {\n            this.retained.push(input);\n            return result;\n        };\n        return _curry2(function _xdropLastWhile(fn, xf) {\n            return new XDropLastWhile(fn, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            this.inputs = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new\n     * parameters to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that\n     * more closely resembles `Array.prototype.map`. Note that this will only work\n     * for functions in which the iteration callback function is the first\n     * parameter, and where the list is the last parameter. (This latter might be\n     * unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n     * copied, but assigned by their reference.\n     *\n     * Dispatches to a `clone` method if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], []);\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried function\n     * has two unusual capabilities. First, its arguments needn't be provided one\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * Dispatches to the `drop` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take, R.transduce\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function,\n     * skipping elements while the predicate function returns `true`. The predicate\n     * function is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile, R.addIndex\n     * @example\n     *\n     *      var lteThree = x => x <= 3;\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n     */\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n     * cyclical data structures.\n     *\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\n     * present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _equals(a, b, [], []);\n    });\n\n    /**\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n     * same type containing the members of the given filterable which satisfy the\n     * given predicate.\n     *\n     * Dispatches to the `filter` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.reject, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    // else\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n        return _isObject(filterable) ? _reduce(function (acc, key) {\n            if (pred(filterable[key])) {\n                acc[key] = filterable[key];\n            }\n            return acc;\n        }, {}, keys(filterable)) : // else\n        _filter(pred, filterable);\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n     * and putting them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two\n     * arguments' order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of\n     * calling a String-returning function on each element, and grouping the\n     * results according to values returned.\n     *\n     * Dispatches to the `groupBy` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @see R.transduce\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {*}\n     * @see R.tail, R.init, R.last\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Given a function that generates a key, turns a list of objects into an\n     * object indexing the objects by the given key. Note that if multiple\n     * objects generate the same value for the indexing key only the last value\n     * will be included in the generated object.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} array The array of objects to index\n     * @return {Object} An object indexing each array element by the given property.\n     * @example\n     *\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n     *      R.indexBy(R.prop('id'), list);\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n     */\n    var indexBy = _curry2(function indexBy(fn, list) {\n        return _reduce(function (acc, elem) {\n            var key = fn(elem);\n            acc[key] = elem;\n            return acc;\n        }, {}, list);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.last, R.head, R.tail\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @return {Array} A new list containing those elements common to both lists.\n     * @see R.intersection\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [];\n        var idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects with duplicate values\n     * by putting the values into an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object as values, and the\n     * values of the given object, which are coerced to strings, as keys. Note\n     * that the last key found is preferred when handling the same value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the given value is its type's empty value; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig a -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @see R.empty\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty({});          //=> true\n     *      R.isEmpty({length: 0}); //=> false\n     */\n    var isEmpty = _curry1(function isEmpty(x) {\n        return x != null && equals(x, empty(x));\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.init, R.head, R.tail\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in an array, or -1 if\n     * the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Takes a function and\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n     * applies the function to each of the functor's values, and returns\n     * a functor of the same shape.\n     *\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n     *\n     * Dispatches to the `map` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * Also treats functions as functors and will compose them together.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Functor f => (a -> b) -> f a -> f b\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @see R.transduce, R.addIndex\n     * @example\n     *\n     *      var double = x => x * 2;\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     *\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n     */\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n        switch (Object.prototype.toString.call(functor)) {\n        case '[object Function]':\n            return curryN(functor.length, function () {\n                return fn.call(this, functor.apply(this, arguments));\n            });\n        case '[object Object]':\n            return _reduce(function (acc, key) {\n                acc[key] = fn(functor[key]);\n                return acc;\n            }, {}, keys(functor));\n        default:\n            return _map(fn, functor);\n        }\n    }));\n\n    /**\n     * An Object-specific version of `map`. The function is applied to three\n     * arguments: *(value, key, obj)*. If only the value is significant, use\n     * `map` instead.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig ((*, String, Object) -> *) -> Object -> Object\n     * @param {Function} fn\n     * @param {Object} obj\n     * @return {Object}\n     * @see R.map\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the values\n     * associated with the key in each object, with the result being used as the\n     * value associated with the key in the returned object. The key will be\n     * excluded from the returned object if the resulting value is `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Object\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWithKey\n     * @example\n     *\n     *      R.mergeWith(R.concat,\n     *                  { a: true, values: [10, 20] },\n     *                  { b: true, values: [15, 35] });\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n     */\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n        return mergeWithKey(function (_, _l, _r) {\n            return fn(_l, _r);\n        }, l, r);\n    });\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided initially followed by the arguments provided to `g`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partialRight\n     * @example\n     *\n     *      var multiply = (a, b) => a * b;\n     *      var double = R.partial(multiply, [2]);\n     *      double(2); //=> 4\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var sayHello = R.partial(greet, ['Hello']);\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = _createPartialApplicator(_concat);\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided to `g` followed by the arguments provided initially.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partial\n     * @example\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = _createPartialApplicator(flip(_concat));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of elements which\n     * do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @see R.filter, R.reject\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value, in\n     * `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in\n     * the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @see R.props\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, [\n        pickAll,\n        identity\n    ]);\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is, R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It may use\n     * `R.reduced` to shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * Dispatches to the `reduce` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduced, R.addIndex\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = (a, b) => a + b;\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * The complement of `filter`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.filter, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isOdd = (n) => n % 2 === 1;\n     *\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    var reject = _curry2(function reject(pred, filterable) {\n        return filter(_complement(pred), filterable);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single\n     * item by iterating through the list, successively calling the transformed\n     * iterator function and passing it an accumulator value and the current value\n     * from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be\n     * wrapped as a transformer to initialize the transducer. A transformer can be\n     * passed directly in place of an iterator function. In both cases, iteration\n     * may be stopped early with the `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a\n     * transformer and can be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result\n     * extraction function, result. The step function is used as the iterator\n     * function in reduce. The result function is used to convert the final\n     * accumulator into the return type and in most cases is R.identity. The init\n     * function can be used to provide an initial accumulator, but is ignored by\n     * transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced, R.into\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list. Duplication is determined according to the value returned by\n     * applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(map(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    // Array.prototype.indexOf doesn't exist below IE9\n    // manually crawl the list to distinguish between +0 and -0\n    // NaN\n    // non-zero numbers can utilise Set\n    // all these types can utilise Set\n    // null can utilise Set\n    // anything else not covered above, defer to R.equals\n    var _indexOf = function _indexOf(list, a, idx) {\n        var inf, item;\n        // Array.prototype.indexOf doesn't exist below IE9\n        if (typeof list.indexOf === 'function') {\n            switch (typeof a) {\n            case 'number':\n                if (a === 0) {\n                    // manually crawl the list to distinguish between +0 and -0\n                    inf = 1 / a;\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (item === 0 && 1 / item === inf) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                } else if (a !== a) {\n                    // NaN\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (typeof item === 'number' && item !== item) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                }\n                // non-zero numbers can utilise Set\n                return list.indexOf(a, idx);\n            // all these types can utilise Set\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                return list.indexOf(a, idx);\n            case 'object':\n                if (a === null) {\n                    // null can utilise Set\n                    return list.indexOf(a, idx);\n                }\n            }\n        }\n        // anything else not covered above, defer to R.equals\n        while (idx < list.length) {\n            if (equals(list[idx], a)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if every one of the provided predicates is satisfied\n     * by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.anyPass\n     * @example\n     *\n     *      var isQueen = R.propEq('rank', 'Q');\n     *      var isSpade = R.propEq('suit', '♠︎');\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n     *\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n     */\n    var allPass = _curry1(function allPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (!preds[idx].apply(this, arguments)) {\n                    return false;\n                }\n                idx += 1;\n            }\n            return true;\n        });\n    });\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms, otherwise\n     * `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.allUniq(['1', 1]); //=> true\n     *      R.allUniq([1, 1]);   //=> false\n     *      R.allUniq([[42], [42]]); //=> false\n     */\n    var allUniq = _curry1(function allUniq(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if at least one of the provided predicates is\n     * satisfied by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.allPass\n     * @example\n     *\n     *      var gte = R.anyPass([R.gt, R.equals]);\n     *\n     *      gte(3, 2); //=> true\n     *      gte(2, 2); //=> true\n     *      gte(2, 3); //=> false\n     */\n    var anyPass = _curry1(function anyPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (preds[idx].apply(this, arguments)) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        });\n    });\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * Dispatches to the `ap` method of the second argument, if present. Also\n     * treats functions as applicatives.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    // else\n    var ap = _curry2(function ap(applicative, fn) {\n        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? curryN(Math.max(applicative.length, fn.length), function () {\n            return applicative.apply(this, arguments)(fn.apply(this, arguments));\n        }) : // else\n        _reduce(function (acc, f) {\n            return _concat(acc, map(f, fn));\n        }, [], applicative);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right branch\n     * produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call, [\n     *                                  R.pipe(R.prop('indent'), indentN),\n     *                                  R.prop('value')\n     *                              ]);\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results. `chain`\n     * is also known as `flatMap` in some libraries\n     *\n     * Dispatches to the `chain` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = n => [n, n];\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n        if (typeof monad === 'function') {\n            return function () {\n                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n            };\n        }\n        return _makeFlat(false)(map(fn, monad));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying a mapping\n     * function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category List\n     * @sig Functor f => (a -> f b) -> (x -> f x) -> [a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @see R.traverse\n     * @deprecated since v0.19.0\n     * @example\n     *\n     *      var add10 = R.map(R.add(10));\n     *      R.commuteMap(add10, R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(add10, R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(add10, R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      var fetch = url => Future((rej, res) => http.get(url, res).on('error', rej));\n     *      R.commuteMap(fetch, Future.of, [\n     *        'http://ramdajs.com',\n     *        'http://github.com/ramda'\n     *      ]); //=> Future([IncomingMessage, IncomingMessage])\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, x) {\n            return ap(map(prepend, fn(x)), acc);\n        }\n        return reduceRight(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type. The arity of the function\n     * returned is specified to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = () => {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts a converging function and a list of branching functions and returns\n     * a new function. When invoked, this new function is applied to some\n     * arguments, each branching function is applied to those same arguments. The\n     * results of each branching function are passed as arguments to the converging\n     * function to produce the return value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.2\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {Array} functions A list of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = (a, b) => a + b;\n     *      var multiply = (a, b) => a * b;\n     *      var subtract = (a, b) => a - b;\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n     *\n     *      var add3 = (a, b, c) => a + b + c;\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n     */\n    var converge = _curry2(function converge(after, fns) {\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements. The\n     * first element in a series of equal element is the one being preserved.\n     *\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *      var lengthEq = (x, y) => Math.abs(x) === Math.abs(y);\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Takes a function and two values in its domain and returns `true` if the\n     * values map to the same value in the codomain; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Relation\n     * @sig (a -> b) -> a -> a -> Boolean\n     * @param {Function} f\n     * @param {*} x\n     * @param {*} y\n     * @return {Boolean}\n     * @example\n     *\n     *      R.eqBy(Math.abs, 5, -5); //=> true\n     */\n    var eqBy = _curry3(function eqBy(f, x, y) {\n        return equals(f(x), f(y));\n    });\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms, for\n     * the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array, or -1\n     * if the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * juxt applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Function\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n     * @param {Array} fns An array of functions\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n     * @example\n     *\n     *      var range = R.juxt([Math.min, Math.max]);\n     *      range(3, 4, 9, -3); //=> [-3, 9]\n     */\n    var juxt = _curry1(function juxt(fns) {\n        return function () {\n            return map(apply(__, arguments), fns);\n        };\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified path.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig [String] -> Lens s a\n     * @param {Array} path The path to use.\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xyLens = R.lensPath(['x', 'y']);\n     *\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n     */\n    var lensPath = _curry1(function lensPath(p) {\n        return lens(path(p), assocPath(p));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n     * many lists (or other objects that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply)).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.lift\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Create a new object with the own properties of the first object merged with\n     * the own properties of the second object. If a key exists in both objects,\n     * the value from the second object will be used.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.mergeWith, R.mergeWithKey\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = mergeWith(function (l, r) {\n        return r;\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining functions\n     * must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n     * Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n     * @param {Function} of\n     * @param {*} traversable\n     * @return {*}\n     * @see R.traverse\n     * @example\n     *\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n     */\n    var sequence = _curry2(function sequence(of, traversable) {\n        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n            return ap(map(prepend, x), acc);\n        }, of([]), traversable);\n    });\n\n    /**\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n     * into an Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n     * @param {Function} of\n     * @param {Function} f\n     * @param {*} traversable\n     * @return {*}\n     * @see R.sequence\n     * @example\n     *\n     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Just(3)]);   //=> Just([-1, -2, -3])\n     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.traverse(R.of, R.negate, Just([1, 2, 3])); //=> [Just(-1), Just(-2), Just(-3)]\n     *      R.traverse(R.of, R.negate, Nothing());       //=> [Nothing()]\n     */\n    var traverse = _curry3(function traverse(of, f, traversable) {\n        return sequence(of, map(f, traversable));\n    });\n\n    /**\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain c => c (c a) -> c a\n     * @param {*} list\n     * @return {*}\n     * @see R.flatten, R.chain\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = chain(_identity);\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n                return /^\\d+$/.test(k);\n            }, keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            if (typeof x.toString === 'function') {\n                var repr = x.toString();\n                if (repr !== '[object Object]') {\n                    return repr;\n                }\n            }\n            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category List\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @see R.sequence\n     * @deprecated since v0.19.0\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.pipeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return compose.apply(this, prepend(identity, map(chain, arguments)));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = config => {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n     * least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     * @see R.any\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. `R.equals`\n     * is used to determine equality.\n     *\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the\n     * transformed items to the accumulator using an appropriate iterator function\n     * based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated\n     * items will be appended to arrays and concatenated to strings. Objects will\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity\n     * reducing iterator function, step, 0-arity initial value function, init, and\n     * 1-arity result extraction function result. The step function is used as the\n     * iterator function in reduce. The result function is used to convert the\n     * final accumulator into the return type and in most cases is R.identity. The\n     * init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or other\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.liftN\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n     *\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n     *\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.composeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied function to\n     * each list element. Prefers the first item if the supplied function produces\n     * the same value on two items. `R.equals` is used for comparison.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    /* globals Set */\n    // distinguishing between +0 and -0 is not supported by Set\n    /* falls through */\n    // these types can all utilise Set\n    // prevent scan for null by tracking as a boolean\n    /* falls through */\n    // scan through all previously applied items\n    var uniqBy = _curry2(/* globals Set */\n    typeof Set === 'undefined' ? function uniqBy(fn, list) {\n        var idx = 0;\n        var applied = [];\n        var result = [];\n        var appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    } : function uniqBySet(fn, list) {\n        var set = new Set();\n        var applied = [];\n        var prevSetSize = 0;\n        var result = [];\n        var nullExists = false;\n        var negZeroExists = false;\n        var idx = 0;\n        var appliedItem, item, newSetSize;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            switch (typeof appliedItem) {\n            case 'number':\n                // distinguishing between +0 and -0 is not supported by Set\n                if (appliedItem === 0 && !negZeroExists && 1 / appliedItem === -Infinity) {\n                    negZeroExists = true;\n                    result.push(item);\n                    break;\n                }\n            /* falls through */\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                // these types can all utilise Set\n                set.add(appliedItem);\n                newSetSize = set.size;\n                if (newSetSize > prevSetSize) {\n                    result.push(item);\n                    prevSetSize = newSetSize;\n                }\n                break;\n            case 'object':\n                if (appliedItem === null) {\n                    if (!nullExists) {\n                        // prevent scan for null by tracking as a boolean\n                        nullExists = true;\n                        result.push(null);\n                    }\n                    break;\n                }\n            /* falls through */\n            default:\n                // scan through all previously applied items\n                if (!_contains(appliedItem, applied)) {\n                    applied.push(appliedItem);\n                    result.push(item);\n                }\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list without values in the first argument.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The values to be removed from `list2`.\n     * @param {Array} list2 The array to remove values from.\n     * @return {Array} The new array without values in `list1`.\n     * @see R.transduce\n     * @example\n     *\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n     */\n    var without = _curry2(function (xs, list) {\n        return reject(flip(_contains)(xs), list);\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * `R.complement` will work on all other functors as well.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = lift(not);\n\n    /**\n     * Turns a named method with a specified arity into a function that can be\n     * called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {String} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each element and\n     * concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn`\n     * for a given argument set and returns the result. Subsequent calls to the\n     * memoized `fn` with the same argument set will not result in an additional\n     * call to `fn`; instead, the cached result for that set of arguments will be\n     * returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(n => {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return _arity(fn.length, function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        });\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig (String | RegExp) -> String -> [String]\n     * @param {String|RegExp} sep The pattern.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @see R.match\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        if (!_isRegExp(pattern)) {\n            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n        }\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list. `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqBy(identity);\n\n    /**\n     * Returns the result of concatenating the given lists or strings.\n     *\n     * Dispatches to the `concat` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @sig String -> String -> String\n     * @param {Array|String} a\n     * @param {Array|String} b\n     * @return {Array|String}\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = flip(invoker(1, 'concat'));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @see R.intersectionWith\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifferenceWith\n     * @example\n     *\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n     */\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n        return concat(difference(list1, list2), difference(list2, list1));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both. Duplication is determined according to the value\n     * returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifference\n     * @example\n     *\n     *      var eqA = R.eqBy(R.prop('a'));\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n     */\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        allUniq: allUniq,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        converge: converge,\n        countBy: countBy,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqBy: eqBy,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexBy: indexBy,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        join: join,\n        juxt: juxt,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensPath: lensPath,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        mergeWith: mergeWith,\n        mergeWithKey: mergeWithKey,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        objOf: objOf,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        pair: pair,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pathOr: pathOr,\n        pathSatisfies: pathSatisfies,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        sequence: sequence,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitAt: splitAt,\n        splitEvery: splitEvery,\n        splitWhen: splitWhen,\n        subtract: subtract,\n        sum: sum,\n        symmetricDifference: symmetricDifference,\n        symmetricDifferenceWith: symmetricDifferenceWith,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        transpose: transpose,\n        traverse: traverse,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unless: unless,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        when: when,\n        where: where,\n        whereEq: whereEq,\n        without: without,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n  /* eslint-env amd */\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ramda/dist/ramda.js\n ** module id = 47\n ** module chunks = 2\n **/","/*! Kefir.js v3.2.1\n *  https://github.com/rpominov/kefir\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.Kefir = global.Kefir || {})));\n}(this, function (exports) { 'use strict';\n\n  function createObj(proto) {\n    var F = function () {};\n    F.prototype = proto;\n    return new F();\n  }\n\n  function extend(target /*, mixin1, mixin2...*/) {\n    var length = arguments.length,\n        i = undefined,\n        prop = undefined;\n    for (i = 1; i < length; i++) {\n      for (prop in arguments[i]) {\n        target[prop] = arguments[i][prop];\n      }\n    }\n    return target;\n  }\n\n  function inherit(Child, Parent /*, mixin1, mixin2...*/) {\n    var length = arguments.length,\n        i = undefined;\n    Child.prototype = createObj(Parent.prototype);\n    Child.prototype.constructor = Child;\n    for (i = 2; i < length; i++) {\n      extend(Child.prototype, arguments[i]);\n    }\n    return Child;\n  }\n\n  var NOTHING = ['<nothing>'];\n  var END = 'end';\n  var VALUE = 'value';\n  var ERROR = 'error';\n  var ANY = 'any';\n\n  function concat(a, b) {\n    var result = undefined,\n        length = undefined,\n        i = undefined,\n        j = undefined;\n    if (a.length === 0) {\n      return b;\n    }\n    if (b.length === 0) {\n      return a;\n    }\n    j = 0;\n    result = new Array(a.length + b.length);\n    length = a.length;\n    for (i = 0; i < length; i++, j++) {\n      result[j] = a[i];\n    }\n    length = b.length;\n    for (i = 0; i < length; i++, j++) {\n      result[j] = b[i];\n    }\n    return result;\n  }\n\n  function find(arr, value) {\n    var length = arr.length,\n        i = undefined;\n    for (i = 0; i < length; i++) {\n      if (arr[i] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  function findByPred(arr, pred) {\n    var length = arr.length,\n        i = undefined;\n    for (i = 0; i < length; i++) {\n      if (pred(arr[i])) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  function cloneArray(input) {\n    var length = input.length,\n        result = new Array(length),\n        i = undefined;\n    for (i = 0; i < length; i++) {\n      result[i] = input[i];\n    }\n    return result;\n  }\n\n  function remove(input, index) {\n    var length = input.length,\n        result = undefined,\n        i = undefined,\n        j = undefined;\n    if (index >= 0 && index < length) {\n      if (length === 1) {\n        return [];\n      } else {\n        result = new Array(length - 1);\n        for (i = 0, j = 0; i < length; i++) {\n          if (i !== index) {\n            result[j] = input[i];\n            j++;\n          }\n        }\n        return result;\n      }\n    } else {\n      return input;\n    }\n  }\n\n  function map(input, fn) {\n    var length = input.length,\n        result = new Array(length),\n        i = undefined;\n    for (i = 0; i < length; i++) {\n      result[i] = fn(input[i]);\n    }\n    return result;\n  }\n\n  function forEach(arr, fn) {\n    var length = arr.length,\n        i = undefined;\n    for (i = 0; i < length; i++) {\n      fn(arr[i]);\n    }\n  }\n\n  function fillArray(arr, value) {\n    var length = arr.length,\n        i = undefined;\n    for (i = 0; i < length; i++) {\n      arr[i] = value;\n    }\n  }\n\n  function contains(arr, value) {\n    return find(arr, value) !== -1;\n  }\n\n  function slide(cur, next, max) {\n    var length = Math.min(max, cur.length + 1),\n        offset = cur.length - length + 1,\n        result = new Array(length),\n        i = undefined;\n    for (i = offset; i < length; i++) {\n      result[i - offset] = cur[i];\n    }\n    result[length - 1] = next;\n    return result;\n  }\n\n  function callSubscriber(type, fn, event) {\n    if (type === ANY) {\n      fn(event);\n    } else if (type === event.type) {\n      if (type === VALUE || type === ERROR) {\n        fn(event.value);\n      } else {\n        fn();\n      }\n    }\n  }\n\n  function Dispatcher() {\n    this._items = [];\n    this._inLoop = 0;\n    this._removedItems = null;\n  }\n\n  extend(Dispatcher.prototype, {\n    add: function (type, fn) {\n      this._items = concat(this._items, [{ type: type, fn: fn }]);\n      return this._items.length;\n    },\n    remove: function (type, fn) {\n      var index = findByPred(this._items, function (x) {\n        return x.type === type && x.fn === fn;\n      });\n\n      // if we're currently in a notification loop,\n      // remember this subscriber was removed\n      if (this._inLoop !== 0 && index !== -1) {\n        if (this._removedItems === null) {\n          this._removedItems = [];\n        }\n        this._removedItems.push(this._items[index]);\n      }\n\n      this._items = remove(this._items, index);\n      return this._items.length;\n    },\n    dispatch: function (event) {\n      this._inLoop++;\n      for (var i = 0, items = this._items; i < items.length; i++) {\n\n        // cleanup was called\n        if (this._items === null) {\n          break;\n        }\n\n        // this subscriber was removed\n        if (this._removedItems !== null && contains(this._removedItems, items[i])) {\n          continue;\n        }\n\n        callSubscriber(items[i].type, items[i].fn, event);\n      }\n      this._inLoop--;\n      if (this._inLoop === 0) {\n        this._removedItems = null;\n      }\n    },\n    cleanup: function () {\n      this._items = null;\n    }\n  });\n\n  function Observable() {\n    this._dispatcher = new Dispatcher();\n    this._active = false;\n    this._alive = true;\n    this._activating = false;\n    this._logHandlers = null;\n  }\n\n  extend(Observable.prototype, {\n\n    _name: 'observable',\n\n    _onActivation: function () {},\n    _onDeactivation: function () {},\n    _setActive: function (active) {\n      if (this._active !== active) {\n        this._active = active;\n        if (active) {\n          this._activating = true;\n          this._onActivation();\n          this._activating = false;\n        } else {\n          this._onDeactivation();\n        }\n      }\n    },\n    _clear: function () {\n      this._setActive(false);\n      this._dispatcher.cleanup();\n      this._dispatcher = null;\n      this._logHandlers = null;\n    },\n    _emit: function (type, x) {\n      switch (type) {\n        case VALUE:\n          return this._emitValue(x);\n        case ERROR:\n          return this._emitError(x);\n        case END:\n          return this._emitEnd();\n      }\n    },\n    _emitValue: function (value) {\n      if (this._alive) {\n        this._dispatcher.dispatch({ type: VALUE, value: value });\n      }\n    },\n    _emitError: function (value) {\n      if (this._alive) {\n        this._dispatcher.dispatch({ type: ERROR, value: value });\n      }\n    },\n    _emitEnd: function () {\n      if (this._alive) {\n        this._alive = false;\n        this._dispatcher.dispatch({ type: END });\n        this._clear();\n      }\n    },\n    _on: function (type, fn) {\n      if (this._alive) {\n        this._dispatcher.add(type, fn);\n        this._setActive(true);\n      } else {\n        callSubscriber(type, fn, { type: END });\n      }\n      return this;\n    },\n    _off: function (type, fn) {\n      if (this._alive) {\n        var count = this._dispatcher.remove(type, fn);\n        if (count === 0) {\n          this._setActive(false);\n        }\n      }\n      return this;\n    },\n    onValue: function (fn) {\n      return this._on(VALUE, fn);\n    },\n    onError: function (fn) {\n      return this._on(ERROR, fn);\n    },\n    onEnd: function (fn) {\n      return this._on(END, fn);\n    },\n    onAny: function (fn) {\n      return this._on(ANY, fn);\n    },\n    offValue: function (fn) {\n      return this._off(VALUE, fn);\n    },\n    offError: function (fn) {\n      return this._off(ERROR, fn);\n    },\n    offEnd: function (fn) {\n      return this._off(END, fn);\n    },\n    offAny: function (fn) {\n      return this._off(ANY, fn);\n    },\n\n\n    // A and B must be subclasses of Stream and Property (order doesn't matter)\n    _ofSameType: function (A, B) {\n      return A.prototype.getType() === this.getType() ? A : B;\n    },\n    setName: function (sourceObs /* optional */, selfName) {\n      this._name = selfName ? sourceObs._name + '.' + selfName : sourceObs;\n      return this;\n    },\n    log: function () {\n      var name = arguments.length <= 0 || arguments[0] === undefined ? this.toString() : arguments[0];\n\n\n      var isCurrent = undefined;\n      var handler = function (event) {\n        var type = '<' + event.type + (isCurrent ? ':current' : '') + '>';\n        if (event.type === END) {\n          console.log(name, type);\n        } else {\n          console.log(name, type, event.value);\n        }\n      };\n\n      if (this._alive) {\n        if (!this._logHandlers) {\n          this._logHandlers = [];\n        }\n        this._logHandlers.push({ name: name, handler: handler });\n      }\n\n      isCurrent = true;\n      this.onAny(handler);\n      isCurrent = false;\n\n      return this;\n    },\n    offLog: function () {\n      var name = arguments.length <= 0 || arguments[0] === undefined ? this.toString() : arguments[0];\n\n\n      if (this._logHandlers) {\n        var handlerIndex = findByPred(this._logHandlers, function (obj) {\n          return obj.name === name;\n        });\n        if (handlerIndex !== -1) {\n          this.offAny(this._logHandlers[handlerIndex].handler);\n          this._logHandlers.splice(handlerIndex, 1);\n        }\n      }\n\n      return this;\n    }\n  });\n\n  // extend() can't handle `toString` in IE8\n  Observable.prototype.toString = function () {\n    return '[' + this._name + ']';\n  };\n\n  function Stream() {\n    Observable.call(this);\n  }\n\n  inherit(Stream, Observable, {\n\n    _name: 'stream',\n\n    getType: function () {\n      return 'stream';\n    }\n  });\n\n  function Property() {\n    Observable.call(this);\n    this._currentEvent = null;\n  }\n\n  inherit(Property, Observable, {\n\n    _name: 'property',\n\n    _emitValue: function (value) {\n      if (this._alive) {\n        this._currentEvent = { type: VALUE, value: value };\n        if (!this._activating) {\n          this._dispatcher.dispatch({ type: VALUE, value: value });\n        }\n      }\n    },\n    _emitError: function (value) {\n      if (this._alive) {\n        this._currentEvent = { type: ERROR, value: value };\n        if (!this._activating) {\n          this._dispatcher.dispatch({ type: ERROR, value: value });\n        }\n      }\n    },\n    _emitEnd: function () {\n      if (this._alive) {\n        this._alive = false;\n        if (!this._activating) {\n          this._dispatcher.dispatch({ type: END });\n        }\n        this._clear();\n      }\n    },\n    _on: function (type, fn) {\n      if (this._alive) {\n        this._dispatcher.add(type, fn);\n        this._setActive(true);\n      }\n      if (this._currentEvent !== null) {\n        callSubscriber(type, fn, this._currentEvent);\n      }\n      if (!this._alive) {\n        callSubscriber(type, fn, { type: END });\n      }\n      return this;\n    },\n    getType: function () {\n      return 'property';\n    }\n  });\n\n  var neverS = new Stream();\n  neverS._emitEnd();\n  neverS._name = 'never';\n\n  function never() {\n    return neverS;\n  }\n\n  function timeBased(mixin) {\n\n    function AnonymousStream(wait, options) {\n      var _this = this;\n\n      Stream.call(this);\n      this._wait = wait;\n      this._intervalId = null;\n      this._$onTick = function () {\n        return _this._onTick();\n      };\n      this._init(options);\n    }\n\n    inherit(AnonymousStream, Stream, {\n      _init: function () {},\n      _free: function () {},\n      _onTick: function () {},\n      _onActivation: function () {\n        this._intervalId = setInterval(this._$onTick, this._wait);\n      },\n      _onDeactivation: function () {\n        if (this._intervalId !== null) {\n          clearInterval(this._intervalId);\n          this._intervalId = null;\n        }\n      },\n      _clear: function () {\n        Stream.prototype._clear.call(this);\n        this._$onTick = null;\n        this._free();\n      }\n    }, mixin);\n\n    return AnonymousStream;\n  }\n\n  var S = timeBased({\n\n    _name: 'later',\n\n    _init: function (_ref) {\n      var x = _ref.x;\n\n      this._x = x;\n    },\n    _free: function () {\n      this._x = null;\n    },\n    _onTick: function () {\n      this._emitValue(this._x);\n      this._emitEnd();\n    }\n  });\n\n  function later(wait, x) {\n    return new S(wait, { x: x });\n  }\n\n  var S$1 = timeBased({\n\n    _name: 'interval',\n\n    _init: function (_ref) {\n      var x = _ref.x;\n\n      this._x = x;\n    },\n    _free: function () {\n      this._x = null;\n    },\n    _onTick: function () {\n      this._emitValue(this._x);\n    }\n  });\n\n  function interval(wait, x) {\n    return new S$1(wait, { x: x });\n  }\n\n  var S$2 = timeBased({\n\n    _name: 'sequentially',\n\n    _init: function (_ref) {\n      var xs = _ref.xs;\n\n      this._xs = cloneArray(xs);\n    },\n    _free: function () {\n      this._xs = null;\n    },\n    _onTick: function () {\n      if (this._xs.length === 1) {\n        this._emitValue(this._xs[0]);\n        this._emitEnd();\n      } else {\n        this._emitValue(this._xs.shift());\n      }\n    }\n  });\n\n  function sequentially(wait, xs) {\n    return xs.length === 0 ? never() : new S$2(wait, { xs: xs });\n  }\n\n  var S$3 = timeBased({\n\n    _name: 'fromPoll',\n\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _onTick: function () {\n      var fn = this._fn;\n      this._emitValue(fn());\n    }\n  });\n\n  function fromPoll(wait, fn) {\n    return new S$3(wait, { fn: fn });\n  }\n\n  function emitter(obs) {\n\n    function value(x) {\n      obs._emitValue(x);\n      return obs._active;\n    }\n\n    function error(x) {\n      obs._emitError(x);\n      return obs._active;\n    }\n\n    function end() {\n      obs._emitEnd();\n      return obs._active;\n    }\n\n    function event(e) {\n      obs._emit(e.type, e.value);\n      return obs._active;\n    }\n\n    return { value: value, error: error, end: end, event: event, emit: value, emitEvent: event };\n  }\n\n  var S$4 = timeBased({\n\n    _name: 'withInterval',\n\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n      this._emitter = emitter(this);\n    },\n    _free: function () {\n      this._fn = null;\n      this._emitter = null;\n    },\n    _onTick: function () {\n      var fn = this._fn;\n      fn(this._emitter);\n    }\n  });\n\n  function withInterval(wait, fn) {\n    return new S$4(wait, { fn: fn });\n  }\n\n  function S$5(fn) {\n    Stream.call(this);\n    this._fn = fn;\n    this._unsubscribe = null;\n  }\n\n  inherit(S$5, Stream, {\n\n    _name: 'stream',\n\n    _onActivation: function () {\n      var fn = this._fn;\n      var unsubscribe = fn(emitter(this));\n      this._unsubscribe = typeof unsubscribe === 'function' ? unsubscribe : null;\n\n      // fix https://github.com/rpominov/kefir/issues/35\n      if (!this._active) {\n        this._callUnsubscribe();\n      }\n    },\n    _callUnsubscribe: function () {\n      if (this._unsubscribe !== null) {\n        this._unsubscribe();\n        this._unsubscribe = null;\n      }\n    },\n    _onDeactivation: function () {\n      this._callUnsubscribe();\n    },\n    _clear: function () {\n      Stream.prototype._clear.call(this);\n      this._fn = null;\n    }\n  });\n\n  function stream(fn) {\n    return new S$5(fn);\n  }\n\n  function fromCallback(callbackConsumer) {\n\n    var called = false;\n\n    return stream(function (emitter) {\n\n      if (!called) {\n        callbackConsumer(function (x) {\n          emitter.emit(x);\n          emitter.end();\n        });\n        called = true;\n      }\n    }).setName('fromCallback');\n  }\n\n  function fromNodeCallback(callbackConsumer) {\n\n    var called = false;\n\n    return stream(function (emitter) {\n\n      if (!called) {\n        callbackConsumer(function (error, x) {\n          if (error) {\n            emitter.error(error);\n          } else {\n            emitter.emit(x);\n          }\n          emitter.end();\n        });\n        called = true;\n      }\n    }).setName('fromNodeCallback');\n  }\n\n  function spread(fn, length) {\n    switch (length) {\n      case 0:\n        return function () {\n          return fn();\n        };\n      case 1:\n        return function (a) {\n          return fn(a[0]);\n        };\n      case 2:\n        return function (a) {\n          return fn(a[0], a[1]);\n        };\n      case 3:\n        return function (a) {\n          return fn(a[0], a[1], a[2]);\n        };\n      case 4:\n        return function (a) {\n          return fn(a[0], a[1], a[2], a[3]);\n        };\n      default:\n        return function (a) {\n          return fn.apply(null, a);\n        };\n    }\n  }\n\n  function apply(fn, c, a) {\n    var aLength = a ? a.length : 0;\n    if (c == null) {\n      switch (aLength) {\n        case 0:\n          return fn();\n        case 1:\n          return fn(a[0]);\n        case 2:\n          return fn(a[0], a[1]);\n        case 3:\n          return fn(a[0], a[1], a[2]);\n        case 4:\n          return fn(a[0], a[1], a[2], a[3]);\n        default:\n          return fn.apply(null, a);\n      }\n    } else {\n      switch (aLength) {\n        case 0:\n          return fn.call(c);\n        default:\n          return fn.apply(c, a);\n      }\n    }\n  }\n\n  function fromSubUnsub(sub, unsub, transformer /* Function | falsey */) {\n    return stream(function (emitter) {\n\n      var handler = transformer ? function () {\n        emitter.emit(apply(transformer, this, arguments));\n      } : function (x) {\n        emitter.emit(x);\n      };\n\n      sub(handler);\n      return function () {\n        return unsub(handler);\n      };\n    }).setName('fromSubUnsub');\n  }\n\n  var pairs = [['addEventListener', 'removeEventListener'], ['addListener', 'removeListener'], ['on', 'off']];\n\n  function fromEvents(target, eventName, transformer) {\n    var sub = undefined,\n        unsub = undefined;\n\n    for (var i = 0; i < pairs.length; i++) {\n      if (typeof target[pairs[i][0]] === 'function' && typeof target[pairs[i][1]] === 'function') {\n        sub = pairs[i][0];\n        unsub = pairs[i][1];\n        break;\n      }\n    }\n\n    if (sub === undefined) {\n      throw new Error('target don\\'t support any of ' + 'addEventListener/removeEventListener, addListener/removeListener, on/off method pair');\n    }\n\n    return fromSubUnsub(function (handler) {\n      return target[sub](eventName, handler);\n    }, function (handler) {\n      return target[unsub](eventName, handler);\n    }, transformer).setName('fromEvents');\n  }\n\n  // HACK:\n  //   We don't call parent Class constructor, but instead putting all necessary\n  //   properties into prototype to simulate ended Property\n  //   (see Propperty and Observable classes).\n\n  function P(value) {\n    this._currentEvent = { type: 'value', value: value, current: true };\n  }\n\n  inherit(P, Property, {\n    _name: 'constant',\n    _active: false,\n    _activating: false,\n    _alive: false,\n    _dispatcher: null,\n    _logHandlers: null\n  });\n\n  function constant(x) {\n    return new P(x);\n  }\n\n  // HACK:\n  //   We don't call parent Class constructor, but instead putting all necessary\n  //   properties into prototype to simulate ended Property\n  //   (see Propperty and Observable classes).\n\n  function P$1(value) {\n    this._currentEvent = { type: 'error', value: value, current: true };\n  }\n\n  inherit(P$1, Property, {\n    _name: 'constantError',\n    _active: false,\n    _activating: false,\n    _alive: false,\n    _dispatcher: null,\n    _logHandlers: null\n  });\n\n  function constantError(x) {\n    return new P$1(x);\n  }\n\n  function createConstructor(BaseClass, name) {\n    return function AnonymousObservable(source, options) {\n      var _this = this;\n\n      BaseClass.call(this);\n      this._source = source;\n      this._name = source._name + '.' + name;\n      this._init(options);\n      this._$handleAny = function (event) {\n        return _this._handleAny(event);\n      };\n    };\n  }\n\n  function createClassMethods(BaseClass) {\n    return {\n      _init: function () {},\n      _free: function () {},\n      _handleValue: function (x) {\n        this._emitValue(x);\n      },\n      _handleError: function (x) {\n        this._emitError(x);\n      },\n      _handleEnd: function () {\n        this._emitEnd();\n      },\n      _handleAny: function (event) {\n        switch (event.type) {\n          case VALUE:\n            return this._handleValue(event.value);\n          case ERROR:\n            return this._handleError(event.value);\n          case END:\n            return this._handleEnd();\n        }\n      },\n      _onActivation: function () {\n        this._source.onAny(this._$handleAny);\n      },\n      _onDeactivation: function () {\n        this._source.offAny(this._$handleAny);\n      },\n      _clear: function () {\n        BaseClass.prototype._clear.call(this);\n        this._source = null;\n        this._$handleAny = null;\n        this._free();\n      }\n    };\n  }\n\n  function createStream(name, mixin) {\n    var S = createConstructor(Stream, name);\n    inherit(S, Stream, createClassMethods(Stream), mixin);\n    return S;\n  }\n\n  function createProperty(name, mixin) {\n    var P = createConstructor(Property, name);\n    inherit(P, Property, createClassMethods(Property), mixin);\n    return P;\n  }\n\n  var P$2 = createProperty('toProperty', {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._getInitialCurrent = fn;\n    },\n    _onActivation: function () {\n      if (this._getInitialCurrent !== null) {\n        var getInitial = this._getInitialCurrent;\n        this._emitValue(getInitial());\n      }\n      this._source.onAny(this._$handleAny); // copied from patterns/one-source\n    }\n  });\n\n  function toProperty(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\n    if (fn !== null && typeof fn !== 'function') {\n      throw new Error('You should call toProperty() with a function or no arguments.');\n    }\n    return new P$2(obs, { fn: fn });\n  }\n\n  var S$6 = createStream('changes', {\n    _handleValue: function (x) {\n      if (!this._activating) {\n        this._emitValue(x);\n      }\n    },\n    _handleError: function (x) {\n      if (!this._activating) {\n        this._emitError(x);\n      }\n    }\n  });\n\n  function changes(obs) {\n    return new S$6(obs);\n  }\n\n  function fromPromise(promise) {\n\n    var called = false;\n\n    var result = stream(function (emitter) {\n      if (!called) {\n        var onValue = function (x) {\n          emitter.emit(x);\n          emitter.end();\n        };\n        var onError = function (x) {\n          emitter.error(x);\n          emitter.end();\n        };\n        var _promise = promise.then(onValue, onError);\n\n        // prevent libraries like 'Q' or 'when' from swallowing exceptions\n        if (_promise && typeof _promise.done === 'function') {\n          _promise.done();\n        }\n\n        called = true;\n      }\n    });\n\n    return toProperty(result, null).setName('fromPromise');\n  }\n\n  function getGlodalPromise() {\n    if (typeof Promise === 'function') {\n      return Promise;\n    } else {\n      throw new Error('There isn\\'t default Promise, use shim or parameter');\n    }\n  }\n\n  function toPromise (obs) {\n    var Promise = arguments.length <= 1 || arguments[1] === undefined ? getGlodalPromise() : arguments[1];\n\n    var last = null;\n    return new Promise(function (resolve, reject) {\n      obs.onAny(function (event) {\n        if (event.type === END && last !== null) {\n          (last.type === VALUE ? resolve : reject)(last.value);\n          last = null;\n        } else {\n          last = event;\n        }\n      });\n    });\n  }\n\n  function symbol_ (key) {\n    if (typeof Symbol !== 'undefined' && Symbol[key]) {\n      return Symbol[key];\n    } else if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n      return Symbol.for(key);\n    } else {\n      return '@@' + key;\n    }\n  }\n\n  var symbol = symbol_('observable');\n\n  function fromESObservable(_observable) {\n    var observable = _observable[symbol] ? _observable[symbol]() : _observable;\n    return stream(function (emitter) {\n      var unsub = observable.subscribe({\n        error: function (error) {\n          emitter.error(error);\n          emitter.end();\n        },\n        next: function (value) {\n          emitter.emit(value);\n        },\n        complete: function () {\n          emitter.end();\n        }\n      });\n\n      if (unsub.unsubscribe) {\n        return function () {\n          unsub.unsubscribe();\n        };\n      } else {\n        return unsub;\n      }\n    }).setName('fromESObservable');\n  }\n\n  function ESObservable(observable) {\n    this._observable = observable.takeErrors(1);\n  }\n\n  extend(ESObservable.prototype, {\n    subscribe: function (observer) {\n      var _this = this;\n\n      var fn = function (event) {\n        if (event.type === VALUE && observer.next) {\n          observer.next(event.value);\n        } else if (event.type === ERROR && observer.error) {\n          observer.error(event.value);\n        } else if (event.type === END && observer.complete) {\n          observer.complete(event.value);\n        }\n      };\n\n      this._observable.onAny(fn);\n      return function () {\n        return _this._observable.offAny(fn);\n      };\n    }\n  });\n\n  function toESObservable() {\n    return new ESObservable(this);\n  }\n\n  var mixin = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      this._emitValue(fn(x));\n    }\n  };\n\n  var S$7 = createStream('map', mixin);\n  var P$3 = createProperty('map', mixin);\n\n  var id = function (x) {\n    return x;\n  };\n\n  function map$1(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? id : arguments[1];\n\n    return new (obs._ofSameType(S$7, P$3))(obs, { fn: fn });\n  }\n\n  var mixin$1 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      if (fn(x)) {\n        this._emitValue(x);\n      }\n    }\n  };\n\n  var S$8 = createStream('filter', mixin$1);\n  var P$4 = createProperty('filter', mixin$1);\n\n  var id$1 = function (x) {\n    return x;\n  };\n\n  function filter(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$1 : arguments[1];\n\n    return new (obs._ofSameType(S$8, P$4))(obs, { fn: fn });\n  }\n\n  var mixin$2 = {\n    _init: function (_ref) {\n      var n = _ref.n;\n\n      this._n = n;\n      if (n <= 0) {\n        this._emitEnd();\n      }\n    },\n    _handleValue: function (x) {\n      this._n--;\n      this._emitValue(x);\n      if (this._n === 0) {\n        this._emitEnd();\n      }\n    }\n  };\n\n  var S$9 = createStream('take', mixin$2);\n  var P$5 = createProperty('take', mixin$2);\n\n  function take(obs, n) {\n    return new (obs._ofSameType(S$9, P$5))(obs, { n: n });\n  }\n\n  var mixin$3 = {\n    _init: function (_ref) {\n      var n = _ref.n;\n\n      this._n = n;\n      if (n <= 0) {\n        this._emitEnd();\n      }\n    },\n    _handleError: function (x) {\n      this._n--;\n      this._emitError(x);\n      if (this._n === 0) {\n        this._emitEnd();\n      }\n    }\n  };\n\n  var S$10 = createStream('takeErrors', mixin$3);\n  var P$6 = createProperty('takeErrors', mixin$3);\n\n  function takeErrors(obs, n) {\n    return new (obs._ofSameType(S$10, P$6))(obs, { n: n });\n  }\n\n  var mixin$4 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      if (fn(x)) {\n        this._emitValue(x);\n      } else {\n        this._emitEnd();\n      }\n    }\n  };\n\n  var S$11 = createStream('takeWhile', mixin$4);\n  var P$7 = createProperty('takeWhile', mixin$4);\n\n  var id$2 = function (x) {\n    return x;\n  };\n\n  function takeWhile(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$2 : arguments[1];\n\n    return new (obs._ofSameType(S$11, P$7))(obs, { fn: fn });\n  }\n\n  var mixin$5 = {\n    _init: function () {\n      this._lastValue = NOTHING;\n    },\n    _free: function () {\n      this._lastValue = null;\n    },\n    _handleValue: function (x) {\n      this._lastValue = x;\n    },\n    _handleEnd: function () {\n      if (this._lastValue !== NOTHING) {\n        this._emitValue(this._lastValue);\n      }\n      this._emitEnd();\n    }\n  };\n\n  var S$12 = createStream('last', mixin$5);\n  var P$8 = createProperty('last', mixin$5);\n\n  function last(obs) {\n    return new (obs._ofSameType(S$12, P$8))(obs);\n  }\n\n  var mixin$6 = {\n    _init: function (_ref) {\n      var n = _ref.n;\n\n      this._n = Math.max(0, n);\n    },\n    _handleValue: function (x) {\n      if (this._n === 0) {\n        this._emitValue(x);\n      } else {\n        this._n--;\n      }\n    }\n  };\n\n  var S$13 = createStream('skip', mixin$6);\n  var P$9 = createProperty('skip', mixin$6);\n\n  function skip(obs, n) {\n    return new (obs._ofSameType(S$13, P$9))(obs, { n: n });\n  }\n\n  var mixin$7 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      if (this._fn !== null && !fn(x)) {\n        this._fn = null;\n      }\n      if (this._fn === null) {\n        this._emitValue(x);\n      }\n    }\n  };\n\n  var S$14 = createStream('skipWhile', mixin$7);\n  var P$10 = createProperty('skipWhile', mixin$7);\n\n  var id$3 = function (x) {\n    return x;\n  };\n\n  function skipWhile(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$3 : arguments[1];\n\n    return new (obs._ofSameType(S$14, P$10))(obs, { fn: fn });\n  }\n\n  var mixin$8 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n      this._prev = NOTHING;\n    },\n    _free: function () {\n      this._fn = null;\n      this._prev = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      if (this._prev === NOTHING || !fn(this._prev, x)) {\n        this._prev = x;\n        this._emitValue(x);\n      }\n    }\n  };\n\n  var S$15 = createStream('skipDuplicates', mixin$8);\n  var P$11 = createProperty('skipDuplicates', mixin$8);\n\n  var eq = function (a, b) {\n    return a === b;\n  };\n\n  function skipDuplicates(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? eq : arguments[1];\n\n    return new (obs._ofSameType(S$15, P$11))(obs, { fn: fn });\n  }\n\n  var mixin$9 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n      var seed = _ref.seed;\n\n      this._fn = fn;\n      this._prev = seed;\n    },\n    _free: function () {\n      this._prev = null;\n      this._fn = null;\n    },\n    _handleValue: function (x) {\n      if (this._prev !== NOTHING) {\n        var fn = this._fn;\n        this._emitValue(fn(this._prev, x));\n      }\n      this._prev = x;\n    }\n  };\n\n  var S$16 = createStream('diff', mixin$9);\n  var P$12 = createProperty('diff', mixin$9);\n\n  function defaultFn(a, b) {\n    return [a, b];\n  }\n\n  function diff(obs, fn) {\n    var seed = arguments.length <= 2 || arguments[2] === undefined ? NOTHING : arguments[2];\n\n    return new (obs._ofSameType(S$16, P$12))(obs, { fn: fn || defaultFn, seed: seed });\n  }\n\n  var P$13 = createProperty('scan', {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n      var seed = _ref.seed;\n\n      this._fn = fn;\n      this._seed = seed;\n      if (seed !== NOTHING) {\n        this._emitValue(seed);\n      }\n    },\n    _free: function () {\n      this._fn = null;\n      this._seed = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      if (this._currentEvent === null || this._currentEvent.type === ERROR) {\n        this._emitValue(this._seed === NOTHING ? x : fn(this._seed, x));\n      } else {\n        this._emitValue(fn(this._currentEvent.value, x));\n      }\n    }\n  });\n\n  function scan(obs, fn) {\n    var seed = arguments.length <= 2 || arguments[2] === undefined ? NOTHING : arguments[2];\n\n    return new P$13(obs, { fn: fn, seed: seed });\n  }\n\n  var mixin$10 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      var xs = fn(x);\n      for (var i = 0; i < xs.length; i++) {\n        this._emitValue(xs[i]);\n      }\n    }\n  };\n\n  var S$17 = createStream('flatten', mixin$10);\n\n  var id$4 = function (x) {\n    return x;\n  };\n\n  function flatten(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$4 : arguments[1];\n\n    return new S$17(obs, { fn: fn });\n  }\n\n  var END_MARKER = {};\n\n  var mixin$11 = {\n    _init: function (_ref) {\n      var _this = this;\n\n      var wait = _ref.wait;\n\n      this._wait = Math.max(0, wait);\n      this._buff = [];\n      this._$shiftBuff = function () {\n        var value = _this._buff.shift();\n        if (value === END_MARKER) {\n          _this._emitEnd();\n        } else {\n          _this._emitValue(value);\n        }\n      };\n    },\n    _free: function () {\n      this._buff = null;\n      this._$shiftBuff = null;\n    },\n    _handleValue: function (x) {\n      if (this._activating) {\n        this._emitValue(x);\n      } else {\n        this._buff.push(x);\n        setTimeout(this._$shiftBuff, this._wait);\n      }\n    },\n    _handleEnd: function () {\n      if (this._activating) {\n        this._emitEnd();\n      } else {\n        this._buff.push(END_MARKER);\n        setTimeout(this._$shiftBuff, this._wait);\n      }\n    }\n  };\n\n  var S$18 = createStream('delay', mixin$11);\n  var P$14 = createProperty('delay', mixin$11);\n\n  function delay(obs, wait) {\n    return new (obs._ofSameType(S$18, P$14))(obs, { wait: wait });\n  }\n\n  var now = Date.now ? function () {\n    return Date.now();\n  } : function () {\n    return new Date().getTime();\n  };\n\n  var mixin$12 = {\n    _init: function (_ref) {\n      var _this = this;\n\n      var wait = _ref.wait;\n      var leading = _ref.leading;\n      var trailing = _ref.trailing;\n\n      this._wait = Math.max(0, wait);\n      this._leading = leading;\n      this._trailing = trailing;\n      this._trailingValue = null;\n      this._timeoutId = null;\n      this._endLater = false;\n      this._lastCallTime = 0;\n      this._$trailingCall = function () {\n        return _this._trailingCall();\n      };\n    },\n    _free: function () {\n      this._trailingValue = null;\n      this._$trailingCall = null;\n    },\n    _handleValue: function (x) {\n      if (this._activating) {\n        this._emitValue(x);\n      } else {\n        var curTime = now();\n        if (this._lastCallTime === 0 && !this._leading) {\n          this._lastCallTime = curTime;\n        }\n        var remaining = this._wait - (curTime - this._lastCallTime);\n        if (remaining <= 0) {\n          this._cancelTrailing();\n          this._lastCallTime = curTime;\n          this._emitValue(x);\n        } else if (this._trailing) {\n          this._cancelTrailing();\n          this._trailingValue = x;\n          this._timeoutId = setTimeout(this._$trailingCall, remaining);\n        }\n      }\n    },\n    _handleEnd: function () {\n      if (this._activating) {\n        this._emitEnd();\n      } else {\n        if (this._timeoutId) {\n          this._endLater = true;\n        } else {\n          this._emitEnd();\n        }\n      }\n    },\n    _cancelTrailing: function () {\n      if (this._timeoutId !== null) {\n        clearTimeout(this._timeoutId);\n        this._timeoutId = null;\n      }\n    },\n    _trailingCall: function () {\n      this._emitValue(this._trailingValue);\n      this._timeoutId = null;\n      this._trailingValue = null;\n      this._lastCallTime = !this._leading ? 0 : now();\n      if (this._endLater) {\n        this._emitEnd();\n      }\n    }\n  };\n\n  var S$19 = createStream('throttle', mixin$12);\n  var P$15 = createProperty('throttle', mixin$12);\n\n  function throttle(obs, wait) {\n    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    var _ref2$leading = _ref2.leading;\n    var leading = _ref2$leading === undefined ? true : _ref2$leading;\n    var _ref2$trailing = _ref2.trailing;\n    var trailing = _ref2$trailing === undefined ? true : _ref2$trailing;\n\n    return new (obs._ofSameType(S$19, P$15))(obs, { wait: wait, leading: leading, trailing: trailing });\n  }\n\n  var mixin$13 = {\n    _init: function (_ref) {\n      var _this = this;\n\n      var wait = _ref.wait;\n      var immediate = _ref.immediate;\n\n      this._wait = Math.max(0, wait);\n      this._immediate = immediate;\n      this._lastAttempt = 0;\n      this._timeoutId = null;\n      this._laterValue = null;\n      this._endLater = false;\n      this._$later = function () {\n        return _this._later();\n      };\n    },\n    _free: function () {\n      this._laterValue = null;\n      this._$later = null;\n    },\n    _handleValue: function (x) {\n      if (this._activating) {\n        this._emitValue(x);\n      } else {\n        this._lastAttempt = now();\n        if (this._immediate && !this._timeoutId) {\n          this._emitValue(x);\n        }\n        if (!this._timeoutId) {\n          this._timeoutId = setTimeout(this._$later, this._wait);\n        }\n        if (!this._immediate) {\n          this._laterValue = x;\n        }\n      }\n    },\n    _handleEnd: function () {\n      if (this._activating) {\n        this._emitEnd();\n      } else {\n        if (this._timeoutId && !this._immediate) {\n          this._endLater = true;\n        } else {\n          this._emitEnd();\n        }\n      }\n    },\n    _later: function () {\n      var last = now() - this._lastAttempt;\n      if (last < this._wait && last >= 0) {\n        this._timeoutId = setTimeout(this._$later, this._wait - last);\n      } else {\n        this._timeoutId = null;\n        if (!this._immediate) {\n          this._emitValue(this._laterValue);\n          this._laterValue = null;\n        }\n        if (this._endLater) {\n          this._emitEnd();\n        }\n      }\n    }\n  };\n\n  var S$20 = createStream('debounce', mixin$13);\n  var P$16 = createProperty('debounce', mixin$13);\n\n  function debounce(obs, wait) {\n    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    var _ref2$immediate = _ref2.immediate;\n    var immediate = _ref2$immediate === undefined ? false : _ref2$immediate;\n\n    return new (obs._ofSameType(S$20, P$16))(obs, { wait: wait, immediate: immediate });\n  }\n\n  var mixin$14 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleError: function (x) {\n      var fn = this._fn;\n      this._emitError(fn(x));\n    }\n  };\n\n  var S$21 = createStream('mapErrors', mixin$14);\n  var P$17 = createProperty('mapErrors', mixin$14);\n\n  var id$5 = function (x) {\n    return x;\n  };\n\n  function mapErrors(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$5 : arguments[1];\n\n    return new (obs._ofSameType(S$21, P$17))(obs, { fn: fn });\n  }\n\n  var mixin$15 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleError: function (x) {\n      var fn = this._fn;\n      if (fn(x)) {\n        this._emitError(x);\n      }\n    }\n  };\n\n  var S$22 = createStream('filterErrors', mixin$15);\n  var P$18 = createProperty('filterErrors', mixin$15);\n\n  var id$6 = function (x) {\n    return x;\n  };\n\n  function filterErrors(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? id$6 : arguments[1];\n\n    return new (obs._ofSameType(S$22, P$18))(obs, { fn: fn });\n  }\n\n  var mixin$16 = {\n    _handleValue: function () {}\n  };\n\n  var S$23 = createStream('ignoreValues', mixin$16);\n  var P$19 = createProperty('ignoreValues', mixin$16);\n\n  function ignoreValues(obs) {\n    return new (obs._ofSameType(S$23, P$19))(obs);\n  }\n\n  var mixin$17 = {\n    _handleError: function () {}\n  };\n\n  var S$24 = createStream('ignoreErrors', mixin$17);\n  var P$20 = createProperty('ignoreErrors', mixin$17);\n\n  function ignoreErrors(obs) {\n    return new (obs._ofSameType(S$24, P$20))(obs);\n  }\n\n  var mixin$18 = {\n    _handleEnd: function () {}\n  };\n\n  var S$25 = createStream('ignoreEnd', mixin$18);\n  var P$21 = createProperty('ignoreEnd', mixin$18);\n\n  function ignoreEnd(obs) {\n    return new (obs._ofSameType(S$25, P$21))(obs);\n  }\n\n  var mixin$19 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleEnd: function () {\n      var fn = this._fn;\n      this._emitValue(fn());\n      this._emitEnd();\n    }\n  };\n\n  var S$26 = createStream('beforeEnd', mixin$19);\n  var P$22 = createProperty('beforeEnd', mixin$19);\n\n  function beforeEnd(obs, fn) {\n    return new (obs._ofSameType(S$26, P$22))(obs, { fn: fn });\n  }\n\n  var mixin$20 = {\n    _init: function (_ref) {\n      var min = _ref.min;\n      var max = _ref.max;\n\n      this._max = max;\n      this._min = min;\n      this._buff = [];\n    },\n    _free: function () {\n      this._buff = null;\n    },\n    _handleValue: function (x) {\n      this._buff = slide(this._buff, x, this._max);\n      if (this._buff.length >= this._min) {\n        this._emitValue(this._buff);\n      }\n    }\n  };\n\n  var S$27 = createStream('slidingWindow', mixin$20);\n  var P$23 = createProperty('slidingWindow', mixin$20);\n\n  function slidingWindow(obs, max) {\n    var min = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n    return new (obs._ofSameType(S$27, P$23))(obs, { min: min, max: max });\n  }\n\n  var mixin$21 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n      var flushOnEnd = _ref.flushOnEnd;\n\n      this._fn = fn;\n      this._flushOnEnd = flushOnEnd;\n      this._buff = [];\n    },\n    _free: function () {\n      this._buff = null;\n    },\n    _flush: function () {\n      if (this._buff !== null && this._buff.length !== 0) {\n        this._emitValue(this._buff);\n        this._buff = [];\n      }\n    },\n    _handleValue: function (x) {\n      this._buff.push(x);\n      var fn = this._fn;\n      if (!fn(x)) {\n        this._flush();\n      }\n    },\n    _handleEnd: function () {\n      if (this._flushOnEnd) {\n        this._flush();\n      }\n      this._emitEnd();\n    }\n  };\n\n  var S$28 = createStream('bufferWhile', mixin$21);\n  var P$24 = createProperty('bufferWhile', mixin$21);\n\n  var id$7 = function (x) {\n    return x;\n  };\n\n  function bufferWhile(obs, fn) {\n    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    var _ref2$flushOnEnd = _ref2.flushOnEnd;\n    var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;\n\n    return new (obs._ofSameType(S$28, P$24))(obs, { fn: fn || id$7, flushOnEnd: flushOnEnd });\n  }\n\n  var mixin$22 = {\n    _init: function (_ref) {\n      var count = _ref.count;\n      var flushOnEnd = _ref.flushOnEnd;\n\n      this._count = count;\n      this._flushOnEnd = flushOnEnd;\n      this._buff = [];\n    },\n    _free: function () {\n      this._buff = null;\n    },\n    _flush: function () {\n      if (this._buff !== null && this._buff.length !== 0) {\n        this._emitValue(this._buff);\n        this._buff = [];\n      }\n    },\n    _handleValue: function (x) {\n      this._buff.push(x);\n      if (this._buff.length >= this._count) {\n        this._flush();\n      }\n    },\n    _handleEnd: function () {\n      if (this._flushOnEnd) {\n        this._flush();\n      }\n      this._emitEnd();\n    }\n  };\n\n  var S$29 = createStream('bufferWithCount', mixin$22);\n  var P$25 = createProperty('bufferWithCount', mixin$22);\n\n  function bufferWhile$1(obs, count) {\n    var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    var _ref2$flushOnEnd = _ref2.flushOnEnd;\n    var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;\n\n    return new (obs._ofSameType(S$29, P$25))(obs, { count: count, flushOnEnd: flushOnEnd });\n  }\n\n  var mixin$23 = {\n    _init: function (_ref) {\n      var _this = this;\n\n      var wait = _ref.wait;\n      var count = _ref.count;\n      var flushOnEnd = _ref.flushOnEnd;\n\n      this._wait = wait;\n      this._count = count;\n      this._flushOnEnd = flushOnEnd;\n      this._intervalId = null;\n      this._$onTick = function () {\n        return _this._flush();\n      };\n      this._buff = [];\n    },\n    _free: function () {\n      this._$onTick = null;\n      this._buff = null;\n    },\n    _flush: function () {\n      if (this._buff !== null) {\n        this._emitValue(this._buff);\n        this._buff = [];\n      }\n    },\n    _handleValue: function (x) {\n      this._buff.push(x);\n      if (this._buff.length >= this._count) {\n        clearInterval(this._intervalId);\n        this._flush();\n        this._intervalId = setInterval(this._$onTick, this._wait);\n      }\n    },\n    _handleEnd: function () {\n      if (this._flushOnEnd && this._buff.length !== 0) {\n        this._flush();\n      }\n      this._emitEnd();\n    },\n    _onActivation: function () {\n      this._source.onAny(this._$handleAny); // copied from patterns/one-source\n      this._intervalId = setInterval(this._$onTick, this._wait);\n    },\n    _onDeactivation: function () {\n      if (this._intervalId !== null) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      }\n      this._source.offAny(this._$handleAny); // copied from patterns/one-source\n    }\n  };\n\n  var S$30 = createStream('bufferWithTimeOrCount', mixin$23);\n  var P$26 = createProperty('bufferWithTimeOrCount', mixin$23);\n\n  function bufferWithTimeOrCount(obs, wait, count) {\n    var _ref2 = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n    var _ref2$flushOnEnd = _ref2.flushOnEnd;\n    var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;\n\n    return new (obs._ofSameType(S$30, P$26))(obs, { wait: wait, count: count, flushOnEnd: flushOnEnd });\n  }\n\n  function xformForObs(obs) {\n    return {\n      '@@transducer/step': function (res, input) {\n        obs._emitValue(input);\n        return null;\n      },\n      '@@transducer/result': function () {\n        obs._emitEnd();\n        return null;\n      }\n    };\n  }\n\n  var mixin$24 = {\n    _init: function (_ref) {\n      var transducer = _ref.transducer;\n\n      this._xform = transducer(xformForObs(this));\n    },\n    _free: function () {\n      this._xform = null;\n    },\n    _handleValue: function (x) {\n      if (this._xform['@@transducer/step'](null, x) !== null) {\n        this._xform['@@transducer/result'](null);\n      }\n    },\n    _handleEnd: function () {\n      this._xform['@@transducer/result'](null);\n    }\n  };\n\n  var S$31 = createStream('transduce', mixin$24);\n  var P$27 = createProperty('transduce', mixin$24);\n\n  function transduce(obs, transducer) {\n    return new (obs._ofSameType(S$31, P$27))(obs, { transducer: transducer });\n  }\n\n  var mixin$25 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._handler = fn;\n      this._emitter = emitter(this);\n    },\n    _free: function () {\n      this._handler = null;\n      this._emitter = null;\n    },\n    _handleAny: function (event) {\n      this._handler(this._emitter, event);\n    }\n  };\n\n  var S$32 = createStream('withHandler', mixin$25);\n  var P$28 = createProperty('withHandler', mixin$25);\n\n  function withHandler(obs, fn) {\n    return new (obs._ofSameType(S$32, P$28))(obs, { fn: fn });\n  }\n\n  function defaultErrorsCombinator(errors) {\n    var latestError = undefined;\n    for (var i = 0; i < errors.length; i++) {\n      if (errors[i] !== undefined) {\n        if (latestError === undefined || latestError.index < errors[i].index) {\n          latestError = errors[i];\n        }\n      }\n    }\n    return latestError.error;\n  }\n\n  function Combine(active, passive, combinator) {\n    var _this = this;\n\n    Stream.call(this);\n    this._activeCount = active.length;\n    this._sources = concat(active, passive);\n    this._combinator = combinator ? spread(combinator, this._sources.length) : function (x) {\n      return x;\n    };\n    this._aliveCount = 0;\n    this._latestValues = new Array(this._sources.length);\n    this._latestErrors = new Array(this._sources.length);\n    fillArray(this._latestValues, NOTHING);\n    this._emitAfterActivation = false;\n    this._endAfterActivation = false;\n    this._latestErrorIndex = 0;\n\n    this._$handlers = [];\n\n    var _loop = function (i) {\n      _this._$handlers.push(function (event) {\n        return _this._handleAny(i, event);\n      });\n    };\n\n    for (var i = 0; i < this._sources.length; i++) {\n      _loop(i);\n    }\n  }\n\n  inherit(Combine, Stream, {\n\n    _name: 'combine',\n\n    _onActivation: function () {\n      this._aliveCount = this._activeCount;\n\n      // we need to suscribe to _passive_ sources before _active_\n      // (see https://github.com/rpominov/kefir/issues/98)\n      for (var i = this._activeCount; i < this._sources.length; i++) {\n        this._sources[i].onAny(this._$handlers[i]);\n      }\n      for (var i = 0; i < this._activeCount; i++) {\n        this._sources[i].onAny(this._$handlers[i]);\n      }\n\n      if (this._emitAfterActivation) {\n        this._emitAfterActivation = false;\n        this._emitIfFull();\n      }\n      if (this._endAfterActivation) {\n        this._emitEnd();\n      }\n    },\n    _onDeactivation: function () {\n      var length = this._sources.length,\n          i = undefined;\n      for (i = 0; i < length; i++) {\n        this._sources[i].offAny(this._$handlers[i]);\n      }\n    },\n    _emitIfFull: function () {\n      var hasAllValues = true;\n      var hasErrors = false;\n      var length = this._latestValues.length;\n      var valuesCopy = new Array(length);\n      var errorsCopy = new Array(length);\n\n      for (var i = 0; i < length; i++) {\n        valuesCopy[i] = this._latestValues[i];\n        errorsCopy[i] = this._latestErrors[i];\n\n        if (valuesCopy[i] === NOTHING) {\n          hasAllValues = false;\n        }\n\n        if (errorsCopy[i] !== undefined) {\n          hasErrors = true;\n        }\n      }\n\n      if (hasAllValues) {\n        var combinator = this._combinator;\n        this._emitValue(combinator(valuesCopy));\n      }\n      if (hasErrors) {\n        this._emitError(defaultErrorsCombinator(errorsCopy));\n      }\n    },\n    _handleAny: function (i, event) {\n\n      if (event.type === VALUE || event.type === ERROR) {\n\n        if (event.type === VALUE) {\n          this._latestValues[i] = event.value;\n          this._latestErrors[i] = undefined;\n        }\n        if (event.type === ERROR) {\n          this._latestValues[i] = NOTHING;\n          this._latestErrors[i] = {\n            index: this._latestErrorIndex++,\n            error: event.value\n          };\n        }\n\n        if (i < this._activeCount) {\n          if (this._activating) {\n            this._emitAfterActivation = true;\n          } else {\n            this._emitIfFull();\n          }\n        }\n      } else {\n        // END\n\n        if (i < this._activeCount) {\n          this._aliveCount--;\n          if (this._aliveCount === 0) {\n            if (this._activating) {\n              this._endAfterActivation = true;\n            } else {\n              this._emitEnd();\n            }\n          }\n        }\n      }\n    },\n    _clear: function () {\n      Stream.prototype._clear.call(this);\n      this._sources = null;\n      this._latestValues = null;\n      this._latestErrors = null;\n      this._combinator = null;\n      this._$handlers = null;\n    }\n  });\n\n  function combine(active) {\n    var passive = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n    var combinator = arguments[2];\n\n    if (typeof passive === 'function') {\n      combinator = passive;\n      passive = [];\n    }\n    return active.length === 0 ? never() : new Combine(active, passive, combinator);\n  }\n\n  var isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n  };\n\n  function Zip(sources, combinator) {\n    var _this = this;\n\n    Stream.call(this);\n\n    this._buffers = map(sources, function (source) {\n      return isArray(source) ? cloneArray(source) : [];\n    });\n    this._sources = map(sources, function (source) {\n      return isArray(source) ? never() : source;\n    });\n\n    this._combinator = combinator ? spread(combinator, this._sources.length) : function (x) {\n      return x;\n    };\n    this._aliveCount = 0;\n\n    this._$handlers = [];\n\n    var _loop = function (i) {\n      _this._$handlers.push(function (event) {\n        return _this._handleAny(i, event);\n      });\n    };\n\n    for (var i = 0; i < this._sources.length; i++) {\n      _loop(i);\n    }\n  }\n\n  inherit(Zip, Stream, {\n\n    _name: 'zip',\n\n    _onActivation: function () {\n\n      // if all sources are arrays\n      while (this._isFull()) {\n        this._emit();\n      }\n\n      var length = this._sources.length;\n      this._aliveCount = length;\n      for (var i = 0; i < length && this._active; i++) {\n        this._sources[i].onAny(this._$handlers[i]);\n      }\n    },\n    _onDeactivation: function () {\n      for (var i = 0; i < this._sources.length; i++) {\n        this._sources[i].offAny(this._$handlers[i]);\n      }\n    },\n    _emit: function () {\n      var values = new Array(this._buffers.length);\n      for (var i = 0; i < this._buffers.length; i++) {\n        values[i] = this._buffers[i].shift();\n      }\n      var combinator = this._combinator;\n      this._emitValue(combinator(values));\n    },\n    _isFull: function () {\n      for (var i = 0; i < this._buffers.length; i++) {\n        if (this._buffers[i].length === 0) {\n          return false;\n        }\n      }\n      return true;\n    },\n    _handleAny: function (i, event) {\n      if (event.type === VALUE) {\n        this._buffers[i].push(event.value);\n        if (this._isFull()) {\n          this._emit();\n        }\n      }\n      if (event.type === ERROR) {\n        this._emitError(event.value);\n      }\n      if (event.type === END) {\n        this._aliveCount--;\n        if (this._aliveCount === 0) {\n          this._emitEnd();\n        }\n      }\n    },\n    _clear: function () {\n      Stream.prototype._clear.call(this);\n      this._sources = null;\n      this._buffers = null;\n      this._combinator = null;\n      this._$handlers = null;\n    }\n  });\n\n  function zip(observables, combinator /* Function | falsey */) {\n    return observables.length === 0 ? never() : new Zip(observables, combinator);\n  }\n\n  var id$8 = function (x) {\n    return x;\n  };\n\n  function AbstractPool() {\n    var _this = this;\n\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var _ref$queueLim = _ref.queueLim;\n    var queueLim = _ref$queueLim === undefined ? 0 : _ref$queueLim;\n    var _ref$concurLim = _ref.concurLim;\n    var concurLim = _ref$concurLim === undefined ? -1 : _ref$concurLim;\n    var _ref$drop = _ref.drop;\n    var drop = _ref$drop === undefined ? 'new' : _ref$drop;\n\n    Stream.call(this);\n\n    this._queueLim = queueLim < 0 ? -1 : queueLim;\n    this._concurLim = concurLim < 0 ? -1 : concurLim;\n    this._drop = drop;\n    this._queue = [];\n    this._curSources = [];\n    this._$handleSubAny = function (event) {\n      return _this._handleSubAny(event);\n    };\n    this._$endHandlers = [];\n    this._currentlyAdding = null;\n\n    if (this._concurLim === 0) {\n      this._emitEnd();\n    }\n  }\n\n  inherit(AbstractPool, Stream, {\n\n    _name: 'abstractPool',\n\n    _add: function (obj, toObs /* Function | falsey */) {\n      toObs = toObs || id$8;\n      if (this._concurLim === -1 || this._curSources.length < this._concurLim) {\n        this._addToCur(toObs(obj));\n      } else {\n        if (this._queueLim === -1 || this._queue.length < this._queueLim) {\n          this._addToQueue(toObs(obj));\n        } else if (this._drop === 'old') {\n          this._removeOldest();\n          this._add(obj, toObs);\n        }\n      }\n    },\n    _addAll: function (obss) {\n      var _this2 = this;\n\n      forEach(obss, function (obs) {\n        return _this2._add(obs);\n      });\n    },\n    _remove: function (obs) {\n      if (this._removeCur(obs) === -1) {\n        this._removeQueue(obs);\n      }\n    },\n    _addToQueue: function (obs) {\n      this._queue = concat(this._queue, [obs]);\n    },\n    _addToCur: function (obs) {\n      if (this._active) {\n\n        // HACK:\n        //\n        // We have two optimizations for cases when `obs` is ended. We don't want\n        // to add such observable to the list, but only want to emit events\n        // from it (if it has some).\n        //\n        // Instead of this hacks, we could just did following,\n        // but it would be 5-8 times slower:\n        //\n        //     this._curSources = concat(this._curSources, [obs]);\n        //     this._subscribe(obs);\n        //\n\n        // #1\n        // This one for cases when `obs` already ended\n        // e.g., Kefir.constant() or Kefir.never()\n        if (!obs._alive) {\n          if (obs._currentEvent) {\n            this._emit(obs._currentEvent.type, obs._currentEvent.value);\n          }\n          return;\n        }\n\n        // #2\n        // This one is for cases when `obs` going to end synchronously on\n        // first subscriber e.g., Kefir.stream(em => {em.emit(1); em.end()})\n        this._currentlyAdding = obs;\n        obs.onAny(this._$handleSubAny);\n        this._currentlyAdding = null;\n        if (obs._alive) {\n          this._curSources = concat(this._curSources, [obs]);\n          if (this._active) {\n            this._subToEnd(obs);\n          }\n        }\n      } else {\n        this._curSources = concat(this._curSources, [obs]);\n      }\n    },\n    _subToEnd: function (obs) {\n      var _this3 = this;\n\n      var onEnd = function () {\n        return _this3._removeCur(obs);\n      };\n      this._$endHandlers.push({ obs: obs, handler: onEnd });\n      obs.onEnd(onEnd);\n    },\n    _subscribe: function (obs) {\n      obs.onAny(this._$handleSubAny);\n\n      // it can become inactive in responce of subscribing to `obs.onAny` above\n      if (this._active) {\n        this._subToEnd(obs);\n      }\n    },\n    _unsubscribe: function (obs) {\n      obs.offAny(this._$handleSubAny);\n\n      var onEndI = findByPred(this._$endHandlers, function (obj) {\n        return obj.obs === obs;\n      });\n      if (onEndI !== -1) {\n        obs.offEnd(this._$endHandlers[onEndI].handler);\n        this._$endHandlers.splice(onEndI, 1);\n      }\n    },\n    _handleSubAny: function (event) {\n      if (event.type === VALUE) {\n        this._emitValue(event.value);\n      } else if (event.type === ERROR) {\n        this._emitError(event.value);\n      }\n    },\n    _removeQueue: function (obs) {\n      var index = find(this._queue, obs);\n      this._queue = remove(this._queue, index);\n      return index;\n    },\n    _removeCur: function (obs) {\n      if (this._active) {\n        this._unsubscribe(obs);\n      }\n      var index = find(this._curSources, obs);\n      this._curSources = remove(this._curSources, index);\n      if (index !== -1) {\n        if (this._queue.length !== 0) {\n          this._pullQueue();\n        } else if (this._curSources.length === 0) {\n          this._onEmpty();\n        }\n      }\n      return index;\n    },\n    _removeOldest: function () {\n      this._removeCur(this._curSources[0]);\n    },\n    _pullQueue: function () {\n      if (this._queue.length !== 0) {\n        this._queue = cloneArray(this._queue);\n        this._addToCur(this._queue.shift());\n      }\n    },\n    _onActivation: function () {\n      for (var i = 0, sources = this._curSources; i < sources.length && this._active; i++) {\n        this._subscribe(sources[i]);\n      }\n    },\n    _onDeactivation: function () {\n      for (var i = 0, sources = this._curSources; i < sources.length; i++) {\n        this._unsubscribe(sources[i]);\n      }\n      if (this._currentlyAdding !== null) {\n        this._unsubscribe(this._currentlyAdding);\n      }\n    },\n    _isEmpty: function () {\n      return this._curSources.length === 0;\n    },\n    _onEmpty: function () {},\n    _clear: function () {\n      Stream.prototype._clear.call(this);\n      this._queue = null;\n      this._curSources = null;\n      this._$handleSubAny = null;\n      this._$endHandlers = null;\n    }\n  });\n\n  function Merge(sources) {\n    AbstractPool.call(this);\n    this._addAll(sources);\n    this._initialised = true;\n  }\n\n  inherit(Merge, AbstractPool, {\n\n    _name: 'merge',\n\n    _onEmpty: function () {\n      if (this._initialised) {\n        this._emitEnd();\n      }\n    }\n  });\n\n  function merge(observables) {\n    return observables.length === 0 ? never() : new Merge(observables);\n  }\n\n  function S$33(generator) {\n    var _this = this;\n\n    Stream.call(this);\n    this._generator = generator;\n    this._source = null;\n    this._inLoop = false;\n    this._iteration = 0;\n    this._$handleAny = function (event) {\n      return _this._handleAny(event);\n    };\n  }\n\n  inherit(S$33, Stream, {\n\n    _name: 'repeat',\n\n    _handleAny: function (event) {\n      if (event.type === END) {\n        this._source = null;\n        this._getSource();\n      } else {\n        this._emit(event.type, event.value);\n      }\n    },\n    _getSource: function () {\n      if (!this._inLoop) {\n        this._inLoop = true;\n        var generator = this._generator;\n        while (this._source === null && this._alive && this._active) {\n          this._source = generator(this._iteration++);\n          if (this._source) {\n            this._source.onAny(this._$handleAny);\n          } else {\n            this._emitEnd();\n          }\n        }\n        this._inLoop = false;\n      }\n    },\n    _onActivation: function () {\n      if (this._source) {\n        this._source.onAny(this._$handleAny);\n      } else {\n        this._getSource();\n      }\n    },\n    _onDeactivation: function () {\n      if (this._source) {\n        this._source.offAny(this._$handleAny);\n      }\n    },\n    _clear: function () {\n      Stream.prototype._clear.call(this);\n      this._generator = null;\n      this._source = null;\n      this._$handleAny = null;\n    }\n  });\n\n  function repeat (generator) {\n    return new S$33(generator);\n  }\n\n  function concat$1(observables) {\n    return repeat(function (index) {\n      return observables.length > index ? observables[index] : false;\n    }).setName('concat');\n  }\n\n  function Pool() {\n    AbstractPool.call(this);\n  }\n\n  inherit(Pool, AbstractPool, {\n\n    _name: 'pool',\n\n    plug: function (obs) {\n      this._add(obs);\n      return this;\n    },\n    unplug: function (obs) {\n      this._remove(obs);\n      return this;\n    }\n  });\n\n  function FlatMap(source, fn, options) {\n    var _this = this;\n\n    AbstractPool.call(this, options);\n    this._source = source;\n    this._fn = fn;\n    this._mainEnded = false;\n    this._lastCurrent = null;\n    this._$handleMain = function (event) {\n      return _this._handleMain(event);\n    };\n  }\n\n  inherit(FlatMap, AbstractPool, {\n    _onActivation: function () {\n      AbstractPool.prototype._onActivation.call(this);\n      if (this._active) {\n        this._source.onAny(this._$handleMain);\n      }\n    },\n    _onDeactivation: function () {\n      AbstractPool.prototype._onDeactivation.call(this);\n      this._source.offAny(this._$handleMain);\n      this._hadNoEvSinceDeact = true;\n    },\n    _handleMain: function (event) {\n\n      if (event.type === VALUE) {\n        // Is latest value before deactivation survived, and now is 'current' on this activation?\n        // We don't want to handle such values, to prevent to constantly add\n        // same observale on each activation/deactivation when our main source\n        // is a `Kefir.conatant()` for example.\n        var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n        if (!sameCurr) {\n          this._add(event.value, this._fn);\n        }\n        this._lastCurrent = event.value;\n        this._hadNoEvSinceDeact = false;\n      }\n\n      if (event.type === ERROR) {\n        this._emitError(event.value);\n      }\n\n      if (event.type === END) {\n        if (this._isEmpty()) {\n          this._emitEnd();\n        } else {\n          this._mainEnded = true;\n        }\n      }\n    },\n    _onEmpty: function () {\n      if (this._mainEnded) {\n        this._emitEnd();\n      }\n    },\n    _clear: function () {\n      AbstractPool.prototype._clear.call(this);\n      this._source = null;\n      this._lastCurrent = null;\n      this._$handleMain = null;\n    }\n  });\n\n  function FlatMapErrors(source, fn) {\n    FlatMap.call(this, source, fn);\n  }\n\n  inherit(FlatMapErrors, FlatMap, {\n\n    // Same as in FlatMap, only VALUE/ERROR flipped\n\n    _handleMain: function (event) {\n\n      if (event.type === ERROR) {\n        var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;\n        if (!sameCurr) {\n          this._add(event.value, this._fn);\n        }\n        this._lastCurrent = event.value;\n        this._hadNoEvSinceDeact = false;\n      }\n\n      if (event.type === VALUE) {\n        this._emitValue(event.value);\n      }\n\n      if (event.type === END) {\n        if (this._isEmpty()) {\n          this._emitEnd();\n        } else {\n          this._mainEnded = true;\n        }\n      }\n    }\n  });\n\n  function createConstructor$1(BaseClass, name) {\n    return function AnonymousObservable(primary, secondary, options) {\n      var _this = this;\n\n      BaseClass.call(this);\n      this._primary = primary;\n      this._secondary = secondary;\n      this._name = primary._name + '.' + name;\n      this._lastSecondary = NOTHING;\n      this._$handleSecondaryAny = function (event) {\n        return _this._handleSecondaryAny(event);\n      };\n      this._$handlePrimaryAny = function (event) {\n        return _this._handlePrimaryAny(event);\n      };\n      this._init(options);\n    };\n  }\n\n  function createClassMethods$1(BaseClass) {\n    return {\n      _init: function () {},\n      _free: function () {},\n      _handlePrimaryValue: function (x) {\n        this._emitValue(x);\n      },\n      _handlePrimaryError: function (x) {\n        this._emitError(x);\n      },\n      _handlePrimaryEnd: function () {\n        this._emitEnd();\n      },\n      _handleSecondaryValue: function (x) {\n        this._lastSecondary = x;\n      },\n      _handleSecondaryError: function (x) {\n        this._emitError(x);\n      },\n      _handleSecondaryEnd: function () {},\n      _handlePrimaryAny: function (event) {\n        switch (event.type) {\n          case VALUE:\n            return this._handlePrimaryValue(event.value);\n          case ERROR:\n            return this._handlePrimaryError(event.value);\n          case END:\n            return this._handlePrimaryEnd(event.value);\n        }\n      },\n      _handleSecondaryAny: function (event) {\n        switch (event.type) {\n          case VALUE:\n            return this._handleSecondaryValue(event.value);\n          case ERROR:\n            return this._handleSecondaryError(event.value);\n          case END:\n            this._handleSecondaryEnd(event.value);\n            this._removeSecondary();\n        }\n      },\n      _removeSecondary: function () {\n        if (this._secondary !== null) {\n          this._secondary.offAny(this._$handleSecondaryAny);\n          this._$handleSecondaryAny = null;\n          this._secondary = null;\n        }\n      },\n      _onActivation: function () {\n        if (this._secondary !== null) {\n          this._secondary.onAny(this._$handleSecondaryAny);\n        }\n        if (this._active) {\n          this._primary.onAny(this._$handlePrimaryAny);\n        }\n      },\n      _onDeactivation: function () {\n        if (this._secondary !== null) {\n          this._secondary.offAny(this._$handleSecondaryAny);\n        }\n        this._primary.offAny(this._$handlePrimaryAny);\n      },\n      _clear: function () {\n        BaseClass.prototype._clear.call(this);\n        this._primary = null;\n        this._secondary = null;\n        this._lastSecondary = null;\n        this._$handleSecondaryAny = null;\n        this._$handlePrimaryAny = null;\n        this._free();\n      }\n    };\n  }\n\n  function createStream$1(name, mixin) {\n    var S = createConstructor$1(Stream, name);\n    inherit(S, Stream, createClassMethods$1(Stream), mixin);\n    return S;\n  }\n\n  function createProperty$1(name, mixin) {\n    var P = createConstructor$1(Property, name);\n    inherit(P, Property, createClassMethods$1(Property), mixin);\n    return P;\n  }\n\n  var mixin$26 = {\n    _handlePrimaryValue: function (x) {\n      if (this._lastSecondary !== NOTHING && this._lastSecondary) {\n        this._emitValue(x);\n      }\n    },\n    _handleSecondaryEnd: function () {\n      if (this._lastSecondary === NOTHING || !this._lastSecondary) {\n        this._emitEnd();\n      }\n    }\n  };\n\n  var S$34 = createStream$1('filterBy', mixin$26);\n  var P$29 = createProperty$1('filterBy', mixin$26);\n\n  function filterBy(primary, secondary) {\n    return new (primary._ofSameType(S$34, P$29))(primary, secondary);\n  }\n\n  var id2 = function (_, x) {\n    return x;\n  };\n\n  function sampledBy(passive, active, combinator) {\n    var _combinator = combinator ? function (a, b) {\n      return combinator(b, a);\n    } : id2;\n    return combine([active], [passive], _combinator).setName(passive, 'sampledBy');\n  }\n\n  var mixin$27 = {\n    _handlePrimaryValue: function (x) {\n      if (this._lastSecondary !== NOTHING) {\n        this._emitValue(x);\n      }\n    },\n    _handleSecondaryEnd: function () {\n      if (this._lastSecondary === NOTHING) {\n        this._emitEnd();\n      }\n    }\n  };\n\n  var S$35 = createStream$1('skipUntilBy', mixin$27);\n  var P$30 = createProperty$1('skipUntilBy', mixin$27);\n\n  function skipUntilBy(primary, secondary) {\n    return new (primary._ofSameType(S$35, P$30))(primary, secondary);\n  }\n\n  var mixin$28 = {\n    _handleSecondaryValue: function () {\n      this._emitEnd();\n    }\n  };\n\n  var S$36 = createStream$1('takeUntilBy', mixin$28);\n  var P$31 = createProperty$1('takeUntilBy', mixin$28);\n\n  function takeUntilBy(primary, secondary) {\n    return new (primary._ofSameType(S$36, P$31))(primary, secondary);\n  }\n\n  var mixin$29 = {\n    _init: function () {\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$flushOnEnd = _ref.flushOnEnd;\n      var flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd;\n\n      this._buff = [];\n      this._flushOnEnd = flushOnEnd;\n    },\n    _free: function () {\n      this._buff = null;\n    },\n    _flush: function () {\n      if (this._buff !== null) {\n        this._emitValue(this._buff);\n        this._buff = [];\n      }\n    },\n    _handlePrimaryEnd: function () {\n      if (this._flushOnEnd) {\n        this._flush();\n      }\n      this._emitEnd();\n    },\n    _onActivation: function () {\n      this._primary.onAny(this._$handlePrimaryAny);\n      if (this._alive && this._secondary !== null) {\n        this._secondary.onAny(this._$handleSecondaryAny);\n      }\n    },\n    _handlePrimaryValue: function (x) {\n      this._buff.push(x);\n    },\n    _handleSecondaryValue: function () {\n      this._flush();\n    },\n    _handleSecondaryEnd: function () {\n      if (!this._flushOnEnd) {\n        this._emitEnd();\n      }\n    }\n  };\n\n  var S$37 = createStream$1('bufferBy', mixin$29);\n  var P$32 = createProperty$1('bufferBy', mixin$29);\n\n  function bufferBy(primary, secondary, options /* optional */) {\n    return new (primary._ofSameType(S$37, P$32))(primary, secondary, options);\n  }\n\n  var mixin$30 = {\n    _init: function () {\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$flushOnEnd = _ref.flushOnEnd;\n      var flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd;\n      var _ref$flushOnChange = _ref.flushOnChange;\n      var flushOnChange = _ref$flushOnChange === undefined ? false : _ref$flushOnChange;\n\n      this._buff = [];\n      this._flushOnEnd = flushOnEnd;\n      this._flushOnChange = flushOnChange;\n    },\n    _free: function () {\n      this._buff = null;\n    },\n    _flush: function () {\n      if (this._buff !== null) {\n        this._emitValue(this._buff);\n        this._buff = [];\n      }\n    },\n    _handlePrimaryEnd: function () {\n      if (this._flushOnEnd) {\n        this._flush();\n      }\n      this._emitEnd();\n    },\n    _handlePrimaryValue: function (x) {\n      this._buff.push(x);\n      if (this._lastSecondary !== NOTHING && !this._lastSecondary) {\n        this._flush();\n      }\n    },\n    _handleSecondaryEnd: function () {\n      if (!this._flushOnEnd && (this._lastSecondary === NOTHING || this._lastSecondary)) {\n        this._emitEnd();\n      }\n    },\n    _handleSecondaryValue: function (x) {\n      if (this._flushOnChange && !x) {\n        this._flush();\n      }\n\n      // from default _handleSecondaryValue\n      this._lastSecondary = x;\n    }\n  };\n\n  var S$38 = createStream$1('bufferWhileBy', mixin$30);\n  var P$33 = createProperty$1('bufferWhileBy', mixin$30);\n\n  function bufferWhileBy(primary, secondary, options /* optional */) {\n    return new (primary._ofSameType(S$38, P$33))(primary, secondary, options);\n  }\n\n  var f = function () {\n    return false;\n  };\n  var t = function () {\n    return true;\n  };\n\n  function awaiting(a, b) {\n    var result = merge([map$1(a, t), map$1(b, f)]);\n    result = skipDuplicates(result);\n    result = toProperty(result, f);\n    return result.setName(a, 'awaiting');\n  }\n\n  var mixin$31 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleValue: function (x) {\n      var fn = this._fn;\n      var result = fn(x);\n      if (result.convert) {\n        this._emitError(result.error);\n      } else {\n        this._emitValue(x);\n      }\n    }\n  };\n\n  var S$39 = createStream('valuesToErrors', mixin$31);\n  var P$34 = createProperty('valuesToErrors', mixin$31);\n\n  var defFn = function (x) {\n    return { convert: true, error: x };\n  };\n\n  function valuesToErrors(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? defFn : arguments[1];\n\n    return new (obs._ofSameType(S$39, P$34))(obs, { fn: fn });\n  }\n\n  var mixin$32 = {\n    _init: function (_ref) {\n      var fn = _ref.fn;\n\n      this._fn = fn;\n    },\n    _free: function () {\n      this._fn = null;\n    },\n    _handleError: function (x) {\n      var fn = this._fn;\n      var result = fn(x);\n      if (result.convert) {\n        this._emitValue(result.value);\n      } else {\n        this._emitError(x);\n      }\n    }\n  };\n\n  var S$40 = createStream('errorsToValues', mixin$32);\n  var P$35 = createProperty('errorsToValues', mixin$32);\n\n  var defFn$1 = function (x) {\n    return { convert: true, value: x };\n  };\n\n  function errorsToValues(obs) {\n    var fn = arguments.length <= 1 || arguments[1] === undefined ? defFn$1 : arguments[1];\n\n    return new (obs._ofSameType(S$40, P$35))(obs, { fn: fn });\n  }\n\n  var mixin$33 = {\n    _handleError: function (x) {\n      this._emitError(x);\n      this._emitEnd();\n    }\n  };\n\n  var S$41 = createStream('endOnError', mixin$33);\n  var P$36 = createProperty('endOnError', mixin$33);\n\n  function endOnError(obs) {\n    return new (obs._ofSameType(S$41, P$36))(obs);\n  }\n\n  Observable.prototype.toProperty = function (fn) {\n    return toProperty(this, fn);\n  };\n\n  Observable.prototype.changes = function () {\n    return changes(this);\n  };\n\n  Observable.prototype.toPromise = function (Promise) {\n    return toPromise(this, Promise);\n  };\n\n  Observable.prototype.toESObservable = toESObservable;\n  Observable.prototype[symbol_('observable')] = toESObservable;\n\n  Observable.prototype.map = function (fn) {\n    return map$1(this, fn);\n  };\n\n  Observable.prototype.filter = function (fn) {\n    return filter(this, fn);\n  };\n\n  Observable.prototype.take = function (n) {\n    return take(this, n);\n  };\n\n  Observable.prototype.takeErrors = function (n) {\n    return takeErrors(this, n);\n  };\n\n  Observable.prototype.takeWhile = function (fn) {\n    return takeWhile(this, fn);\n  };\n\n  Observable.prototype.last = function () {\n    return last(this);\n  };\n\n  Observable.prototype.skip = function (n) {\n    return skip(this, n);\n  };\n\n  Observable.prototype.skipWhile = function (fn) {\n    return skipWhile(this, fn);\n  };\n\n  Observable.prototype.skipDuplicates = function (fn) {\n    return skipDuplicates(this, fn);\n  };\n\n  Observable.prototype.diff = function (fn, seed) {\n    return diff(this, fn, seed);\n  };\n\n  Observable.prototype.scan = function (fn, seed) {\n    return scan(this, fn, seed);\n  };\n\n  Observable.prototype.flatten = function (fn) {\n    return flatten(this, fn);\n  };\n\n  Observable.prototype.delay = function (wait) {\n    return delay(this, wait);\n  };\n\n  Observable.prototype.throttle = function (wait, options) {\n    return throttle(this, wait, options);\n  };\n\n  Observable.prototype.debounce = function (wait, options) {\n    return debounce(this, wait, options);\n  };\n\n  Observable.prototype.mapErrors = function (fn) {\n    return mapErrors(this, fn);\n  };\n\n  Observable.prototype.filterErrors = function (fn) {\n    return filterErrors(this, fn);\n  };\n\n  Observable.prototype.ignoreValues = function () {\n    return ignoreValues(this);\n  };\n\n  Observable.prototype.ignoreErrors = function () {\n    return ignoreErrors(this);\n  };\n\n  Observable.prototype.ignoreEnd = function () {\n    return ignoreEnd(this);\n  };\n\n  Observable.prototype.beforeEnd = function (fn) {\n    return beforeEnd(this, fn);\n  };\n\n  Observable.prototype.slidingWindow = function (max, min) {\n    return slidingWindow(this, max, min);\n  };\n\n  Observable.prototype.bufferWhile = function (fn, options) {\n    return bufferWhile(this, fn, options);\n  };\n\n  Observable.prototype.bufferWithCount = function (count, options) {\n    return bufferWhile$1(this, count, options);\n  };\n\n  Observable.prototype.bufferWithTimeOrCount = function (wait, count, options) {\n    return bufferWithTimeOrCount(this, wait, count, options);\n  };\n\n  Observable.prototype.transduce = function (transducer) {\n    return transduce(this, transducer);\n  };\n\n  Observable.prototype.withHandler = function (fn) {\n    return withHandler(this, fn);\n  };\n\n  Observable.prototype.combine = function (other, combinator) {\n    return combine([this, other], combinator);\n  };\n\n  Observable.prototype.zip = function (other, combinator) {\n    return zip([this, other], combinator);\n  };\n\n  Observable.prototype.merge = function (other) {\n    return merge([this, other]);\n  };\n\n  Observable.prototype.concat = function (other) {\n    return concat$1([this, other]);\n  };\n\n  var pool = function () {\n    return new Pool();\n  };\n\n  Observable.prototype.flatMap = function (fn) {\n    return new FlatMap(this, fn).setName(this, 'flatMap');\n  };\n  Observable.prototype.flatMapLatest = function (fn) {\n    return new FlatMap(this, fn, { concurLim: 1, drop: 'old' }).setName(this, 'flatMapLatest');\n  };\n  Observable.prototype.flatMapFirst = function (fn) {\n    return new FlatMap(this, fn, { concurLim: 1 }).setName(this, 'flatMapFirst');\n  };\n  Observable.prototype.flatMapConcat = function (fn) {\n    return new FlatMap(this, fn, { queueLim: -1, concurLim: 1 }).setName(this, 'flatMapConcat');\n  };\n  Observable.prototype.flatMapConcurLimit = function (fn, limit) {\n    return new FlatMap(this, fn, { queueLim: -1, concurLim: limit }).setName(this, 'flatMapConcurLimit');\n  };\n\n  Observable.prototype.flatMapErrors = function (fn) {\n    return new FlatMapErrors(this, fn).setName(this, 'flatMapErrors');\n  };\n\n  Observable.prototype.filterBy = function (other) {\n    return filterBy(this, other);\n  };\n\n  Observable.prototype.sampledBy = function (other, combinator) {\n    return sampledBy(this, other, combinator);\n  };\n\n  Observable.prototype.skipUntilBy = function (other) {\n    return skipUntilBy(this, other);\n  };\n\n  Observable.prototype.takeUntilBy = function (other) {\n    return takeUntilBy(this, other);\n  };\n\n  Observable.prototype.bufferBy = function (other, options) {\n    return bufferBy(this, other, options);\n  };\n\n  Observable.prototype.bufferWhileBy = function (other, options) {\n    return bufferWhileBy(this, other, options);\n  };\n\n  // Deprecated\n  // -----------------------------------------------------------------------------\n\n  function warn(msg) {\n    if (Kefir.DEPRECATION_WARNINGS !== false && console && typeof console.warn === 'function') {\n      var msg2 = '\\nHere is an Error object for you containing the call stack:';\n      console.warn(msg, msg2, new Error());\n    }\n  }\n\n  Observable.prototype.awaiting = function (other) {\n    warn('You are using deprecated .awaiting() method, see https://github.com/rpominov/kefir/issues/145');\n    return awaiting(this, other);\n  };\n\n  Observable.prototype.valuesToErrors = function (fn) {\n    warn('You are using deprecated .valuesToErrors() method, see https://github.com/rpominov/kefir/issues/149');\n    return valuesToErrors(this, fn);\n  };\n\n  Observable.prototype.errorsToValues = function (fn) {\n    warn('You are using deprecated .errorsToValues() method, see https://github.com/rpominov/kefir/issues/149');\n    return errorsToValues(this, fn);\n  };\n\n  Observable.prototype.endOnError = function () {\n    warn('You are using deprecated .endOnError() method, see https://github.com/rpominov/kefir/issues/150');\n    return endOnError(this);\n  };\n\n  // Exports\n  // --------------------------------------------------------------------------\n\n  var Kefir = { Observable: Observable, Stream: Stream, Property: Property, never: never, later: later, interval: interval, sequentially: sequentially,\n    fromPoll: fromPoll, withInterval: withInterval, fromCallback: fromCallback, fromNodeCallback: fromNodeCallback, fromEvents: fromEvents, stream: stream,\n    constant: constant, constantError: constantError, fromPromise: fromPromise, fromESObservable: fromESObservable, combine: combine, zip: zip, merge: merge,\n    concat: concat$1, Pool: Pool, pool: pool, repeat: repeat };\n\n  Kefir.Kefir = Kefir;\n\n  exports.Kefir = Kefir;\n  exports.Observable = Observable;\n  exports.Stream = Stream;\n  exports.Property = Property;\n  exports.never = never;\n  exports.later = later;\n  exports.interval = interval;\n  exports.sequentially = sequentially;\n  exports.fromPoll = fromPoll;\n  exports.withInterval = withInterval;\n  exports.fromCallback = fromCallback;\n  exports.fromNodeCallback = fromNodeCallback;\n  exports.fromEvents = fromEvents;\n  exports.stream = stream;\n  exports.constant = constant;\n  exports.constantError = constantError;\n  exports.fromPromise = fromPromise;\n  exports.fromESObservable = fromESObservable;\n  exports.combine = combine;\n  exports.zip = zip;\n  exports.merge = merge;\n  exports.concat = concat$1;\n  exports.Pool = Pool;\n  exports.pool = pool;\n  exports.repeat = repeat;\n  exports['default'] = Kefir;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/kefir/dist/kefir.js\n ** module id = 148\n ** module chunks = 2\n **/","/*!\n * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sun Oct 25 11:23:38 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.9.25\",\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clip(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\treturn {\n\t\tTOLERANCE: 1e-6,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 4e-7,\n\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\tWINDING_EPSILON: 2e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\tCLIPPING_EPSILON: 1e-7,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\teMin = min - EPSILON,\n\t\t\t\teMax = max + EPSILON,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= -2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\tif (R === 0) {\n\t\t\t\t\tx1 = c / a;\n\t\t\t\t\tx2 = -x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = R / a;\n\t\t\t\t\tx2 = c / R;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLoad: {}\n\t\t}\n\t),\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2,\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif ('point' in arg0) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t: this._point,\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn.set(0, 0);\n\t\tthis._handleOut.set(0, 0);\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\tinX = handleIn._x,\n\t\t\tinY = handleIn._y;\n\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\thandleOut.set(inX, inY);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._segment1._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\tthis, curve, [], {});\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, _setHandles) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tsegment1 = this._segment1,\n\t\t\t\tsegment2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut.set(0, 0);\n\t\tthis._segment2._handleIn.set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, point) {\n\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t !== null)\n\t\t\treturn t;\n\t\tvar coords = [point.x, point.y],\n\t\t\troots = [],\n\t\t\tgeomEpsilon = 2e-7;\n\t\tfor (var c = 0; c < 2; c++) {\n\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tt = roots[i];\n\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestParameter: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 4e-7) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\th2y = (v[5] + v[7]) / 2;\n\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tvar path = this._path;\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(l, h1, h2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else if (l.isZero()) {\n\t\t\treturn false;\n\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\tvar div = l.dot(l),\n\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(l, h1, h2) {\n\t\tvar third = l.divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function() {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t};\n\n\tthis.statics[name] = function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t< 1e-7;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t< 1e-7;\n\t}\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t})\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\tvar isZero = t < tMin;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (len) {\n\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\ty /= len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\toverlap) {\n\t\tvar startConnected = param.startConnected,\n\t\t\tendConnected = param.endConnected,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 == null)\n\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\tif (t2 == null)\n\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\tif (renormalize) {\n\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\tt1 = res[0];\n\t\t\t\t\tt2 = res[1];\n\t\t\t\t}\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\tinclude = param.include;\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (++recursion >= 24)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn;\n\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t< 1e-7) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tv1 = c1.getValues();\n\t\t\tv2 = c2.getValues();\n\t\t\taddLocation(locations, param,\n\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t} else if (tDiff > 1e-12) {\n\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= .5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\tvar flip = Curve.isStraight(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\tif (tl !== null) {\n\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\tif (!v2) {\n\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t}\n\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\tmin = Math.min,\n\t\t\t\tmax = Math.max;\n\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\treturn locations;\n\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\tif (overlaps) {\n\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tbefore = locations.length;\n\t\t\t(straight\n\t\t\t\t? addLineIntersection\n\t\t\t\t: straight1 || straight2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (straight && locations.length > before)\n\t\t\t\treturn locations;\n\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\tif (side1 === side2) {\n\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\treturn locations;\n\t\t\t}\n\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\tcx = h1x - p1x,\n\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\tcy = h1y - p1y,\n\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\tbc = by * cx - bx * cy;\n\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\tvar roots = [],\n\t\t\t\t\ttSplit,\n\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\tif (count > 0) {\n\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t};\n\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\n\t\tgetOverlaps: function(v1, v2) {\n\t\t\tvar abs = Math.abs,\n\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight =\tstraight1 && straight2;\n\n\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\treturn x * x + y * y;\n\t\t\t}\n\n\t\t\tif (straight) {\n\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\treturn null;\n\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar v = [v1, v2],\n\t\t\t\tpairs = [];\n\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\tif (t2 != null) {\n\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (pairs.length !== 2) {\n\t\t\t\tpairs = null;\n\t\t\t} else if (!straight) {\n\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\tpairs = null;\n\t\t\t}\n\t\t\treturn pairs;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t_overlap, _distance) {\n\t\tif (parameter > 0.9999996) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\tparameter = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._id = UID.get(CurveLocation);\n\t\tthis._setCurve(curve);\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._prev = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tsegment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (parameter === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (parameter != null) {\n\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t!= null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\tthat._segment = segment;\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = null;\n\t\tif (curve) {\n\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\tif (res)\n\t\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc,\n\t\t\tepsilon = 2e-7;\n\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tabs = Math.abs,\n\t\t\t\tdiff = abs(\n\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\tres = (diff < 4e-7\n\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getParameter(),\n\t\t\tt2 = inter.getParameter(),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = c2.getPrevious(),\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = c4.getPrevious(),\n\t\t\tPI = Math.PI;\n\t\tif (!c1 || !c3)\n\t\t\treturn false;\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t? angle > min && angle < max\n\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t}\n\n\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\n\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t},\n\n\tisOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t2e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 === path2\n\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t: path1._id - path2._id;\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tpath;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== path) {\n\t\t\t\tpath = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\tinclude: include,\n\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\tCurve._getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t{\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.isCrossing();\n\t\t});\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\tundefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tfrom = index + amount - 1 === total ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tif (this._area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcount = segments.length,\n\t\t\t\tlast = count - 1,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn this._area;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (parameter >= tMax) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter >= tMin) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\tthis._clone(path);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = items[i];\n\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce();\n\t\t\tif (path.isEmpty())\n\t\t\t\tchildren.splice(i, 1);\n\t\t}\n\t\tif (children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t}\n\n\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\tvar result = new ctor(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tif (reduce)\n\t\t\tresult = result.reduce();\n\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t? path2 : path1);\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tif (!path1._children && !path1._closed)\n\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar intersections = CurveLocation.expand(\n\t\t\t_path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn _path2 && inter.isOverlap() || inter.isCrossing();\n\t\t\t})\n\t\t);\n\t\tdivideLocations(intersections);\n\n\t\tvar segments = [],\n\t\t\tmonoCurves = [];\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tfor (var i = 0, l = intersections.length; i < l; i++) {\n\t\t\tpropagateWinding(intersections[i]._segment, _path1, _path2,\n\t\t\t\t\tmonoCurves, operation);\n\t\t}\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding == null) {\n\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\toperation);\n\t\t\t}\n\t\t}\n\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\tpath1, path2, true);\n\t}\n\n\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\treturn null;\n\t\tvar _path1 = preparePath(path1, false),\n\t\t\t_path2 = preparePath(path2, false),\n\t\t\tintersections = _path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t\t}),\n\t\t\tsub = operation === 'subtract',\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = intersections.length - 1; i >= 0; i--) {\n\t\t\tvar path = intersections[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn finishBoolean(Group, paths, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._prev;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._prev)\n\t\t\t\tto = to._prev;\n\t\t\tfrom._next = to;\n\t\t\tto._prev = from;\n\t\t}\n\t}\n\n\tfunction divideLocations(locations) {\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tnoHandles = false,\n\t\t\tclearSegments = [],\n\t\t\tprevCurve,\n\t\t\tprevT;\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tt = loc._parameter,\n\t\t\t\torigT = t;\n\t\t\tif (curve !== prevCurve) {\n\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t} else if (prevT > 0) {\n\t\t\t\tt /= prevT;\n\t\t\t}\n\t\t\tvar segment;\n\t\t\tif (t < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\tif (noHandles)\n\t\t\t\t\tclearSegments.push(segment);\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t\tprevCurve = curve;\n\t\t\tprevT = origT;\n\t\t}\n\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\tclearSegments[i].clearHandles();\n\t\t}\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar epsilon = 2e-7,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - epsilon,\n\t\t\t\tyAfter = py + epsilon;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t} else {\n\t\t\tvar xBefore = px - epsilon,\n\t\t\t\txAfter = px + epsilon;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\tvar epsilon = 2e-7,\n\t\t\tchain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twindingSum = 0;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\tvar node = chain[k],\n\t\t\t\t\tcurveLength = node.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\tpath = parent;\n\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tvar winding = Math.round(windingSum / 3);\n\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\tchain[j].segment._winding = winding;\n\t}\n\n\tfunction tracePaths(segments, operation) {\n\t\tvar paths = [],\n\t\t\tstart,\n\t\t\totherStart,\n\t\t\toperator = operators[operation],\n\t\t\toverlapWinding = {\n\t\t\t\tunite: { 1: 2 },\n\t\t\t\tintersect: { 2: 1 }\n\t\t\t}[operation];\n\n\t\tfunction isValid(seg, adjusted) {\n\t\t\tif (seg._visited)\n\t\t\t\treturn false;\n\t\t\tif (!operator)\n\t\t\t\treturn true;\n\t\t\tvar winding = seg._winding,\n\t\t\t\tinter = seg._intersection;\n\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\treturn operator(winding);\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\treturn seg === start || seg === otherStart;\n\t\t}\n\n\t\tfunction findBestIntersection(inter, strict) {\n\t\t\tif (!inter._next)\n\t\t\t\treturn inter;\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t))\n\t\t\t\t\treturn inter;\n\t\t\t\tinter = inter._next;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction findStartSegment(inter, next) {\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment;\n\t\t\t\tif (isStart(seg))\n\t\t\t\t\treturn seg;\n\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false;\n\t\t\tif (!isValid(seg, true))\n\t\t\t\tcontinue;\n\t\t\tstart = otherStart = null;\n\t\t\twhile (!finished) {\n\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\tif (other && isValid(other))\n\t\t\t\t\tseg = other;\n\t\t\t\tif (seg._visited) {\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!path) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tstart = seg;\n\t\t\t\t\totherStart = other;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = seg.getNext();\n\t\t\t\tfinished = isStart(seg);\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else if (path) {\n\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t'length =', path.getLength());\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\tpaths.push(path);\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\tthis, path, true);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar crossings = this.getCrossings();\n\t\t\tif (!crossings.length)\n\t\t\t\treturn this;\n\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\tvar paths = this._children || [this],\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\tthis, null, false);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\troots = [],\n\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\tif (n === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 1e-6)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tDomEvent.add(window, {\n\t\tfocus: function() {\n\t\t\tfocused = true;\n\t\t},\n\t\tblur: function() {\n\t\t\tfocused = false;\n\t\t}\n\t});\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t};\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t};\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar mouseFlags = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\t_installEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_uninstallEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tthis._context = canvas.getContext('2d');\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n},\nnew function() {\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = (function() {\n\tvar exports, define,\n\t\tscope = this;\n!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': 'equals',\n\t\t'!=': 'equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': null\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (handler && value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn scope.acorn.parse(code, options);\n\t}\n\n\tfunction compile(code, url, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\t\turl = url || '';\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar sourceMap = null,\n\t\t\tbrowser = paper.browser,\n\t\t\tversion = browser.versionNumber,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\tif (browser.chrome && version >= 30\n\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\tvar offset = 0;\n\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\tvar mappings = ['AAAA'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\tsourceMap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url]\n\t\t\t};\n\t\t\tvar source = options.source || !url && code;\n\t\t\tif (source)\n\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t}\n\t\twalkAST(parse(code, { ranges: true }));\n\t\tif (sourceMap) {\n\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn code;\n\t}\n\n\tfunction execute(code, scope, url, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t? new Tool()\n\t\t\t\t\t: null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc;\n\t\tcode = compile(code, url, options);\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar browser = paper.browser;\n\t\tif (browser.chrome || browser.firefox) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (browser.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.update();\n\t\t}\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t}, async);\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (document.readyState === 'complete') {\n\t\tsetTimeout(loadAll);\n\t} else {\n\t\tDomEvent.add(window, { load: loadAll });\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}).call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/paper/dist/paper-full.js\n ** module id = 165\n ** module chunks = 2\n **/","(function () {\n  'use strict';\n\n  var ElementPrototype = Element.prototype;\n\n  /**\n   * Detect full support\n   */\n\n  var isSupported = ElementPrototype.after &&\n      ElementPrototype.append &&\n      ElementPrototype.before &&\n      ElementPrototype.prepend &&\n      ElementPrototype.remove &&\n      ElementPrototype.replace;\n\n  if (isSupported) { return; }\n\n  /**\n   * Apply mutation shims\n   */\n\n  function toNode(node) {\n    return typeof node === 'string' ? document.createTextNode(node) : node;\n  }\n\n  function mutationMacro(nodes) {\n    var fragment, i, len;\n    if (nodes) { len = nodes.length; }\n\n    if (!len) {\n      throw new Error('No node was specified (DOM Exception 8)');\n    }\n\n    if (len === 1) {\n      return toNode(nodes[0]);\n    } else {\n      fragment = document.createDocumentFragment();\n      for (i = 0; i < len; i++) {\n        fragment.appendChild(toNode(nodes[i]));\n      }\n      return fragment;\n    }\n  }\n\n  ElementPrototype.prepend = function prepend() {\n    this.insertBefore(mutationMacro(arguments), this.firstChild);\n  };\n\n  ElementPrototype.append = function append() {\n    this.appendChild(mutationMacro(arguments));\n  };\n\n  ElementPrototype.before = function before() {\n    var parentNode = this.parentNode;\n    if (parentNode) {\n      parentNode.insertBefore(mutationMacro(arguments), this);\n    }\n  };\n\n  ElementPrototype.after = function after() {\n    var parentNode = this.parentNode;\n    if (parentNode) {\n      parentNode.insertBefore(mutationMacro(arguments), this.nextSibling);\n    }\n  };\n\n  ElementPrototype.replace = function replace() {\n    var parentNode = this.parentNode;\n    if (parentNode) {\n      parentNode.replaceChild(mutationMacro(arguments), this);\n    }\n  };\n\n  /**\n   * This method is defined with bracket notation to avoid conflicting with the\n   * definition of HTMLSelectElement.\n   */\n  ElementPrototype['remove'] = function remove() {\n    var parentNode = this.parentNode;\n    if (parentNode) {\n      parentNode.removeChild(this);\n    }\n  };\n}());\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/Element.mutation.js\n **/","import paper from \"paper\"\n\nconst vol_ctrl_width = 60\n\nexport default class VolumeCtrl {\n\tconstructor(volume){\n\t\tthis.size = {\n\t\t\tx: 20,\n\t\t\ty: 20,\n\t\t\tw: vol_ctrl_width,\n\t\t\th: 3*vol_ctrl_width\n\t\t}\n\t\tlet size = this.size\n\n\t\tthis.path = {\n\t\t\tmw: 23, // margin width,x\n\t\t\tmh: 15 // margin height,y\n\t\t}\n\t\tlet path = this.path\n\n\n\t\tthis.root = new paper.Group()\n\n\t\tlet rect_out_box = new paper.Rectangle(size.x,size.y, size.w, size.h)\n\t\tvar box = new paper.Shape.Rectangle(rect_out_box)\n\t\tbox.fillColor = \"black\"\n\n\t\tthis.root.addChild(box)\n\n\t\tlet rect_blue_path = new paper.Rectangle(size.x + path.mw, size.y + path.mh, size.w - (path.mw*2), (size.h - 20) - (path.mh*2))\n\t\tthis.path_blue = new paper.Shape.Rectangle(rect_blue_path)\n\t\tthis.path_blue.fillColor = \"#000080\"\n\n\t\tthis.root.addChild(this.path_blue)\n\n\n\t\tvar vol = ((volume * 100) | 0)\n\n\n\t\tlet rect_white_path = new paper.Rectangle(size.x + path.mw, size.y + path.mh, size.w - (path.mw*2), (((size.h - 20) - (path.mh*2)) * (1 - volume)) | 0)\n\t\tthis.path_white = new paper.Shape.Rectangle(rect_white_path)\n\t\tthis.path_white.fillColor = \"white\"\n\n\t\tthis.root.addChild(this.path_white)\n\n\n\t\tthis.text = new paper.PointText({\n\t\t\tpoint: new paper.Point(size.x + (size.w/2), size.w + ((size.h - 25) - (path.mh*2))),\n\t\t\tcontent: vol + \"%\",\n\t\t\tfillColor: \"white\",\n\t\t\tfontFamily: \"Verdana\",\n\t\t\tfontWeight: \"bold\",\n\t\t\tfontSize: 13,\n\t\t\tjustification: \"center\"\n\t\t})\n\n\t\tthis.root.addChild(this.text) \n\n\t\tthis.root.visible = false\n\n\t\twindow.vcg = this.root\n\n\t\tvar black_line = new paper.Shape.Rectangle(new paper.Rectangle(size.x + path.mw, size.y + path.mh, size.w - (path.mw*2), 1))\n\t\tblack_line.fillColor = \"black\"\n\n\t\tthis.root.addChild(black_line) \n\n\t\tpaper.view.draw()\n\n\t}\n\n\tupdate(value){\n\t\tthis.root.visible = true\n\t\tclearTimeout(this.timout)\n\n\t\tlet vol = ((value * 100) | 0)\n\t\tlet bounds = new paper.Rectangle(this.size.x + this.path.mw, this.size.y + this.path.mh, this.size.w - (this.path.mw*2), (((this.size.h - 20) - (this.path.mh*2)) * (1 - value)) | 0)\n\n\t\tif(bounds.height < 1) {\n\t\t\tbounds.height = 1\n\t\t}\n\n\t\tthis.path_white.setBounds(bounds)\n\t\tthis.text.content = vol + \"%\"\n\t\tpaper.view.draw()\n\n\t\tthis.timout = setTimeout(() => {\n\t\t\tthis.root.visible = false\n\t\t\tpaper.view.draw()\n\t\t}, 500)\n\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/VolumeCtrl.js\n **/","import R from \"ramda\"\n\nvar participants = [\n\t\"Graphene\",\n\t\"Carbon\"\n]\n\nvar dialogue = [\n\t{\n\t\tname: \"intro_dialog\",\n\t\tarray: [\n\t\t\t{ //loc: 0\n\t\t\t\t//say: \"Loerm ipsum\"\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Кой си ти?\",\n\t\t\t\tloc: 1\n\t\t\t},\n\t\t\t{ //loc: 1\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Аз съм материал създаден от един ред въглеродни атоми и имам уникални свойства!\",\n\t\t\t\tloc: 2\n\t\t\t},\n\t\t\t{ //loc: 2\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Хаха, за много по-полезен ли се мислиш?\",\n\t\t\t\tloc: 3\n\t\t\t},\n\t\t\t{ //loc: 3\n\t\t\t\twho: \"Графен\",\n\t\t\t\tanswer: [\n\t\t\t\t\t{ say: \"Покажи свойствата си.\", loc: 4 },\n\t\t\t\t\t{ say: \"Опитай да решиш всичко с думи.\", loc: 6 /* scene: \"use_words\" */},\n\t\t\t\t\t{ say: \"Игнорирай го.\", loc: 9}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ //loc: 4\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Да.\",\n\t\t\t\tloc: 5\n\t\t\t},\n\t\t\t{ //loc: 5\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Не мисля, че е възможно да имаш по-добри характеристики от моите.\",\n\t\t\t\tloc: 13\n\t\t\t},\n\t\t\t{ //loc: 6\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Няма смисъл да спорим.\",\n\t\t\t\tloc: 7\n\n\t\t\t},\t\t\t\n\t\t\t{ //loc: 7\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Да прав си!\",\n\t\t\t\tloc: 8\n\t\t\t},\n\t\t\t{ //loc: 8\n\t\t\t\twho: \"Графен\",\t\t\t\t\n\t\t\t\tanswer: [\n\t\t\t\t\t{ say: \"Остави го да говори.\", loc: 16},\n\t\t\t\t\t{ say: \"Все пак му покажи възможностите си.\", loc: 18}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ //loc: 9\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Защо ме игнорираш, да не ме имаш за много по-слаб?\",\n\t\t\t\tloc: 10\n\t\t\t},\n\t\t\t{ //loc: 10\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Сигурно те е страх, че не можеш да покажеш нищо кой знае какво!?\",\n\t\t\t\tloc: 11\n\t\t\t},\n\t\t\t{ //loc: 11\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Не искам да навлизам в излишни конфликти.\",\n\t\t\t\tloc: 12\n\t\t\t},\n\t\t\t{  //loc: 12\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Така ли? Покажи ми какво можеш тогава.\",\n\t\t\t\tloc: 13 //\"conductivity\"\n\t\t\t},\n\t\t\t{ //loc: 13\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay:  \"С моята невероятната здравина от 1100 GPa, ще спра метеорита летящ към земята.\", //\"Сега не е времето за това!! Виж метеорит е на път да се разбие в земята, трябва да го спрем!!!\",\n\t\t\t\tloc: 14\n\t\t\t},\n\t\t\t{  //loc: 14\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Не ми трябваш, аз мога да се справя сам.\",\n\t\t\t\tscene: \"mech_force\"\n\t\t\t},\n\t\t\t{ //loc: 15\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"...\",\n\t\t\t\tscene: \"mech_force\"\n\t\t\t},\n\t\t\t{ //loc: 16\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Почуствах се застрашен. Не искам да повярвам, че има по-полезна вариация на въглерода от мен.\",\n\t\t\t\tloc: 17\n\t\t\t},\t\t\t\n\t\t\t{ //loc: 17\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Аз съм здрав, лек и всичко което някой би искал.\",\n\t\t\t\tloc: 18\n\t\t\t},\n\t\t\t{ //loc: 18\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Ами да, но е факт, че аз съм по-електропроводим, здрав и с по-голяма енергийна плътност\",\n\t\t\t\tloc: 19\n\t\t\t},\n\t\t\t{ //loc: 19\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Разбира се!\",\n\t\t\t\tloc: 20\n\t\t\t},\n\t\t\t{ //loc: 20\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Например благодарение на моята електропроводимост от\\n 1738 siemens/m мога да заредя телефон за секунди!\",\n\t\t\t\tscene: \"conductivity_good\" \n\t\t\t},\n\t\t\t{ //loc: 21\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"С моята невероятната здравина от 1100 GPa ще спра метеорита летящ към земята!\",\n\t\t\t\tloc: 13 \n\t\t\t},\n\t\t]\n\t},\n\t{\n\t\tname: \"asteroid_dialog\",\n\t\tarray: [\n\t\t\t{ //loc: 0\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Просто изкара късмет, че нямах време да направя стената по-голяма.\",\n\t\t\t\tloc: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Дали? Или просто аз съм по-здравия?\",\n\t\t\t\tloc: 2\n\t\t\t},\n\t\t\t{ //loc: 2\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Да видим другите ти свойства тогава.\",\n\t\t\t\tloc: 3\n\t\t\t},\n\t\t\t{ //loc: 3\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Както пожелаеш.\",\n\t\t\t\tscene: \"compete_hard\" \n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"compete_hard_dialog\",\n\t\tarray: [\n\t\t\t{ //loc: 0\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Чакам. \",\n\t\t\t\tloc: 1\n\t\t\t},\n\t\t\t{ //loc: 1\n\t\t\t\twho: \"Графен\",\t\t\n\t\t\t\tanswer: [\n\t\t\t\t\t{ say: \"Покажи - електропроводимост\\n от 1738 siemens/m.\", loc: 2 },\n\t\t\t\t\t{ say: \"Покажи - енергийна плътност\\n от 75 F/g и 31·9 Wh/kg.\", loc: 3 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ //loc: 2\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"Ето виж!\",\n\t\t\t\tscene: \"conductivity\"\n\t\t\t},\n\t\t\t{ //loc: 3\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"A знаеше ли, че бaтерия и акумулатор, направена с моята помощ,\\n издържа в пъти повече от нормална батерия?\",\n\t\t\t\tscene: \"electrical_density\"\n\t\t\t}\n\n\t\t]\n\t},\n\t\t{\n\t\tname: \"good_dialog\",\n\t\tarray: [\n\t\t\t{ //loc: 0\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"A също така, бaтерия и акумулатор, направена с моята помощ,\\n издържа в пъти повече от нормална батерия.\",\n\t\t\t\tscene: \"electrical_density_good\"\n\t\t\t}\n\n\t\t]\n\t},\n\t{\n\t\tname: \"ed_c_dialog\",\n\t\tarray: [\n\t\t\t{ //loc: 0\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"А виж какво мога, благодарение на моята електропроводимост от 1738 siemens/m.\",\n\t\t\t\tscene: \"conductivity_2\"\n\t\t\t},\n\t\t]\n\t},\n\t{\n\t\tname: \"c_c_dialog\",\n\t\tarray: [\n\t\t\t{ //loc: 0\n\t\t\t\twho: \"Графен\",\n\t\t\t\tsay: \"А виж какво мога, благодарение на моята енергийна плътност от 75 F/g и 31·9 Wh/kg.\\n Заради нея, могат да се направят много по издържливи батерии и акумулатори.\",\n\t\t\t\tscene: \"electrical_density_2\"\n\t\t\t},\n\t\t]\n\t},\n\t{\n\t\tname: \"ending_dialog_1\",\n\t\tarray: [\n\t\t\t{\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Добре признавам, че си по-полезен в повечето ситуации!\",\n\t\t\t\tscene: \"end_true\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ending_dialog_2\",\n\t\tarray: [\n\t\t\t{\n\t\t\t\twho: \"Карбон\",\n\t\t\t\tsay: \"Разбирам и признавам, че си по-полезен!\",\n\t\t\t\tscene: \"end_true\"\n\t\t\t}\n\t\t]\n\t}\n\n]\n\n\nwindow.d = dialogue\n\nexport default class Dialogue {\n\tconstructor(){\n\t\tthis.dialogue = dialogue;\n\t}\n\n\tselect(name){\n\t\tthis.currentDialogue = R.find(R.propEq(\"name\", name))(this.dialogue)\n\t\tthis.currentPhrase = this.currentDialogue.array[0]\n\t}\n\n\tphrase(loc){\n\t\treturn this.currentDialogue.array[loc];\n\t}\n\n\n\tchoices(){\n\t\treturn this.currentPhrase.answer.map(o => o.say);\n\t}\n\n\thasChoices(){\n\t\tif(this.currentPhrase){\n\t\t\treturn this.currentPhrase.answer != null\n\t\t}\n\t\treturn false\n\t}\n\n\tsay(){\n\t\treturn this.currentPhrase\n\t}\n\n\thasNext(){\n\t\treturn this.loc < (this.currentDialogue.array.length() - 1)\n\t}\n\n\tnext(choice){\n\t\tif(this.currentPhrase.answer){\n\t\t\tif(arguments.length > 0){\n\t\t\t\tif(choice <= this.currentPhrase.answer.length){\n\t\t\t\t\tif(this.currentPhrase.answer[choice].scene){\n\t\t\t\t\t\treturn this.currentPhrase.answer[choice].scene\n\t\t\t\t\t}\n\t\t\t\t\tthis.loc = this.currentPhrase.answer[choice].loc\n\t\t\t\t\tthis.currentPhrase = this.phrase(this.currentPhrase.answer[choice].loc);\n\n\t\t\t\t}else{\n\t\t\t\t\tthrow \"This answer does not exists\"\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthrow \"This transition to the next phrase requires an argument\"\n\t\t\t}\n\t\t}else if(this.currentPhrase.loc){\n\t\t\tthis.loc = this.currentPhrase.loc\n\t\t\tthis.currentPhrase = this.phrase(this.currentPhrase.loc);\n\t\t}else if(this.currentPhrase.scene){\n\t\t\treturn this.currentPhrase.scene\n\t\t}\n\t\t\n\t\tconsole.log(this.loc)\n\n\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/dialogue.js\n **/","import R from \"ramda\"\nimport Dialogue from \"./dialogue\"\n\nvar story = [\n\t{\n\t\t\"scene\": \"intro\",\n\t\t\"src\": \"vid/Intro.mp4\",\n\t\t\"next\": \"conflict\"\n\t},\t\n\t{\n\t\t\"scene\": \"conflict\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"intro_dialog\",\n\t},\n\t{\n\t\t\"scene\": \"mech_force\",\n\t\t\"src\": \"vid/Meteor.mp4\",\n\t\t\"next\": \"mech_force_dialog\"\n\t},\n\t{\n\t\t\"scene\": \"mech_force_dialog\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"asteroid_dialog\",\n\t},\n\t{\n\t\t\"scene\": \"compete_kind\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"compete_kind_dialog\"\n\t},\n\t{\n\t\t\"scene\": \"compete_hard\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"compete_hard_dialog\"\n\t},\n\t{\n\t\t\"scene\": \"electrical_density\",\n\t\t\"src\": \"vid/Cars.mp4\",\n\t\t\"next\": \"ed_dialog\"\n\n\t},\n\t{\n\t\t\"scene\": \"conductivity\",\n\t\t\"src\": \"vid/Phone.mp4\",\n\t\t\"next\": \"c_dialog\"\n\t},\n\t{\n\t\t\"scene\": \"ed_dialog\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"ed_c_dialog\"\n\t},\t\n\t{\n\t\t\"scene\": \"c_dialog\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"c_c_dialog\"\n\t},\n\t\t{\n\t\t\"scene\": \"electrical_density_2\",\n\t\t\"src\": \"vid/Cars.mp4\",\n\t\t\"next\": \"end1\"\n\n\t},\n\t{\n\t\t\"scene\": \"conductivity_2\",\n\t\t\"src\": \"vid/Phone.mp4\",\n\t\t\"next\": \"end1\"\n\t},\n\n\t{\n\t\t\"scene\": \"electrical_density_good\",\n\t\t\"src\": \"vid/Cars.mp4\",\n\t\t\"next\": \"end2\"\n\n\t},\n\t{\n\t\t\"scene\": \"conductivity_good\",\n\t\t\"src\": \"vid/Phone.mp4\",\n\t\t\"next\": \"good_mid\"\n\t},\n\n\t{\n\t\t\"scene\": \"good_mid\",\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"good_dialog\"\n\t},\n\n\t{\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"scene\": \"end1\",\n\t\t\"dialogue\": \"ending_dialog_1\"\n\t},\n\t{\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"dialogue\": \"ending_dialog_2\",\n\t\t\"scene\": \"end2\"\n\t},\n\t{\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"scene\": \"end_true\",\n\t\t\"next\": \"test\"\n\t},\n\t{\n\t\t\"src\": \"vid/Background.mp4\",\n\t\t\"scene\": \"test\"\n\t}\t\n]\n\n\n\nwindow.s = story\n\nvar cache = []\n\nfunction createVideo(element){\n\tvar item = R.find(R.propEq(\"src\", element.src))(cache)\n\tif(item != null){\n\t\telement.video = item.video\n\t}else{\n\t\tlet vid = document.createElement(\"video\")\n\t\tif(element.src == \"vid/Background.mp4\"){\n\t\t\tvid.loop = true;\n\t\t}\n\t\tvid.src = element.src;\n\t\tcache.push({src: element.src, video: vid})\n\t\telement.video = vid;\n\t}\n\t\n}\n\nexport default class Story {\n\tconstructor(){\n\t\tthis.story = story;\n\t\tthis.showDialogue = false;\n\t\tthis.dialogue = new Dialogue();\n\t\tthis.current = this.story[0];\n\t\tthis.story.forEach(createVideo)\n\t\tconsole.log(cache)\n\t}\n\n\tdefaultVideo(){\n\t\treturn R.find(R.propEq(\"src\", \"vid/Background.mp4\"))(cache)\n\t}\n\n\tscene(name){\n\t\treturn R.find(R.propEq(\"scene\", name))(this.story)\n\t}\n\n\texists(scene){\n\t\treturn this.scene(scene) != null\n\t}\n\n\tchoices(){\n\t\tif(this.current.dialogue != null){\n\t\t\tif(this.dialogue.hasChoices()){\n\t\t\t\treturn this.dialogue.choices()\n\t\t\t}else{\n\t\t\t\treturn this.dialogue.say()\n\t\t\t}\n\t\t}\n\t\tif(this.current.choice != null){\n\t\t\treturn this.current.choice.map(o => o.show)\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn []\n\t\t}\n\t}\n\n\thasChoices(){\n\t\treturn this.current.choice != null || this.dialogue.hasChoices()\n\t}\n\n\n\tsetHasDialogue(bool /* bool */){\n\t\tthis.showDialogue = bool\n\t}\n\n\thasDialogue(){\n\t\treturn this.showDialogue\n\t}\n\n\tneededVideos(){\n\t\tif(this.current.choice){\n\t\t\treturn this.current.choice.map((e) => this.scene(e.scene))\n\t\t}else{\n\t\t\treturn [ this.scene(this.current.next) ]\n\t\t}\n\t}\n\n\t//events for the scene\n\n\tonBefore(scene, fn){\n\t\tif(this.exists(scene)){\n\t\t\tthis.scene(scene).onBefore = fn\n\t\t}\n\t}\n\n\toffBefore(scene){\n\t\tif(this.exists(scene)){\n\t\t\tdelete this.scene(scene).onBefore\n\t\t}\n\t}\n\n\tonAfter(scene, fn){\n\t\tif(this.exists(scene)){\n\t\t\tthis.scene(scene).onAfter = fn\n\t\t}\n\t}\n\n\toffAfetr(scene){\n\t\tif(this.exists(scene)){\n\t\t\tdelete this.scene(scene).onAfter\n\t\t}\n\t}\n\n\n\n\tswitchTo(scene){\n\t\tif(scene != null){\n\t\t\tif(this.current.onAfter != null){ // calls onAfter just before switching the video\n\t\t\t\tthis.current.onAfter()\n\t\t\t}\n\n\t\t\tthis.current = this.scene(scene); // switch the video with the next one\n\n\t\t\tif(this.current.dialogue != null){\n\t\t\t\tthis.dialogue.select(this.current.dialogue)\n\t\t\t\tthis.showDialogue = true;\n\t\t\t}else{\n\t\t\t\tthis.showDialogue = false;\n\t\t\t}\n\n\t\t\tif(this.current.onBefore != null){ // call onBefore for the the next video \n\t\t\t\tthis.current.onBefore()\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tnext(choice){\n\t\tif(this.current.dialogue != null){\n\t\t\tvar scene = this.dialogue.next(choice)\n\t\t\tthis.switchTo(scene)\n\t\t\n\t\t}else{\n\t\t\tthis.switchTo(this.current.next)\n\n\t\t}\n\n\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./js/story.js\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body,html{margin:0;background-color:#000;overflow:hidden;height:100%}canvas[resize]{width:100%;height:100%}video{width:100%}.draw{position:absolute;top:0;left:0}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/postcss-loader!./css/global.css\n ** module id = 257\n ** module chunks = 2\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Atom = exports.LensedAtom = exports.AbstractMutable = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _kefir = require(\"kefir\");\n\nvar _kefir2 = _interopRequireDefault(_kefir);\n\nvar _partial = require(\"partial.lenses\");\n\nvar _partial2 = _interopRequireDefault(_partial);\n\nvar _ramda = require(\"ramda\");\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n//\n\nvar AbstractMutable = exports.AbstractMutable = function (_Kefir$Property) {\n  _inherits(AbstractMutable, _Kefir$Property);\n\n  function AbstractMutable() {\n    _classCallCheck(this, AbstractMutable);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(AbstractMutable).apply(this, arguments));\n  }\n\n  _createClass(AbstractMutable, [{\n    key: \"set\",\n    value: function set(value) {\n      this.modify(function () {\n        return value;\n      });\n    }\n  }, {\n    key: \"lens\",\n    value: function lens(l) {\n      for (var _len = arguments.length, ls = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        ls[_key - 1] = arguments[_key];\n      }\n\n      return new LensedAtom(this, ls.length === 0 ? l : _partial2.default.apply(undefined, [l].concat(ls)));\n    }\n  }, {\n    key: \"view\",\n    value: function view(l) {\n      for (var _len2 = arguments.length, ls = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        ls[_key2 - 1] = arguments[_key2];\n      }\n\n      return this.lens.apply(this, [l].concat(ls));\n    }\n  }, {\n    key: \"_maybeEmitValue\",\n    value: function _maybeEmitValue(next) {\n      var prev = this._currentEvent;\n      if (!prev || !_ramda2.default.equals(prev.value, next)) this._emitValue(next);\n    }\n  }]);\n\n  return AbstractMutable;\n}(_kefir2.default.Property);\n\n//\n\nvar LensedAtom = exports.LensedAtom = function (_AbstractMutable) {\n  _inherits(LensedAtom, _AbstractMutable);\n\n  function LensedAtom(source, lens) {\n    _classCallCheck(this, LensedAtom);\n\n    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(LensedAtom).call(this));\n\n    _this2._source = source;\n    _this2._lens = lens;\n    _this2._$handleValue = null;\n    return _this2;\n  }\n\n  _createClass(LensedAtom, [{\n    key: \"get\",\n    value: function get() {\n      return _partial2.default.view(this._lens, this._source.get());\n    }\n  }, {\n    key: \"modify\",\n    value: function modify(fn) {\n      this._source.modify(_partial2.default.over(this._lens, fn));\n    }\n  }, {\n    key: \"_handleValue\",\n    value: function _handleValue(context) {\n      this._maybeEmitValue(_partial2.default.view(this._lens, context));\n    }\n  }, {\n    key: \"_onActivation\",\n    value: function _onActivation() {\n      var _this3 = this;\n\n      var handleValue = function handleValue(value) {\n        return _this3._handleValue(value);\n      };\n      this._$handleValue = handleValue;\n      this._source.onValue(handleValue);\n    }\n  }, {\n    key: \"_onDeactivation\",\n    value: function _onDeactivation() {\n      this._source.offValue(this._$handleValue);\n      this._$handleValue = null;\n      this._currentEvent = null;\n    }\n  }]);\n\n  return LensedAtom;\n}(AbstractMutable);\n\n//\n\nvar Atom = exports.Atom = function (_AbstractMutable2) {\n  _inherits(Atom, _AbstractMutable2);\n\n  function Atom(value) {\n    _classCallCheck(this, Atom);\n\n    var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(Atom).call(this));\n\n    _this4._emitValue(value);\n    return _this4;\n  }\n\n  _createClass(Atom, [{\n    key: \"get\",\n    value: function get() {\n      return this._currentEvent.value;\n    }\n  }, {\n    key: \"modify\",\n    value: function modify(fn) {\n      this._maybeEmitValue(fn(this.get()));\n    }\n  }]);\n\n  return Atom;\n}(AbstractMutable);\n\n//\n\nexports.default = function (value) {\n  return new Atom(value);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9rZWZpci5hdG9tLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFNYTs7Ozs7Ozs7Ozs7d0JBQ1AsT0FBTztBQUNULFdBQUssTUFBTCxDQUFZO2VBQU07T0FBTixDQUFaLENBRFM7Ozs7eUJBR04sR0FBVTt3Q0FBSjs7T0FBSTs7QUFDYixhQUFPLElBQUksVUFBSixDQUFlLElBQWYsRUFBcUIsR0FBRyxNQUFILEtBQWMsQ0FBZCxHQUFrQixDQUFsQixHQUFzQixvQ0FBRSxVQUFNLEdBQVIsQ0FBdEIsQ0FBNUIsQ0FEYTs7Ozt5QkFHVixHQUFVO3lDQUFKOztPQUFJOztBQUNiLGFBQU8sS0FBSyxJQUFMLGNBQVUsVUFBTSxHQUFoQixDQUFQLENBRGE7Ozs7b0NBR0MsTUFBTTtBQUNwQixVQUFNLE9BQU8sS0FBSyxhQUFMLENBRE87QUFFcEIsVUFBSSxDQUFDLElBQUQsSUFBUyxDQUFDLGdCQUFFLE1BQUYsQ0FBUyxLQUFLLEtBQUwsRUFBWSxJQUFyQixDQUFELEVBQ1gsS0FBSyxVQUFMLENBQWdCLElBQWhCLEVBREY7Ozs7U0FaUztFQUF3QixnQkFBTSxRQUFOOzs7O0lBbUJ4Qjs7O0FBQ1gsV0FEVyxVQUNYLENBQVksTUFBWixFQUFvQixJQUFwQixFQUEwQjswQkFEZixZQUNlOzt3RUFEZix3QkFDZTs7QUFFeEIsV0FBSyxPQUFMLEdBQWUsTUFBZixDQUZ3QjtBQUd4QixXQUFLLEtBQUwsR0FBYSxJQUFiLENBSHdCO0FBSXhCLFdBQUssYUFBTCxHQUFxQixJQUFyQixDQUp3Qjs7R0FBMUI7O2VBRFc7OzBCQU9MO0FBQ0osYUFBTyxrQkFBRSxJQUFGLENBQU8sS0FBSyxLQUFMLEVBQVksS0FBSyxPQUFMLENBQWEsR0FBYixFQUFuQixDQUFQLENBREk7Ozs7MkJBR0MsSUFBSTtBQUNULFdBQUssT0FBTCxDQUFhLE1BQWIsQ0FBb0Isa0JBQUUsSUFBRixDQUFPLEtBQUssS0FBTCxFQUFZLEVBQW5CLENBQXBCLEVBRFM7Ozs7aUNBR0UsU0FBUztBQUNwQixXQUFLLGVBQUwsQ0FBcUIsa0JBQUUsSUFBRixDQUFPLEtBQUssS0FBTCxFQUFZLE9BQW5CLENBQXJCLEVBRG9COzs7O29DQUdOOzs7QUFDZCxVQUFNLGNBQWMsU0FBZCxXQUFjO2VBQVMsT0FBSyxZQUFMLENBQWtCLEtBQWxCO09BQVQsQ0FETjtBQUVkLFdBQUssYUFBTCxHQUFxQixXQUFyQixDQUZjO0FBR2QsV0FBSyxPQUFMLENBQWEsT0FBYixDQUFxQixXQUFyQixFQUhjOzs7O3NDQUtFO0FBQ2hCLFdBQUssT0FBTCxDQUFhLFFBQWIsQ0FBc0IsS0FBSyxhQUFMLENBQXRCLENBRGdCO0FBRWhCLFdBQUssYUFBTCxHQUFxQixJQUFyQixDQUZnQjtBQUdoQixXQUFLLGFBQUwsR0FBcUIsSUFBckIsQ0FIZ0I7Ozs7U0FyQlA7RUFBbUI7Ozs7SUE4Qm5COzs7QUFDWCxXQURXLElBQ1gsQ0FBWSxLQUFaLEVBQW1COzBCQURSLE1BQ1E7O3dFQURSLGtCQUNROztBQUVqQixXQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsRUFGaUI7O0dBQW5COztlQURXOzswQkFLTDtBQUNKLGFBQU8sS0FBSyxhQUFMLENBQW1CLEtBQW5CLENBREg7Ozs7MkJBR0MsSUFBSTtBQUNULFdBQUssZUFBTCxDQUFxQixHQUFHLEtBQUssR0FBTCxFQUFILENBQXJCLEVBRFM7Ozs7U0FSQTtFQUFhOzs7O2tCQWVYO1NBQVMsSUFBSSxJQUFKLENBQVMsS0FBVDtDQUFUIiwiZmlsZSI6ImtlZmlyLmF0b20uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgS2VmaXIgZnJvbSBcImtlZmlyXCJcbmltcG9ydCBMICAgICBmcm9tIFwicGFydGlhbC5sZW5zZXNcIlxuaW1wb3J0IFIgICAgIGZyb20gXCJyYW1kYVwiXG5cbi8vXG5cbmV4cG9ydCBjbGFzcyBBYnN0cmFjdE11dGFibGUgZXh0ZW5kcyBLZWZpci5Qcm9wZXJ0eSB7XG4gIHNldCh2YWx1ZSkge1xuICAgIHRoaXMubW9kaWZ5KCgpID0+IHZhbHVlKVxuICB9XG4gIGxlbnMobCwgLi4ubHMpIHtcbiAgICByZXR1cm4gbmV3IExlbnNlZEF0b20odGhpcywgbHMubGVuZ3RoID09PSAwID8gbCA6IEwobCwgLi4ubHMpKVxuICB9XG4gIHZpZXcobCwgLi4ubHMpIHtcbiAgICByZXR1cm4gdGhpcy5sZW5zKGwsIC4uLmxzKVxuICB9XG4gIF9tYXliZUVtaXRWYWx1ZShuZXh0KSB7XG4gICAgY29uc3QgcHJldiA9IHRoaXMuX2N1cnJlbnRFdmVudFxuICAgIGlmICghcHJldiB8fCAhUi5lcXVhbHMocHJldi52YWx1ZSwgbmV4dCkpXG4gICAgICB0aGlzLl9lbWl0VmFsdWUobmV4dClcbiAgfVxufVxuXG4vL1xuXG5leHBvcnQgY2xhc3MgTGVuc2VkQXRvbSBleHRlbmRzIEFic3RyYWN0TXV0YWJsZSB7XG4gIGNvbnN0cnVjdG9yKHNvdXJjZSwgbGVucykge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2VcbiAgICB0aGlzLl9sZW5zID0gbGVuc1xuICAgIHRoaXMuXyRoYW5kbGVWYWx1ZSA9IG51bGxcbiAgfVxuICBnZXQoKSB7XG4gICAgcmV0dXJuIEwudmlldyh0aGlzLl9sZW5zLCB0aGlzLl9zb3VyY2UuZ2V0KCkpXG4gIH1cbiAgbW9kaWZ5KGZuKSB7XG4gICAgdGhpcy5fc291cmNlLm1vZGlmeShMLm92ZXIodGhpcy5fbGVucywgZm4pKVxuICB9XG4gIF9oYW5kbGVWYWx1ZShjb250ZXh0KSB7XG4gICAgdGhpcy5fbWF5YmVFbWl0VmFsdWUoTC52aWV3KHRoaXMuX2xlbnMsIGNvbnRleHQpKVxuICB9XG4gIF9vbkFjdGl2YXRpb24oKSB7XG4gICAgY29uc3QgaGFuZGxlVmFsdWUgPSB2YWx1ZSA9PiB0aGlzLl9oYW5kbGVWYWx1ZSh2YWx1ZSlcbiAgICB0aGlzLl8kaGFuZGxlVmFsdWUgPSBoYW5kbGVWYWx1ZVxuICAgIHRoaXMuX3NvdXJjZS5vblZhbHVlKGhhbmRsZVZhbHVlKVxuICB9XG4gIF9vbkRlYWN0aXZhdGlvbigpIHtcbiAgICB0aGlzLl9zb3VyY2Uub2ZmVmFsdWUodGhpcy5fJGhhbmRsZVZhbHVlKVxuICAgIHRoaXMuXyRoYW5kbGVWYWx1ZSA9IG51bGxcbiAgICB0aGlzLl9jdXJyZW50RXZlbnQgPSBudWxsXG4gIH1cbn1cblxuLy9cblxuZXhwb3J0IGNsYXNzIEF0b20gZXh0ZW5kcyBBYnN0cmFjdE11dGFibGUge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLl9lbWl0VmFsdWUodmFsdWUpXG4gIH1cbiAgZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLl9jdXJyZW50RXZlbnQudmFsdWVcbiAgfVxuICBtb2RpZnkoZm4pIHtcbiAgICB0aGlzLl9tYXliZUVtaXRWYWx1ZShmbih0aGlzLmdldCgpKSlcbiAgfVxufVxuXG4vL1xuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZSA9PiBuZXcgQXRvbSh2YWx1ZSlcbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/kefir.atom/lib/kefir.atom.js\n ** module id = 289\n ** module chunks = 2\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lift = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _ramda = require(\"ramda\");\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n\nvar deleteKey = function deleteKey(k, o) {\n  if (o === undefined || !(k in o)) return o;\n  var r = undefined;\n  for (var p in o) {\n    if (p !== k) {\n      if (undefined === r) r = {};\n      r[p] = o[p];\n    }\n  }\n  return r;\n};\n\nvar setKey = function setKey(k, v, o) {\n  if (o === undefined) return _defineProperty({}, k, v);\n  if (k in o && _ramda2.default.equals(v, o[k])) return o;\n  var r = _defineProperty({}, k, v);\n  for (var p in o) {\n    if (p !== k) r[p] = o[p];\n  }return r;\n};\n\n//\n\nvar dropped = function dropped(xs) {\n  return Object.keys(xs).length === 0 ? undefined : xs;\n};\n\n//\n\nvar toPartial = function toPartial(transform) {\n  return function (x) {\n    return undefined === x ? x : transform(x);\n  };\n};\n\n//\n\nvar conserve = function conserve(c0, c1) {\n  return _ramda2.default.equals(c0, c1) ? c0 : c1;\n};\n\nvar toConserve = function toConserve(f) {\n  return function (y, c0) {\n    return conserve(c0, f(y, c0));\n  };\n};\n\n//\n\nvar lift = exports.lift = function lift(l) {\n  switch (typeof l === \"undefined\" ? \"undefined\" : _typeof(l)) {\n    case \"string\":\n      return L.prop(l);\n    case \"number\":\n      return L.index(l);\n    default:\n      return l;\n  }\n};\n\nvar L = function L(l) {\n  for (var _len = arguments.length, ls = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    ls[_key - 1] = arguments[_key];\n  }\n\n  return ls.length === 0 ? lift(l) : _ramda2.default.compose.apply(_ramda2.default, [lift(l)].concat(_toConsumableArray(ls.map(lift))));\n};\n\nL.compose = L;\nL.delete = _ramda2.default.curry(function (l, s) {\n  return _ramda2.default.set(lift(l), undefined, s);\n});\nL.deleteAll = _ramda2.default.curry(function (lens, data) {\n  while (L.view(lens, data) !== undefined) {\n    data = L.delete(lens, data);\n  }return data;\n});\nL.lens = _ramda2.default.lens;\nL.over = _ramda2.default.curry(function (l, x2x, s) {\n  return _ramda2.default.over(lift(l), x2x, s);\n});\nL.set = _ramda2.default.curry(function (l, x, s) {\n  return _ramda2.default.set(lift(l), x, s);\n});\nL.view = _ramda2.default.curry(function (l, s) {\n  return _ramda2.default.view(lift(l), s);\n});\n\nL.choose = function (x2yL) {\n  return function (toFunctor) {\n    return function (target) {\n      var l = lift(x2yL(target));\n      return _ramda2.default.map(function (focus) {\n        return _ramda2.default.set(l, focus, target);\n      }, toFunctor(_ramda2.default.view(l, target)));\n    };\n  };\n};\n\nL.firstOf = function (l) {\n  for (var _len2 = arguments.length, ls = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    ls[_key2 - 1] = arguments[_key2];\n  }\n\n  return L.choose(function (x) {\n    var lls = [l].concat(ls);\n    return lls[Math.max(0, lls.findIndex(function (l) {\n      return L.view(l, x) !== undefined;\n    }))];\n  });\n};\n\nL.replace = _ramda2.default.curry(function (inn, out) {\n  return _ramda2.default.lens(function (x) {\n    return _ramda2.default.equals(x, inn) ? out : x;\n  }, toConserve(function (y) {\n    return _ramda2.default.equals(y, out) ? inn : y;\n  }));\n});\n\nL.default = L.replace(undefined);\nL.required = function (inn) {\n  return L.replace(inn, undefined);\n};\nL.define = function (v) {\n  return _ramda2.default.compose(L.required(v), L.default(v));\n};\n\nL.normalize = function (transform) {\n  return _ramda2.default.lens(toPartial(transform), toConserve(toPartial(transform)));\n};\n\nL.prop = function (k) {\n  return _ramda2.default.lens(function (o) {\n    return o && o[k];\n  }, function (v, o) {\n    return v === undefined ? deleteKey(k, o) : setKey(k, v, o);\n  });\n};\n\nL.find = function (predicate) {\n  return L.choose(function (xs) {\n    if (xs === undefined) return L.append;\n    var i = xs.findIndex(predicate);\n    return i < 0 ? L.append : i;\n  });\n};\n\nL.findWith = function (l) {\n  for (var _len3 = arguments.length, ls = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    ls[_key3 - 1] = arguments[_key3];\n  }\n\n  var lls = L.apply(undefined, [l].concat(ls));\n  return L(L.find(function (x) {\n    return L.view(lls, x) !== undefined;\n  }), lls);\n};\n\nL.index = function (i) {\n  return _ramda2.default.lens(function (xs) {\n    return xs && xs[i];\n  }, function (x, xs) {\n    if (x === undefined) {\n      if (xs === undefined) return undefined;\n      if (i < xs.length) return dropped(xs.slice(0, i).concat(xs.slice(i + 1)));\n      return xs;\n    } else {\n      if (xs === undefined) return Array(i).concat([x]);\n      if (xs.length <= i) return xs.concat(Array(i - xs.length), [x]);\n      if (_ramda2.default.equals(x, xs[i])) return xs;\n      return xs.slice(0, i).concat([x], xs.slice(i + 1));\n    }\n  });\n};\n\nL.append = _ramda2.default.lens(function () {}, function (x, xs) {\n  return x === undefined ? xs : xs === undefined ? [x] : xs.concat([x]);\n});\n\nL.filter = function (p) {\n  return _ramda2.default.lens(function (xs) {\n    return xs && xs.filter(p);\n  }, function (ys, xs) {\n    return conserve(xs, dropped(_ramda2.default.concat(ys || [], (xs || []).filter(_ramda2.default.complement(p)))));\n  });\n};\n\nL.augment = function (template) {\n  return _ramda2.default.lens(toPartial(function (x) {\n    var z = _extends({}, x);\n    for (var k in template) {\n      z[k] = template[k](x);\n    }return z;\n  }), toConserve(function (y, c) {\n    if (y === undefined) return undefined;\n    var z = undefined;\n    var set = function set(k, v) {\n      if (undefined === z) z = {};\n      z[k] = v;\n    };\n    for (var k in y) {\n      if (!(k in template)) set(k, y[k]);else if (k in c) set(k, c[k]);\n    }\n    return z;\n  }));\n};\n\nexports.default = L;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXJ0aWFsLmxlbnNlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUlBLElBQU0sWUFBWSxTQUFaLFNBQVksQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFVO0FBQzFCLE1BQUksTUFBTSxTQUFOLElBQW1CLEVBQUUsS0FBSyxDQUFMLENBQUYsRUFDckIsT0FBTyxDQUFQLENBREY7QUFFQSxNQUFJLGFBQUosQ0FIMEI7QUFJMUIsT0FBSyxJQUFNLENBQU4sSUFBVyxDQUFoQixFQUFtQjtBQUNqQixRQUFJLE1BQU0sQ0FBTixFQUFTO0FBQ1gsVUFBSSxjQUFjLENBQWQsRUFDRixJQUFJLEVBQUosQ0FERjtBQUVBLFFBQUUsQ0FBRixJQUFPLEVBQUUsQ0FBRixDQUFQLENBSFc7S0FBYjtHQURGO0FBT0EsU0FBTyxDQUFQLENBWDBCO0NBQVY7O0FBY2xCLElBQU0sU0FBUyxTQUFULE1BQVMsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBYTtBQUMxQixNQUFJLE1BQU0sU0FBTixFQUNGLDJCQUFTLEdBQUksRUFBYixDQURGO0FBRUEsTUFBSSxLQUFLLENBQUwsSUFBVSxnQkFBRSxNQUFGLENBQVMsQ0FBVCxFQUFZLEVBQUUsQ0FBRixDQUFaLENBQVYsRUFDRixPQUFPLENBQVAsQ0FERjtBQUVBLE1BQU0sd0JBQU0sR0FBSSxFQUFWLENBTG9CO0FBTTFCLE9BQUssSUFBTSxDQUFOLElBQVcsQ0FBaEI7QUFDRSxRQUFJLE1BQU0sQ0FBTixFQUNGLEVBQUUsQ0FBRixJQUFPLEVBQUUsQ0FBRixDQUFQLENBREY7R0FERixPQUdPLENBQVAsQ0FUMEI7Q0FBYjs7OztBQWNmLElBQU0sVUFBVSxTQUFWLE9BQVU7U0FBTSxPQUFPLElBQVAsQ0FBWSxFQUFaLEVBQWdCLE1BQWhCLEtBQTJCLENBQTNCLEdBQStCLFNBQS9CLEdBQTJDLEVBQTNDO0NBQU47Ozs7QUFJaEIsSUFBTSxZQUFZLFNBQVosU0FB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QUFFQSxRQUFJLGFBQUosQ0FIbUI7QUFJbkIsUUFBTSxNQUFNLFNBQU4sR0FBTSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQVU7QUFDcEIsVUFBSSxjQUFjLENBQWQsRUFDRixJQUFJLEVBQUosQ0FERjtBQUVBLFFBQUUsQ0FBRixJQUFPLENBQVAsQ0FIb0I7S0FBVixDQUpPO0FBU25CLFNBQUssSUFBTSxDQUFOLElBQVcsQ0FBaEIsRUFBbUI7QUFDakIsVUFBSSxFQUFFLEtBQUssUUFBTCxDQUFGLEVBQ0YsSUFBSSxDQUFKLEVBQU8sRUFBRSxDQUFGLENBQVAsRUFERixLQUdFLElBQUksS0FBSyxDQUFMLEVBQ0YsSUFBSSxDQUFKLEVBQU8sRUFBRSxDQUFGLENBQVAsRUFERjtLQUpKO0FBT0EsV0FBTyxDQUFQLENBaEJtQjtHQUFWLENBUFc7Q0FBWjs7a0JBMEJHIiwiZmlsZSI6InBhcnRpYWwubGVuc2VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFIgZnJvbSBcInJhbWRhXCJcblxuLy9cblxuY29uc3QgZGVsZXRlS2V5ID0gKGssIG8pID0+IHtcbiAgaWYgKG8gPT09IHVuZGVmaW5lZCB8fCAhKGsgaW4gbykpXG4gICAgcmV0dXJuIG9cbiAgbGV0IHJcbiAgZm9yIChjb25zdCBwIGluIG8pIHtcbiAgICBpZiAocCAhPT0gaykge1xuICAgICAgaWYgKHVuZGVmaW5lZCA9PT0gcilcbiAgICAgICAgciA9IHt9XG4gICAgICByW3BdID0gb1twXVxuICAgIH1cbiAgfVxuICByZXR1cm4gclxufVxuXG5jb25zdCBzZXRLZXkgPSAoaywgdiwgbykgPT4ge1xuICBpZiAobyA9PT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiB7W2tdOiB2fVxuICBpZiAoayBpbiBvICYmIFIuZXF1YWxzKHYsIG9ba10pKVxuICAgIHJldHVybiBvXG4gIGNvbnN0IHIgPSB7W2tdOiB2fVxuICBmb3IgKGNvbnN0IHAgaW4gbylcbiAgICBpZiAocCAhPT0gaylcbiAgICAgIHJbcF0gPSBvW3BdXG4gIHJldHVybiByXG59XG5cbi8vXG5cbmNvbnN0IGRyb3BwZWQgPSB4cyA9PiBPYmplY3Qua2V5cyh4cykubGVuZ3RoID09PSAwID8gdW5kZWZpbmVkIDogeHNcblxuLy9cblxuY29uc3QgdG9QYXJ0aWFsID0gdHJhbnNmb3JtID0+IHggPT4gdW5kZWZpbmVkID09PSB4ID8geCA6IHRyYW5zZm9ybSh4KVxuXG4vL1xuXG5jb25zdCBjb25zZXJ2ZSA9IChjMCwgYzEpID0+IFIuZXF1YWxzKGMwLCBjMSkgPyBjMCA6IGMxXG5cbmNvbnN0IHRvQ29uc2VydmUgPSBmID0+ICh5LCBjMCkgPT4gY29uc2VydmUoYzAsIGYoeSwgYzApKVxuXG4vL1xuXG5leHBvcnQgY29uc3QgbGlmdCA9IGwgPT4ge1xuICBzd2l0Y2ggKHR5cGVvZiBsKSB7XG4gIGNhc2UgXCJzdHJpbmdcIjogcmV0dXJuIEwucHJvcChsKVxuICBjYXNlIFwibnVtYmVyXCI6IHJldHVybiBMLmluZGV4KGwpXG4gIGRlZmF1bHQ6ICAgICAgIHJldHVybiBsXG4gIH1cbn1cblxuY29uc3QgTCA9IChsLCAuLi5scykgPT5cbiAgbHMubGVuZ3RoID09PSAwID8gbGlmdChsKSA6IFIuY29tcG9zZShsaWZ0KGwpLCAuLi5scy5tYXAobGlmdCkpXG5cbkwuY29tcG9zZSA9IExcbkwuZGVsZXRlID0gUi5jdXJyeSgobCwgcykgPT4gUi5zZXQobGlmdChsKSwgdW5kZWZpbmVkLCBzKSlcbkwuZGVsZXRlQWxsID0gUi5jdXJyeSgobGVucywgZGF0YSkgPT4ge1xuICB3aGlsZSAoTC52aWV3KGxlbnMsIGRhdGEpICE9PSB1bmRlZmluZWQpXG4gICAgZGF0YSA9IEwuZGVsZXRlKGxlbnMsIGRhdGEpXG4gIHJldHVybiBkYXRhXG59KVxuTC5sZW5zID0gUi5sZW5zXG5MLm92ZXIgPSBSLmN1cnJ5KChsLCB4MngsIHMpID0+IFIub3ZlcihsaWZ0KGwpLCB4MngsIHMpKVxuTC5zZXQgPSBSLmN1cnJ5KChsLCB4LCBzKSA9PiBSLnNldChsaWZ0KGwpLCB4LCBzKSlcbkwudmlldyA9IFIuY3VycnkoKGwsIHMpID0+IFIudmlldyhsaWZ0KGwpLCBzKSlcblxuTC5jaG9vc2UgPSB4MnlMID0+IHRvRnVuY3RvciA9PiB0YXJnZXQgPT4ge1xuICBjb25zdCBsID0gbGlmdCh4MnlMKHRhcmdldCkpXG4gIHJldHVybiBSLm1hcChmb2N1cyA9PiBSLnNldChsLCBmb2N1cywgdGFyZ2V0KSwgdG9GdW5jdG9yKFIudmlldyhsLCB0YXJnZXQpKSlcbn1cblxuTC5maXJzdE9mID0gKGwsIC4uLmxzKSA9PiBMLmNob29zZSh4ID0+IHtcbiAgY29uc3QgbGxzID0gW2wsIC4uLmxzXVxuICByZXR1cm4gbGxzW01hdGgubWF4KDAsIGxscy5maW5kSW5kZXgobCA9PiBMLnZpZXcobCwgeCkgIT09IHVuZGVmaW5lZCkpXVxufSlcblxuTC5yZXBsYWNlID0gUi5jdXJyeSgoaW5uLCBvdXQpID0+XG4gIFIubGVucyh4ID0+IFIuZXF1YWxzKHgsIGlubikgPyBvdXQgOiB4LFxuICAgICAgICAgdG9Db25zZXJ2ZSh5ID0+IFIuZXF1YWxzKHksIG91dCkgPyBpbm4gOiB5KSkpXG5cbkwuZGVmYXVsdCA9IEwucmVwbGFjZSh1bmRlZmluZWQpXG5MLnJlcXVpcmVkID0gaW5uID0+IEwucmVwbGFjZShpbm4sIHVuZGVmaW5lZClcbkwuZGVmaW5lID0gdiA9PiBSLmNvbXBvc2UoTC5yZXF1aXJlZCh2KSwgTC5kZWZhdWx0KHYpKVxuXG5MLm5vcm1hbGl6ZSA9IHRyYW5zZm9ybSA9PlxuICBSLmxlbnModG9QYXJ0aWFsKHRyYW5zZm9ybSksIHRvQ29uc2VydmUodG9QYXJ0aWFsKHRyYW5zZm9ybSkpKVxuXG5MLnByb3AgPSBrID0+XG4gIFIubGVucyhvID0+IG8gJiYgb1trXSxcbiAgICAgICAgICh2LCBvKSA9PiB2ID09PSB1bmRlZmluZWQgPyBkZWxldGVLZXkoaywgbykgOiBzZXRLZXkoaywgdiwgbykpXG5cbkwuZmluZCA9IHByZWRpY2F0ZSA9PiBMLmNob29zZSh4cyA9PiB7XG4gIGlmICh4cyA9PT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiBMLmFwcGVuZFxuICBjb25zdCBpID0geHMuZmluZEluZGV4KHByZWRpY2F0ZSlcbiAgcmV0dXJuIGkgPCAwID8gTC5hcHBlbmQgOiBpXG59KVxuXG5MLmZpbmRXaXRoID0gKGwsIC4uLmxzKSA9PiB7XG4gIGNvbnN0IGxscyA9IEwobCwgLi4ubHMpXG4gIHJldHVybiBMKEwuZmluZCh4ID0+IEwudmlldyhsbHMsIHgpICE9PSB1bmRlZmluZWQpLCBsbHMpXG59XG5cbkwuaW5kZXggPSBpID0+IFIubGVucyh4cyA9PiB4cyAmJiB4c1tpXSwgKHgsIHhzKSA9PiB7XG4gIGlmICh4ID09PSB1bmRlZmluZWQpIHtcbiAgICBpZiAoeHMgPT09IHVuZGVmaW5lZClcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICBpZiAoaSA8IHhzLmxlbmd0aClcbiAgICAgIHJldHVybiBkcm9wcGVkKHhzLnNsaWNlKDAsIGkpLmNvbmNhdCh4cy5zbGljZShpKzEpKSlcbiAgICByZXR1cm4geHNcbiAgfSBlbHNlIHtcbiAgICBpZiAoeHMgPT09IHVuZGVmaW5lZClcbiAgICAgIHJldHVybiBBcnJheShpKS5jb25jYXQoW3hdKVxuICAgIGlmICh4cy5sZW5ndGggPD0gaSlcbiAgICAgIHJldHVybiB4cy5jb25jYXQoQXJyYXkoaSAtIHhzLmxlbmd0aCksIFt4XSlcbiAgICBpZiAoUi5lcXVhbHMoeCwgeHNbaV0pKVxuICAgICAgcmV0dXJuIHhzXG4gICAgcmV0dXJuIHhzLnNsaWNlKDAsIGkpLmNvbmNhdChbeF0sIHhzLnNsaWNlKGkrMSkpXG4gIH1cbn0pXG5cbkwuYXBwZW5kID0gUi5sZW5zKCgpID0+IHt9LCAoeCwgeHMpID0+XG4gIHggPT09IHVuZGVmaW5lZCA/IHhzIDogeHMgPT09IHVuZGVmaW5lZCA/IFt4XSA6IHhzLmNvbmNhdChbeF0pKVxuXG5MLmZpbHRlciA9IHAgPT4gUi5sZW5zKHhzID0+IHhzICYmIHhzLmZpbHRlcihwKSwgKHlzLCB4cykgPT5cbiAgY29uc2VydmUoeHMsIGRyb3BwZWQoUi5jb25jYXQoeXMgfHwgW10sICh4cyB8fCBbXSkuZmlsdGVyKFIuY29tcGxlbWVudChwKSkpKSkpXG5cbkwuYXVnbWVudCA9IHRlbXBsYXRlID0+IFIubGVucyhcbiAgdG9QYXJ0aWFsKHggPT4ge1xuICAgIGNvbnN0IHogPSB7Li4ueH1cbiAgICBmb3IgKGNvbnN0IGsgaW4gdGVtcGxhdGUpXG4gICAgICB6W2tdID0gdGVtcGxhdGVba10oeClcbiAgICByZXR1cm4gelxuICB9KSxcbiAgdG9Db25zZXJ2ZSgoeSwgYykgPT4ge1xuICAgIGlmICh5ID09PSB1bmRlZmluZWQpXG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgbGV0IHpcbiAgICBjb25zdCBzZXQgPSAoaywgdikgPT4ge1xuICAgICAgaWYgKHVuZGVmaW5lZCA9PT0geilcbiAgICAgICAgeiA9IHt9XG4gICAgICB6W2tdID0gdlxuICAgIH1cbiAgICBmb3IgKGNvbnN0IGsgaW4geSkge1xuICAgICAgaWYgKCEoayBpbiB0ZW1wbGF0ZSkpXG4gICAgICAgIHNldChrLCB5W2tdKVxuICAgICAgZWxzZVxuICAgICAgICBpZiAoayBpbiBjKVxuICAgICAgICAgIHNldChrLCBjW2tdKVxuICAgIH1cbiAgICByZXR1cm4gelxuICB9KSlcblxuZXhwb3J0IGRlZmF1bHQgTFxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/partial.lenses/lib/partial.lenses.js\n ** module id = 329\n ** module chunks = 2\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/postcss-loader/index.js!./global.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/postcss-loader/index.js!./global.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/postcss-loader/index.js!./global.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./css/global.css\n ** module id = 453\n ** module chunks = 2\n **/"],"sourceRoot":""}